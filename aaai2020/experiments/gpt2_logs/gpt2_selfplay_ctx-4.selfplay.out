56e75d1acbe4fcfea80aede24612b97e22dabb02
diff --git a/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out b/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
index 6b2cb6a0..ef62db21 100644
--- a/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
+++ b/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
@@ -1,109 +1,178 @@
-> /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py(1)<module>()
--> import argparse
-(Pdb) a9901f7997aadd057810247e216b9a488aede96d
-diff --git a/aaai2020/experiments/domain.py b/aaai2020/experiments/domain.py
-index 25d98035..06881fee 100644
---- a/aaai2020/experiments/domain.py
-+++ b/aaai2020/experiments/domain.py
-@@ -146,7 +146,8 @@ class OneCommonDomain(Domain):
-             return 0
- 
-     def score_choices(self, choices, ctxs):
--        agree = (choices[0] == choices[1])
-+        dots1, dots2 = ctxs[-1]
-+        agree = (dots1[choices[0]] == dots2[choices[1]])
-         scores = [int(agree), int(agree)]
-         return agree, scores
- 
+ece90597a161446b2f6ec742e29dd465d7abf70e
 diff --git a/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out b/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
-index bb066b16..3f8ed5f3 100644
+index 6b2cb6a0..b6940c86 100644
 --- a/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
 +++ b/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
-@@ -1,129 +1,3 @@
- > /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py(1)<module>()
- -> import argparse
--(Pdb) b4e626d493cfde6f4f1af68223e3cbe4c7ea9b0e
+@@ -1,1095 +1 @@
+-> /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py(1)<module>()
+--> import argparse
+-(Pdb) a9901f7997aadd057810247e216b9a488aede96d
+-diff --git a/aaai2020/experiments/domain.py b/aaai2020/experiments/domain.py
+-index 25d98035..06881fee 100644
+---- a/aaai2020/experiments/domain.py
+-+++ b/aaai2020/experiments/domain.py
+-@@ -146,7 +146,8 @@ class OneCommonDomain(Domain):
+-             return 0
+- 
+-     def score_choices(self, choices, ctxs):
+--        agree = (choices[0] == choices[1])
+-+        dots1, dots2 = ctxs[-1]
+-+        agree = (dots1[choices[0]] == dots2[choices[1]])
+-         scores = [int(agree), int(agree)]
+-         return agree, scores
+- 
 -diff --git a/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out b/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
--index 860014f7..35c4feac 100644
+-index bb066b16..3f8ed5f3 100644
 ---- a/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
 -+++ b/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
--@@ -1,72 +1,3 @@
---c9b8f41948b97d02832e404aa39cc51528fedc23
---diff --git a/aaai2020/experiments/dialog.py b/aaai2020/experiments/dialog.py
---index c1a0f40b..f98d9aa1 100644
------ a/aaai2020/experiments/dialog.py
---+++ b/aaai2020/experiments/dialog.py
---@@ -382,12 +382,14 @@ class HierarchicalDialog(Dialog):
--- 
---         max_sentences = self.args.max_sentences
--- 
---+        """
---         for agent in self.agents:
---             assert [] == agent.model.args.ref_beliefs \
---                    == agent.model.args.partner_ref_beliefs \
---                    == agent.model.args.generation_beliefs \
---                    == agent.model.args.selection_beliefs \
---                    == agent.model.args.mention_beliefs
---+        """
---         belief_constructor = BlankBeliefConstructor()
--- 
---         for agent, agent_id, ctx, real_ids in zip(self.agents, [0, 1], ctxs[1], ctxs[2]):
---@@ -395,7 +397,8 @@ class HierarchicalDialog(Dialog):
---             agent.real_ids = real_ids
---             agent.agent_id = agent_id
--- 
----        device = self.agents[0].state.ctx_h.device
---+        #device = self.agents[0].state.ctx_h.device
---+        device = "cpu"
--- 
---         # Choose who goes first by random
---         if np.random.rand() < 0.5:
---@@ -403,8 +406,15 @@ class HierarchicalDialog(Dialog):
---         else:
---             reader, writer = self.agents
--- 
----        is_selection_prediction = vars(writer.model.args).get('is_selection_prediction', False)
----        is_selection_prediction_ = vars(reader.model.args).get('is_selection_prediction', False)
---+        try:
---+            is_selection_prediction = vars(writer.model.args).get('is_selection_prediction', False)
---+        except:
---+            is_selection_prediction = False
---+        try:
---+            is_selection_prediction_ = vars(reader.model.args).get('is_selection_prediction', False)
---+        except:
---+            is_selection_prediction_ = False
---+
---         if is_selection_prediction != is_selection_prediction_:
---             raise NotImplementedError("both models must use --is_selection_prediction or not")
--- 
---@@ -419,8 +429,8 @@ class HierarchicalDialog(Dialog):
---         sentence_ix = 0
--- 
---         while sentence_ix < max_sentences:
----            assert writer.state.turn == sentence_ix
----            assert reader.state.turn == sentence_ix
---+            #assert writer.state.turn == sentence_ix
---+            #assert reader.state.turn == sentence_ix
--- 
---             if is_selection_prediction:
---                 is_selection_prob = writer.is_selection_outs[-1].sigmoid()
---diff --git a/aaai2020/experiments/gptdialog.py b/aaai2020/experiments/gptdialog.py
---index f1130e2b..e67b2921 100644
------ a/aaai2020/experiments/gptdialog.py
---+++ b/aaai2020/experiments/gptdialog.py
---@@ -429,7 +429,7 @@ class HierarchicalDialog(Dialog):
---             out_words = writer.write()
--- 
---             # READER
----            reader.read()
---+            reader.read(out_words)
--- 
---             words_left -= len(out_words)
---             length += len(out_words)
--+> /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py(1)<module>()
--+-> import argparse
--+(Pdb) b4e626d493cfde6f4f1af68223e3cbe4c7ea9b0e
--gpt_selfplay.py --context_file=shared_4 --cuda --markable_detector_file=serialized_models/markable_detector_with_dict_1.th --verbose --num_contexts 10 --log_file=gpt_logs/gpt_selfplay_ctx-4.selfplay.log
+-@@ -1,129 +1,3 @@
+- > /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py(1)<module>()
+- -> import argparse
+--(Pdb) b4e626d493cfde6f4f1af68223e3cbe4c7ea9b0e
+--diff --git a/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out b/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
+--index 860014f7..35c4feac 100644
+----- a/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
+--+++ b/aaai2020/experiments/gpt_logs/gpt_selfplay_ctx-4.selfplay.out
+--@@ -1,72 +1,3 @@
+---c9b8f41948b97d02832e404aa39cc51528fedc23
+---diff --git a/aaai2020/experiments/dialog.py b/aaai2020/experiments/dialog.py
+---index c1a0f40b..f98d9aa1 100644
+------ a/aaai2020/experiments/dialog.py
+---+++ b/aaai2020/experiments/dialog.py
+---@@ -382,12 +382,14 @@ class HierarchicalDialog(Dialog):
+--- 
+---         max_sentences = self.args.max_sentences
+--- 
+---+        """
+---         for agent in self.agents:
+---             assert [] == agent.model.args.ref_beliefs \
+---                    == agent.model.args.partner_ref_beliefs \
+---                    == agent.model.args.generation_beliefs \
+---                    == agent.model.args.selection_beliefs \
+---                    == agent.model.args.mention_beliefs
+---+        """
+---         belief_constructor = BlankBeliefConstructor()
+--- 
+---         for agent, agent_id, ctx, real_ids in zip(self.agents, [0, 1], ctxs[1], ctxs[2]):
+---@@ -395,7 +397,8 @@ class HierarchicalDialog(Dialog):
+---             agent.real_ids = real_ids
+---             agent.agent_id = agent_id
+--- 
+----        device = self.agents[0].state.ctx_h.device
+---+        #device = self.agents[0].state.ctx_h.device
+---+        device = "cpu"
+--- 
+---         # Choose who goes first by random
+---         if np.random.rand() < 0.5:
+---@@ -403,8 +406,15 @@ class HierarchicalDialog(Dialog):
+---         else:
+---             reader, writer = self.agents
+--- 
+----        is_selection_prediction = vars(writer.model.args).get('is_selection_prediction', False)
+----        is_selection_prediction_ = vars(reader.model.args).get('is_selection_prediction', False)
+---+        try:
+---+            is_selection_prediction = vars(writer.model.args).get('is_selection_prediction', False)
+---+        except:
+---+            is_selection_prediction = False
+---+        try:
+---+            is_selection_prediction_ = vars(reader.model.args).get('is_selection_prediction', False)
+---+        except:
+---+            is_selection_prediction_ = False
+---+
+---         if is_selection_prediction != is_selection_prediction_:
+---             raise NotImplementedError("both models must use --is_selection_prediction or not")
+--- 
+---@@ -419,8 +429,8 @@ class HierarchicalDialog(Dialog):
+---         sentence_ix = 0
+--- 
+---         while sentence_ix < max_sentences:
+----            assert writer.state.turn == sentence_ix
+----            assert reader.state.turn == sentence_ix
+---+            #assert writer.state.turn == sentence_ix
+---+            #assert reader.state.turn == sentence_ix
+--- 
+---             if is_selection_prediction:
+---                 is_selection_prob = writer.is_selection_outs[-1].sigmoid()
+---diff --git a/aaai2020/experiments/gptdialog.py b/aaai2020/experiments/gptdialog.py
+---index f1130e2b..e67b2921 100644
+------ a/aaai2020/experiments/gptdialog.py
+---+++ b/aaai2020/experiments/gptdialog.py
+---@@ -429,7 +429,7 @@ class HierarchicalDialog(Dialog):
+---             out_words = writer.write()
+--- 
+---             # READER
+----            reader.read()
+---+            reader.read(out_words)
+--- 
+---             words_left -= len(out_words)
+---             length += len(out_words)
+--+> /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py(1)<module>()
+--+-> import argparse
+--+(Pdb) b4e626d493cfde6f4f1af68223e3cbe4c7ea9b0e
+--gpt_selfplay.py --context_file=shared_4 --cuda --markable_detector_file=serialized_models/markable_detector_with_dict_1.th --verbose --num_contexts 10 --log_file=gpt_logs/gpt_selfplay_ctx-4.selfplay.log
+--{'alice_forward_model_file': None,
+-- 'alice_model_file': None,
+-- 'belief_alice': False,
+-- 'belief_bob': False,
+-- 'bob_model_file': None,
+-- 'bsz': 16,
+-- 'context_file': 'shared_4',
+-- 'cuda': True,
+-- 'data': 'data/onecommon',
+-- 'dialog_log_dir': 'analysis_log',
+-- 'domain': 'one_common',
+-- 'eps': 0.0,
+-- 'log_attention': False,
+-- 'log_file': 'gpt_logs/gpt_selfplay_ctx-4.selfplay.log',
+-- 'markable_detector_file': 'serialized_models/markable_detector_with_dict_1.th',
+-- 'markables_file': 'selfplay_markables.json',
+-- 'max_turns': 20,
+-- 'must_contain': None,
+-- 'num_contexts': 10,
+-- 'plot_metrics': False,
+-- 'record_markables': False,
+-- 'ref_text': None,
+-- 'referents_file': 'selfplay_referents.json',
+-- 'repeat_selfplay': False,
+-- 'rollout_bsz': 3,
+-- 'rollout_count_threshold': 3,
+-- 'rollout_model_file': '',
+-- 'seed': 1,
+-- 'selection_model_file': '',
+-- 'smart_alice': False,
+-- 'smart_bob': False,
+-- 'symbolic': False,
+-- 'unk_threshold': 10,
+-- 'verbose': True,
+-- 'visual': False}
+--Uncaught exception. Entering post mortem debugging
+--Running 'cont' or 'step' will restart the program
+--> /home/justinchiu/research/onecommon-gpt/oc/agent/planner.py(68)plan_start()
+---> confirmation = self.plans[-1].sum() > 0,
+--(Pdb) []
+--(Pdb) 
+--Post mortem debugger finished. The /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py will be restarted
+--> /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py(1)<module>()
+---> import argparse
+--(Pdb) 
+-+(Pdb) a9901f7997aadd057810247e216b9a488aede96d
+-diff --git a/aaai2020/experiments/gpt_selfplay.py b/aaai2020/experiments/gpt_selfplay.py
+-index 36ffc063..8fe5088d 100644
+---- a/aaai2020/experiments/gpt_selfplay.py
+-+++ b/aaai2020/experiments/gpt_selfplay.py
+-@@ -48,10 +48,7 @@ class SelfPlay(object):
+-         success = 0
+-         for ctxs in self.ctx_gen.iter():
+-             n += 1
+--            # DEBUG
+--            if n < 5:
+--                continue
+--            # / DEBUG
+-+            if n < 6: continue
+-             if self.args.smart_alice and n > max_n:
+-                 break
+-             if n > max_n:
+-gpt_selfplay.py --context_file=shared_4 --markable_detector_file=serialized_models/markable_detector_with_dict_1.th --verbose --num_contexts 10 --log_file=gpt_logs/gpt_selfplay_ctx-4.selfplay.log
 -{'alice_forward_model_file': None,
 - 'alice_model_file': None,
 - 'belief_alice': False,
@@ -111,7 +180,7 @@ index bb066b16..3f8ed5f3 100644
 - 'bob_model_file': None,
 - 'bsz': 16,
 - 'context_file': 'shared_4',
-- 'cuda': True,
+- 'cuda': False,
 - 'data': 'data/onecommon',
 - 'dialog_log_dir': 'analysis_log',
 - 'domain': 'one_common',
@@ -139,34 +208,900 @@ index bb066b16..3f8ed5f3 100644
 - 'unk_threshold': 10,
 - 'verbose': True,
 - 'visual': False}
+-Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey
+-
+-import sys
+-sys.path.append("fns")
+-
+-from oc.fns.context import get_ctx
+-from oc.fns.shapes import is_triangle, is_line, is_square
+-from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+-from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+-from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+-from oc.fns.spatial import get_middle
+-from oc.fns.spatial import get_distance, get_minimum_radius
+-from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+-from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+-from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+-from oc.fns.lists import add
+-from oc.fns.lists import sort_state
+-import numpy as np
+-from functools import partial
+-from itertools import permutations
+-
+-
+-def get_ctx():
+-    ctx = np.array([[0.56, 0.31, 0.3333333333333333, -0.26666666666666666], [-0.55, 0.63, 0.6666666666666666, 0.7866666666666666], [0.32, -0.275, -0.3333333333333333, -0.7066666666666667], [-0.76, -0.06, -0.6666666666666666, -0.5733333333333334], [0.035, -0.995, 0.6666666666666666, -1.0], [0.9, -0.335, -0.6666666666666666, 0.24], [0.16, 0.77, 0.6666666666666666, 0.22666666666666666]])
+-    return ctx
+-
+-
+-
+-idxs = list(range(7))
+-
+-# New.
+-ctx = get_ctx()
+-state = set()
+-
+-# Them: Got a triangle of 3 light grey dots by itself.
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 3):
+-        for x,y,z in permutations(config):
+-            check_xyz_triangle = is_triangle([x,y,z], ctx)
+-            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])
+-            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])
+-            if (
+-                check_xyz_triangle
+-                and check_xyz_light
+-                and check_xyz_alone
+-            ):
+-                dots = frozenset([x,y,z])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Could be. One on right is largest with a tiny gray on top??
+-def turn(state):
+-    # Follow up question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_right = a == get_right([a,b,c], ctx)
+-            check_a_largest = a == largest([a,b,c], ctx)
+-            check_b_tiny = is_small(b, ctx)
+-            check_b_grey = is_grey(b, ctx)
+-            check_b_top = b == get_top([a,b,c], ctx)
+-            if (
+-                check_a_right
+-                and check_a_largest
+-                and check_b_tiny
+-                and check_b_grey
+-                and check_b_top
+-            ):
+-                dots = frozenset([a,b,c])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 2):
+-        for x, y in permutations(config):
+-            check_xy_pair = all_close([x,y], ctx)
+-            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)
+-            check_y_right_x = is_right(y, x, ctx)
+-            check_y_above_x = is_above(y, x, ctx)
+-            check_xy_same_size = same_size([x,y], ctx)
+-            if (
+-                check_xy_pair
+-                and check_xy_dark
+-                and check_y_right_x
+-                and check_y_above_x
+-                and check_xy_same_size
+-            ):
+-                dots = frozenset([x,y])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: No.
+-def turn(state):
+-    # New question.
+-    return []
+-state = turn(state)
+-# End.
+-
+-# Them: What about a large medium grey dot near the center?
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 1):
+-        for x, in permutations(config):
+-            check_x_large = is_large(x, ctx)
+-            check_x_grey = is_grey(x, ctx)
+-            check_x_center = is_middle(x, None, ctx)
+-            if (
+-                check_x_large
+-                and check_x_grey
+-                and check_x_center
+-            ):
+-                dots = frozenset([x])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Is there a smaller black one next to it?
+-def turn(state):
+-    # Follow up question, new dot.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a, in permutations(config):
+-            for x, in get1idxs(idxs, exclude=[a]):
+-                check_x_smaller_a = is_smaller(x, a, ctx)
+-                check_x_dark = is_dark(x, ctx)
+-                check_x_next_to_a = all_close([a,x], ctx)
+-                if(
+-                    check_x_smaller_a
+-                    and check_x_dark
+-                    and check_x_next_to_a
+-                ):
+-                    dots = frozenset([a,x])
+-                    if dots not in results:
+-                        results.add(dots)
+-                        orderedresults.append(dots)
+-                        parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 3):
+-        for x,y,z in permutations(config):
+-            check_xyz_line = is_line([x,y,z], ctx)
+-            check_x_top_left = x == get_top_left([x, y, z], ctx)
+-            check_x_light = is_light(x, ctx)
+-            check_y_middle = is_middle(y, [x,y,z], ctx)
+-            check_y_grey = is_grey(y, ctx)
+-            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)
+-            check_z_dark = is_dark(z, ctx)
+-            if (
+-                check_xyz_line
+-                and check_x_top_left
+-                and check_x_light
+-                and check_y_middle
+-                and check_y_grey
+-                and check_z_bottom_right
+-                and check_z_dark
+-            ):
+-                dots = frozenset([x,y,z])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Yes. Is the top one close to the middle darker one?
+-def turn(state):
+-    # Follow up question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_top = a == get_top([a,b,c], ctx)
+-            check_b_middle = b == get_middle([a,b,c], ctx)
+-            check_ab_close = all_close([a, b], ctx)
+-            check_b_darker_a = is_darker(b, a, ctx)
+-            if (
+-                check_a_top
+-                and check_b_middle
+-                and check_ab_close
+-                and check_b_darker_a
+-            ):
+-                results.add(frozenset([a,b,c]))
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# Them: Yes. And the smallest is on the bottom right.
+-def turn(state):
+-    # Follow up question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_smallest = a == smallest([a,b,c], ctx)
+-            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)
+-            if (
+-                check_a_smallest
+-                and check_a_bottom_right
+-            ):
+-                dots = frozenset([a,b,c])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Yes, let's select the large one. <selection>.
+-def select(state):
+-    # Select a dot.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_large = is_large(a, ctx)
+-            check_b_not_large = not is_large(b, ctx)
+-            check_c_not_large = not is_large(c, ctx)
+-            if (
+-                check_a_large
+-                and check_b_not_large
+-                and check_c_not_large
+-            ):
+-                dots = frozenset([a])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=True)
+-state = select(state)
+-# End.
+-
+-# New.
+-ctx = get_ctx()
+-state = []
+-
+-# You: Do you see a large black dot on the bottom left?
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 1):
+-        for x, in permutations(config):
+-            check_x_large = is_large(x, ctx)
+-            check_x_dark = is_dark(x, ctx)
+-            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)
+-            if (
+-                check_x_large
+-                and check_x_dark
+-                and check_x_below_left
+-            ):
+-                dots = frozenset([x])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+- 
+-# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 3):
+-        for x,y,z in permutations(config):
+-            check_xyz_close = all_close([x,y,z], ctx)
+-            check_x_large = is_large(x, ctx)
+-            check_z_dark = is_dark(z, ctx)
+-            check_y_smaller_x = is_smaller(y, x, ctx)
+-            check_z_smaller_x = is_smaller(z, x, ctx)
+-            check_y_lighter_x = is_lighter(y, x, ctx)
+-            check_z_lighter_x = is_lighter(z, x, ctx)
+-            check_yz_same_size = same_size([y,z], ctx)
+-            check_yz_same_color = same_color([y,z], ctx)
+-            if (
+-                check_xyz_close
+-                and check_x_large
+-                and check_z_dark
+-                and check_y_smaller_x
+-                and check_z_smaller_x
+-                and check_y_lighter_x
+-                and check_z_lighter_x
+-                and check_yz_same_size
+-                and check_yz_same_color
+-            ):
+-                dots = frozenset([x,y,z])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Select the largest one.
+-def select(state):
+-    # Select a dot.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_largest = a == get_largest([a,b,c], ctx)
+-            if (
+-                check_a_largest
+-            ):
+-                dots = frozenset([a])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=True)
+-state = select(state)
+-# End.
+- 
+-# Them: Okay.
+-def noop(state):
+-    # No op.
+-    return state
+-state = noop(state)
+-# End.
+- 
+-# You: Okay. <selection>.
+-def noop(state):
+-    # No op.
+-    return state
+-state = noop(state)
+-# End.
+-
+-
+-# New.
+-ctx = get_ctx()
+-state = set()
+-
+-# You: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey?
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 2):
+-        for x, y in permutations(config):
+-            check_xy_pair = all_close([x,y], ctx)
+-            check_x_left = is_left(x, y, ctx)
+-            check_x_small = is_small(x, ctx)
+-            check_x_dark = is_dark(x, ctx)
+-            check_y_right = is_right(y, x, ctx)
+-            check_y_small = is_small(y, ctx)
+-            check_y_grey = is_grey(y, ctx)
+-            if (
+-                check_xy_pair
+-                and check_x_left
+-                and check_x_small
+-                and check_x_dark
+-                and check_y_right
+-                and check_y_small
+-                and check_y_grey
+-            ):
+-                dots = frozenset([x,y])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-
+-
+-print([tuple(x) for x in state])
+-
+-#print(sorted(
+-#    [tuple(x) for x in state],
+-#    key = lambda x: get_minimum_radius(x, ctx),
+-#))
+-[(2, 5)]
+-
+-import sys
+-sys.path.append("fns")
+-
+-from oc.fns.context import get_ctx
+-from oc.fns.shapes import is_triangle, is_line, is_square
+-from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+-from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+-from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+-from oc.fns.spatial import get_middle
+-from oc.fns.spatial import get_distance, get_minimum_radius
+-from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+-from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+-from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+-from oc.fns.lists import add
+-from oc.fns.lists import sort_state
+-import numpy as np
+-from functools import partial
+-from itertools import permutations
+-
+-
+-def get_ctx():
+-    ctx = np.array([[0.545, -0.81, -0.3333333333333333, -0.14666666666666667], [0.66, 0.54, -1.0, 0.30666666666666664], [0.19, 0.57, 0.3333333333333333, -0.26666666666666666], [-0.055, -0.015, -0.3333333333333333, -0.7066666666666667], [-0.335, -0.735, 0.6666666666666666, -1.0], [0.63, 0.18, 0.6666666666666666, 0.7333333333333333], [0.525, -0.075, -0.6666666666666666, 0.24]])
+-    return ctx
+-
+-
+-
+-idxs = list(range(7))
+-
+-# New.
+-ctx = get_ctx()
+-state = set()
+-
+-# Them: Got a triangle of 3 light grey dots by itself.
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 3):
+-        for x,y,z in permutations(config):
+-            check_xyz_triangle = is_triangle([x,y,z], ctx)
+-            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])
+-            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])
+-            if (
+-                check_xyz_triangle
+-                and check_xyz_light
+-                and check_xyz_alone
+-            ):
+-                dots = frozenset([x,y,z])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Could be. One on right is largest with a tiny gray on top??
+-def turn(state):
+-    # Follow up question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_right = a == get_right([a,b,c], ctx)
+-            check_a_largest = a == largest([a,b,c], ctx)
+-            check_b_tiny = is_small(b, ctx)
+-            check_b_grey = is_grey(b, ctx)
+-            check_b_top = b == get_top([a,b,c], ctx)
+-            if (
+-                check_a_right
+-                and check_a_largest
+-                and check_b_tiny
+-                and check_b_grey
+-                and check_b_top
+-            ):
+-                dots = frozenset([a,b,c])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 2):
+-        for x, y in permutations(config):
+-            check_xy_pair = all_close([x,y], ctx)
+-            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)
+-            check_y_right_x = is_right(y, x, ctx)
+-            check_y_above_x = is_above(y, x, ctx)
+-            check_xy_same_size = same_size([x,y], ctx)
+-            if (
+-                check_xy_pair
+-                and check_xy_dark
+-                and check_y_right_x
+-                and check_y_above_x
+-                and check_xy_same_size
+-            ):
+-                dots = frozenset([x,y])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: No.
+-def turn(state):
+-    # New question.
+-    return []
+-state = turn(state)
+-# End.
+-
+-# Them: What about a large medium grey dot near the center?
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 1):
+-        for x, in permutations(config):
+-            check_x_large = is_large(x, ctx)
+-            check_x_grey = is_grey(x, ctx)
+-            check_x_center = is_middle(x, None, ctx)
+-            if (
+-                check_x_large
+-                and check_x_grey
+-                and check_x_center
+-            ):
+-                dots = frozenset([x])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Is there a smaller black one next to it?
+-def turn(state):
+-    # Follow up question, new dot.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a, in permutations(config):
+-            for x, in get1idxs(idxs, exclude=[a]):
+-                check_x_smaller_a = is_smaller(x, a, ctx)
+-                check_x_dark = is_dark(x, ctx)
+-                check_x_next_to_a = all_close([a,x], ctx)
+-                if(
+-                    check_x_smaller_a
+-                    and check_x_dark
+-                    and check_x_next_to_a
+-                ):
+-                    dots = frozenset([a,x])
+-                    if dots not in results:
+-                        results.add(dots)
+-                        orderedresults.append(dots)
+-                        parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 3):
+-        for x,y,z in permutations(config):
+-            check_xyz_line = is_line([x,y,z], ctx)
+-            check_x_top_left = x == get_top_left([x, y, z], ctx)
+-            check_x_light = is_light(x, ctx)
+-            check_y_middle = is_middle(y, [x,y,z], ctx)
+-            check_y_grey = is_grey(y, ctx)
+-            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)
+-            check_z_dark = is_dark(z, ctx)
+-            if (
+-                check_xyz_line
+-                and check_x_top_left
+-                and check_x_light
+-                and check_y_middle
+-                and check_y_grey
+-                and check_z_bottom_right
+-                and check_z_dark
+-            ):
+-                dots = frozenset([x,y,z])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Yes. Is the top one close to the middle darker one?
+-def turn(state):
+-    # Follow up question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_top = a == get_top([a,b,c], ctx)
+-            check_b_middle = b == get_middle([a,b,c], ctx)
+-            check_ab_close = all_close([a, b], ctx)
+-            check_b_darker_a = is_darker(b, a, ctx)
+-            if (
+-                check_a_top
+-                and check_b_middle
+-                and check_ab_close
+-                and check_b_darker_a
+-            ):
+-                results.add(frozenset([a,b,c]))
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# Them: Yes. And the smallest is on the bottom right.
+-def turn(state):
+-    # Follow up question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_smallest = a == smallest([a,b,c], ctx)
+-            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)
+-            if (
+-                check_a_smallest
+-                and check_a_bottom_right
+-            ):
+-                dots = frozenset([a,b,c])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Yes, let's select the large one. <selection>.
+-def select(state):
+-    # Select a dot.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_large = is_large(a, ctx)
+-            check_b_not_large = not is_large(b, ctx)
+-            check_c_not_large = not is_large(c, ctx)
+-            if (
+-                check_a_large
+-                and check_b_not_large
+-                and check_c_not_large
+-            ):
+-                dots = frozenset([a])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=True)
+-state = select(state)
+-# End.
+-
+-# New.
+-ctx = get_ctx()
+-state = []
+-
+-# You: Do you see a large black dot on the bottom left?
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 1):
+-        for x, in permutations(config):
+-            check_x_large = is_large(x, ctx)
+-            check_x_dark = is_dark(x, ctx)
+-            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)
+-            if (
+-                check_x_large
+-                and check_x_dark
+-                and check_x_below_left
+-            ):
+-                dots = frozenset([x])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+- 
+-# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 3):
+-        for x,y,z in permutations(config):
+-            check_xyz_close = all_close([x,y,z], ctx)
+-            check_x_large = is_large(x, ctx)
+-            check_z_dark = is_dark(z, ctx)
+-            check_y_smaller_x = is_smaller(y, x, ctx)
+-            check_z_smaller_x = is_smaller(z, x, ctx)
+-            check_y_lighter_x = is_lighter(y, x, ctx)
+-            check_z_lighter_x = is_lighter(z, x, ctx)
+-            check_yz_same_size = same_size([y,z], ctx)
+-            check_yz_same_color = same_color([y,z], ctx)
+-            if (
+-                check_xyz_close
+-                and check_x_large
+-                and check_z_dark
+-                and check_y_smaller_x
+-                and check_z_smaller_x
+-                and check_y_lighter_x
+-                and check_z_lighter_x
+-                and check_yz_same_size
+-                and check_yz_same_color
+-            ):
+-                dots = frozenset([x,y,z])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-# End.
+-
+-# You: Select the largest one.
+-def select(state):
+-    # Select a dot.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in state:
+-        for a,b,c in permutations(config):
+-            check_a_largest = a == get_largest([a,b,c], ctx)
+-            if (
+-                check_a_largest
+-            ):
+-                dots = frozenset([a])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=True)
+-state = select(state)
+-# End.
+- 
+-# Them: Okay.
+-def noop(state):
+-    # No op.
+-    return state
+-state = noop(state)
+-# End.
+- 
+-# You: Okay. <selection>.
+-def noop(state):
+-    # No op.
+-    return state
+-state = noop(state)
+-# End.
+-
+-
+-# New.
+-ctx = get_ctx()
+-state = set()
+-
+-# Them: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey?
+-def turn(state):
+-    # New question.
+-    results = set()
+-    orderedresults = []
+-    parents = []
+-    for config in getsets(idxs, 2):
+-        for x, y in permutations(config):
+-            check_xy_pair = all_close([x,y], ctx)
+-            check_x_left = is_left(x, y, ctx)
+-            check_x_small = is_small(x, ctx)
+-            check_x_dark = is_dark(x, ctx)
+-            check_y_right = is_right(y, x, ctx)
+-            check_y_small = is_small(y, ctx)
+-            check_y_grey = is_grey(y, ctx)
+-            if (
+-                check_xy_pair
+-                and check_x_left
+-                and check_x_small
+-                and check_x_dark
+-                and check_y_right
+-                and check_y_small
+-                and check_y_grey
+-            ):
+-                dots = frozenset([x,y])
+-                if dots not in results:
+-                    results.add(dots)
+-                    orderedresults.append(dots)
+-                    parents.append(config)
+-    return sort_state(orderedresults, parents, ctx, select=False)
+-state = turn(state)
+-
+-
+-print([tuple(x) for x in state])
+-
+-#print(sorted(
+-#    [tuple(x) for x in state],
+-#    key = lambda x: get_minimum_radius(x, ctx),
+-#))
+-[(3, 6)]
 -Uncaught exception. Entering post mortem debugging
 -Running 'cont' or 'step' will restart the program
--> /home/justinchiu/research/onecommon-gpt/oc/agent/planner.py(68)plan_start()
---> confirmation = self.plans[-1].sum() > 0,
--(Pdb) []
--(Pdb) 
--Post mortem debugger finished. The /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py will be restarted
--> /home/justinchiu/research/onecommon/aaai2020/experiments/gpt_selfplay.py(1)<module>()
---> import argparse
+-> /home/justinchiu/research/onecommon-gpt/oc/agent/planner.py(146)plan_select()
+--> ridx2 = revsuc[ridx1+1:].index(True) + ridx1 + 1
+-(Pdb) 141  	        """
+-142  	
+-143  	        pred_successes = [x.sum() > 0 for x in self.preds]
+-144  	        revsuc = list(reversed(pred_successes))
+-145  	        ridx1 = revsuc.index(True)
+-146  ->	        ridx2 = revsuc[ridx1+1:].index(True) + ridx1 + 1
+-147  	
+-148  	        idx1 = len(self.preds) - ridx1 - 1
+-149  	        idx2 = len(self.preds) - ridx2 - 1
+-150  	        dots = self.preds[idx1][0]
+-151  	        olddots = self.preds[idx2][0]
+-(Pdb) array([0.00807981, 0.00616085, 0.00616085, 0.00444754, 0.00616085,
+-       0.0030832 , 0.00253   , 0.002163  , 0.00616085, 0.02328044,
+-       0.0038521 , 0.02263908, 0.00373881, 0.01903148, 0.00227178,
+-       0.01851907, 0.00616085, 0.00382523, 0.00406522, 0.00285194,
+-       0.00235879, 0.00186035, 0.00162233, 0.00136413, 0.00398931,
+-       0.02030657, 0.0025581 , 0.02013583, 0.0023527 , 0.01661104,
+-       0.00148377, 0.01648201, 0.00616085, 0.00399703, 0.00436754,
+-       0.00306403, 0.00190755, 0.0019439 , 0.00174298, 0.00146558,
+-       0.00347161, 0.02034587, 0.00265381, 0.02163331, 0.00204739,
+-       0.01664318, 0.00153929, 0.01770776, 0.00423663, 0.00267112,
+-       0.00291873, 0.00201386, 0.00157633, 0.00127765, 0.00114559,
+-       0.00098633, 0.00266596, 0.0188592 , 0.00180637, 0.02006552,
+-       0.00154633, 0.01543704, 0.00107283, 0.01643511, 0.00616085,
+-       0.00380948, 0.00328246, 0.00267252, 0.0035173 , 0.00211354,
+-       0.00182114, 0.0014583 , 0.01873272, 0.0193912 , 0.01580252,
+-       0.0188691 , 0.0164351 , 0.01586226, 0.01385149, 0.01544514,
+-       0.00231844, 0.00229858, 0.00210484, 0.00168547, 0.00130869,
+-       0.00125425, 0.00114853, 0.00094172, 0.01633978, 0.01692501,
+-       0.01455584, 0.01679355, 0.01434487, 0.01385382, 0.01276697,
+-       0.01375513, 0.00247389, 0.00240181, 0.00226138, 0.00181082,
+-       0.00137254, 0.00131058, 0.00123395, 0.00101175, 0.01421934,
+-       0.01695776, 0.01510047, 0.01804246, 0.01248331, 0.01388063,
+-       0.01324466, 0.01477808, 0.00165324, 0.00157861, 0.00148631,
+-       0.00121867, 0.00090211, 0.00088201, 0.00083044, 0.00076112,
+-       0.01514584, 0.01572882, 0.01450502, 0.01674576, 0.01330528,
+-       0.01288304, 0.01273064, 0.0137249 ])
 -(Pdb) 
-+(Pdb) a9901f7997aadd057810247e216b9a488aede96d
-diff --git a/aaai2020/experiments/gpt_selfplay.py b/aaai2020/experiments/gpt_selfplay.py
-index 36ffc063..8fe5088d 100644
---- a/aaai2020/experiments/gpt_selfplay.py
-+++ b/aaai2020/experiments/gpt_selfplay.py
-@@ -48,10 +48,7 @@ class SelfPlay(object):
-         success = 0
-         for ctxs in self.ctx_gen.iter():
-             n += 1
--            # DEBUG
--            if n < 5:
--                continue
--            # / DEBUG
-+            if n < 6: continue
-             if self.args.smart_alice and n > max_n:
-                 break
-             if n > max_n:
-gpt_selfplay.py --context_file=shared_4 --markable_detector_file=serialized_models/markable_detector_with_dict_1.th --verbose --num_contexts 10 --log_file=gpt_logs/gpt_selfplay_ctx-4.selfplay.log
+\ No newline at end of file
++ece90597a161446b2f6ec742e29dd465d7abf70e
+gpt_selfplay.py --context_file=shared_4 --markable_detector_file=serialized_models/markable_detector_with_dict_1.th --verbose --num_contexts 50 --log_file=gpt_logs/gpt_selfplay_ctx-4.selfplay.log
 {'alice_forward_model_file': None,
  'alice_model_file': None,
  'belief_alice': False,
@@ -185,7 +1120,7 @@ gpt_selfplay.py --context_file=shared_4 --markable_detector_file=serialized_mode
  'markables_file': 'selfplay_markables.json',
  'max_turns': 20,
  'must_contain': None,
- 'num_contexts': 10,
+ 'num_contexts': 50,
  'plot_metrics': False,
  'record_markables': False,
  'ref_text': None,
@@ -202,11 +1137,79 @@ gpt_selfplay.py --context_file=shared_4 --markable_detector_file=serialized_mode
  'unk_threshold': 10,
  'verbose': True,
  'visual': False}
-Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey
+Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is large-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
 
-import sys
-sys.path.append("fns")
 
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is large-sized and grey?
+Type:
+Classify: 2.5209728849986277 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
 from oc.fns.context import get_ctx
 from oc.fns.shapes import is_triangle, is_line, is_square
 from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
@@ -223,413 +1226,549 @@ import numpy as np
 from functools import partial
 from itertools import permutations
 
+```
+`idxs = list(range(7))` corresponds to the available dots.
 
-def get_ctx():
-    ctx = np.array([[0.56, 0.31, 0.3333333333333333, -0.26666666666666666], [-0.55, 0.63, 0.6666666666666666, 0.7866666666666666], [0.32, -0.275, -0.3333333333333333, -0.7066666666666667], [-0.76, -0.06, -0.6666666666666666, -0.5733333333333334], [0.035, -0.995, 0.6666666666666666, -1.0], [0.9, -0.335, -0.6666666666666666, 0.24], [0.16, 0.77, 0.6666666666666666, 0.22666666666666666]])
-    return ctx
+Here are some examples.
 
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
 
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
 
-idxs = list(range(7))
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
 
-# New.
-ctx = get_ctx()
-state = set()
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
 
-# Them: Got a triangle of 3 light grey dots by itself.
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 3):
-        for x,y,z in permutations(config):
-            check_xyz_triangle = is_triangle([x,y,z], ctx)
-            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])
-            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])
-            if (
-                check_xyz_triangle
-                and check_xyz_light
-                and check_xyz_alone
-            ):
-                dots = frozenset([x,y,z])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
 
-# You: Could be. One on right is largest with a tiny gray on top??
-def turn(state):
-    # Follow up question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_right = a == get_right([a,b,c], ctx)
-            check_a_largest = a == largest([a,b,c], ctx)
-            check_b_tiny = is_small(b, ctx)
-            check_b_grey = is_grey(b, ctx)
-            check_b_top = b == get_top([a,b,c], ctx)
-            if (
-                check_a_right
-                and check_a_largest
-                and check_b_tiny
-                and check_b_grey
-                and check_b_top
-            ):
-                dots = frozenset([a,b,c])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
 
-# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 2):
-        for x, y in permutations(config):
-            check_xy_pair = all_close([x,y], ctx)
-            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)
-            check_y_right_x = is_right(y, x, ctx)
-            check_y_above_x = is_above(y, x, ctx)
-            check_xy_same_size = same_size([x,y], ctx)
-            if (
-                check_xy_pair
-                and check_xy_dark
-                and check_y_right_x
-                and check_y_above_x
-                and check_xy_same_size
-            ):
-                dots = frozenset([x,y])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
 
-# You: No.
-def turn(state):
-    # New question.
-    return []
-state = turn(state)
-# End.
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = is_above(a, b, ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom = is_below(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+88
+Understand: 17.17461584299963 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
 
-# Them: What about a large medium grey dot near the center?
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 1):
-        for x, in permutations(config):
-            check_x_large = is_large(x, ctx)
-            check_x_grey = is_grey(x, ctx)
-            check_x_center = is_middle(x, None, ctx)
-            if (
-                check_x_large
-                and check_x_grey
-                and check_x_center
-            ):
-                dots = frozenset([x])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
 
-# You: Is there a smaller black one next to it?
+def get_ctx():
+    ctx = np.array([[-0.295, 0.16, 0.6666666666666666, 0.6666666666666666], [-0.18, 0.435, 0.3333333333333333, 0.9866666666666667], [0.34, -0.19, -0.6666666666666666, 0.32], [0.4, -0.445, 1.0, 0.3333333333333333], [-0.65, 0.215, 0.3333333333333333, 0.06666666666666667], [0.6, 0.025, 0.0, 0.9466666666666667], [0.65, 0.575, 0.0, -0.21333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is large-sized and grey?
 def turn(state):
-    # Follow up question, new dot.
     results = set()
     orderedresults = []
     parents = []
-    for config in state:
-        for a, in permutations(config):
-            for x, in get1idxs(idxs, exclude=[a]):
-                check_x_smaller_a = is_smaller(x, a, ctx)
-                check_x_dark = is_dark(x, ctx)
-                check_x_next_to_a = all_close([a,x], ctx)
-                if(
-                    check_x_smaller_a
-                    and check_x_dark
-                    and check_x_next_to_a
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = is_above(a, b, ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom = is_below(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom
+                    and check_b_large
+                    and check_b_grey
+                    
                 ):
-                    dots = frozenset([a,x])
+                    dots = frozenset([a,b,])
                     if dots not in results:
                         results.add(dots)
                         orderedresults.append(dots)
                         parents.append(config)
     return sort_state(orderedresults, parents, ctx, select=False)
 state = turn(state)
-# End.
 
-# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 3):
-        for x,y,z in permutations(config):
-            check_xyz_line = is_line([x,y,z], ctx)
-            check_x_top_left = x == get_top_left([x, y, z], ctx)
-            check_x_light = is_light(x, ctx)
-            check_y_middle = is_middle(y, [x,y,z], ctx)
-            check_y_grey = is_grey(y, ctx)
-            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)
-            check_z_dark = is_dark(z, ctx)
-            if (
-                check_xyz_line
-                and check_x_top_left
-                and check_x_light
-                and check_y_middle
-                and check_y_grey
-                and check_z_bottom_right
-                and check_z_dark
-            ):
-                dots = frozenset([x,y,z])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
 
-# You: Yes. Is the top one close to the middle darker one?
-def turn(state):
-    # Follow up question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_top = a == get_top([a,b,c], ctx)
-            check_b_middle = b == get_middle([a,b,c], ctx)
-            check_ab_close = all_close([a, b], ctx)
-            check_b_darker_a = is_darker(b, a, ctx)
-            if (
-                check_a_top
-                and check_b_middle
-                and check_ab_close
-                and check_b_darker_a
-            ):
-                results.add(frozenset([a,b,c]))
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3)]
+Read after code: 19.714497070001016 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7097674933822775
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
 
-# Them: Yes. And the smallest is on the bottom right.
-def turn(state):
-    # Follow up question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_smallest = a == smallest([a,b,c], ctx)
-            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)
-            if (
-                check_a_smallest
-                and check_a_bottom_right
-            ):
-                dots = frozenset([a,b,c])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
 
-# You: Yes, let's select the large one. <selection>.
-def select(state):
-    # Select a dot.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_large = is_large(a, ctx)
-            check_b_not_large = not is_large(b, ctx)
-            check_c_not_large = not is_large(c, ctx)
-            if (
-                check_a_large
-                and check_b_not_large
-                and check_c_not_large
-            ):
-                dots = frozenset([a])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=True)
-state = select(state)
-# End.
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a medium-sized and light-colored dot to the right and above those?
+Type:
+Classify: 3.0094112789993233 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
 
-# New.
-ctx = get_ctx()
-state = []
+```
+`idxs = list(range(7))` corresponds to the available dots.
 
-# You: Do you see a large black dot on the bottom left?
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 1):
-        for x, in permutations(config):
-            check_x_large = is_large(x, ctx)
-            check_x_dark = is_dark(x, ctx)
-            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)
-            if (
-                check_x_large
-                and check_x_dark
-                and check_x_below_left
-            ):
-                dots = frozenset([x])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
- 
-# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 3):
-        for x,y,z in permutations(config):
-            check_xyz_close = all_close([x,y,z], ctx)
-            check_x_large = is_large(x, ctx)
-            check_z_dark = is_dark(z, ctx)
-            check_y_smaller_x = is_smaller(y, x, ctx)
-            check_z_smaller_x = is_smaller(z, x, ctx)
-            check_y_lighter_x = is_lighter(y, x, ctx)
-            check_z_lighter_x = is_lighter(z, x, ctx)
-            check_yz_same_size = same_size([y,z], ctx)
-            check_yz_same_color = same_color([y,z], ctx)
-            if (
-                check_xyz_close
-                and check_x_large
-                and check_z_dark
-                and check_y_smaller_x
-                and check_z_smaller_x
-                and check_y_lighter_x
-                and check_z_lighter_x
-                and check_yz_same_size
-                and check_yz_same_color
-            ):
-                dots = frozenset([x,y,z])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
+Here are some examples.
 
-# You: Select the largest one.
-def select(state):
-    # Select a dot.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_largest = a == get_largest([a,b,c], ctx)
-            if (
-                check_a_largest
-            ):
-                dots = frozenset([a])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=True)
-state = select(state)
-# End.
- 
-# Them: Okay.
-def noop(state):
-    # No op.
-    return state
-state = noop(state)
-# End.
- 
-# You: Okay. <selection>.
-def noop(state):
-    # No op.
-    return state
-state = noop(state)
-# End.
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
 
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
 
-# New.
-ctx = get_ctx()
-state = set()
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
 
-# You: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey?
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 2):
-        for x, y in permutations(config):
-            check_xy_pair = all_close([x,y], ctx)
-            check_x_left = is_left(x, y, ctx)
-            check_x_small = is_small(x, ctx)
-            check_x_dark = is_dark(x, ctx)
-            check_y_right = is_right(y, x, ctx)
-            check_y_small = is_small(y, ctx)
-            check_y_grey = is_grey(y, ctx)
-            if (
-                check_xy_pair
-                and check_x_left
-                and check_x_small
-                and check_x_dark
-                and check_y_right
-                and check_y_small
-                and check_y_grey
-            ):
-                dots = frozenset([x,y])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
 
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
 
-print([tuple(x) for x in state])
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
 
-#print(sorted(
-#    [tuple(x) for x in state],
-#    key = lambda x: get_minimum_radius(x, ctx),
-#))
-[(2, 5)]
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and light-colored dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_above = is_above(c, [a,b], ctx)
+```
+58
+Understand: 11.796101904999887 seconds
 
-import sys
-sys.path.append("fns")
 
 from oc.fns.context import get_ctx
 from oc.fns.shapes import is_triangle, is_line, is_square
@@ -649,447 +1788,86902 @@ from itertools import permutations
 
 
 def get_ctx():
-    ctx = np.array([[0.545, -0.81, -0.3333333333333333, -0.14666666666666667], [0.66, 0.54, -1.0, 0.30666666666666664], [0.19, 0.57, 0.3333333333333333, -0.26666666666666666], [-0.055, -0.015, -0.3333333333333333, -0.7066666666666667], [-0.335, -0.735, 0.6666666666666666, -1.0], [0.63, 0.18, 0.6666666666666666, 0.7333333333333333], [0.525, -0.075, -0.6666666666666666, 0.24]])
+    ctx = np.array([[0.42, -0.265, -0.3333333333333333, 0.8933333333333333], [-0.43, 0.135, -0.6666666666666666, 0.32], [-0.37, -0.12, 1.0, 0.3333333333333333], [0.305, -0.9, -0.3333333333333333, -0.92], [-0.475, -0.665, 0.0, 0.25333333333333335], [-0.17, 0.35, 0.0, 0.9466666666666667], [-0.12, 0.9, 0.0, -0.21333333333333335]])
     return ctx
 
-
-
 idxs = list(range(7))
 
 # New.
 ctx = get_ctx()
-state = set()
-
-# Them: Got a triangle of 3 light grey dots by itself.
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 3):
-        for x,y,z in permutations(config):
-            check_xyz_triangle = is_triangle([x,y,z], ctx)
-            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])
-            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])
-            if (
-                check_xyz_triangle
-                and check_xyz_light
-                and check_xyz_alone
-            ):
-                dots = frozenset([x,y,z])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
-
-# You: Could be. One on right is largest with a tiny gray on top??
-def turn(state):
-    # Follow up question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_right = a == get_right([a,b,c], ctx)
-            check_a_largest = a == largest([a,b,c], ctx)
-            check_b_tiny = is_small(b, ctx)
-            check_b_grey = is_grey(b, ctx)
-            check_b_top = b == get_top([a,b,c], ctx)
-            if (
-                check_a_right
-                and check_a_largest
-                and check_b_tiny
-                and check_b_grey
-                and check_b_top
-            ):
-                dots = frozenset([a,b,c])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
-
-# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 2):
-        for x, y in permutations(config):
-            check_xy_pair = all_close([x,y], ctx)
-            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)
-            check_y_right_x = is_right(y, x, ctx)
-            check_y_above_x = is_above(y, x, ctx)
-            check_xy_same_size = same_size([x,y], ctx)
-            if (
-                check_xy_pair
-                and check_xy_dark
-                and check_y_right_x
-                and check_y_above_x
-                and check_xy_same_size
-            ):
-                dots = frozenset([x,y])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
-
-# You: No.
-def turn(state):
-    # New question.
-    return []
-state = turn(state)
-# End.
+state = [(1, 2)]
 
-# Them: What about a large medium grey dot near the center?
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 1):
-        for x, in permutations(config):
-            check_x_large = is_large(x, ctx)
-            check_x_grey = is_grey(x, ctx)
-            check_x_center = is_middle(x, None, ctx)
-            if (
-                check_x_large
-                and check_x_grey
-                and check_x_center
-            ):
-                dots = frozenset([x])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
 
-# You: Is there a smaller black one next to it?
+# Turn 0
+# Them: Yes, is there a medium-sized and light-colored dot to the right and above those?
 def turn(state):
-    # Follow up question, new dot.
     results = set()
     orderedresults = []
     parents = []
     for config in state:
-        for a, in permutations(config):
-            for x, in get1idxs(idxs, exclude=[a]):
-                check_x_smaller_a = is_smaller(x, a, ctx)
-                check_x_dark = is_dark(x, ctx)
-                check_x_next_to_a = all_close([a,x], ctx)
-                if(
-                    check_x_smaller_a
-                    and check_x_dark
-                    and check_x_next_to_a
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_above = is_above(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_light
+                    and check_c_right
+                    and check_c_above
+                    
                 ):
-                    dots = frozenset([a,x])
+                    dots = frozenset([a,b,c,])
                     if dots not in results:
                         results.add(dots)
                         orderedresults.append(dots)
                         parents.append(config)
     return sort_state(orderedresults, parents, ctx, select=False)
 state = turn(state)
-# End.
 
-# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 3):
-        for x,y,z in permutations(config):
-            check_xyz_line = is_line([x,y,z], ctx)
-            check_x_top_left = x == get_top_left([x, y, z], ctx)
-            check_x_light = is_light(x, ctx)
-            check_y_middle = is_middle(y, [x,y,z], ctx)
-            check_y_grey = is_grey(y, ctx)
-            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)
-            check_z_dark = is_dark(z, ctx)
-            if (
-                check_xyz_line
-                and check_x_top_left
-                and check_x_light
-                and check_y_middle
-                and check_y_grey
-                and check_z_bottom_right
-                and check_z_dark
-            ):
-                dots = frozenset([x,y,z])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
 
-# You: Yes. Is the top one close to the middle darker one?
-def turn(state):
-    # Follow up question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_top = a == get_top([a,b,c], ctx)
-            check_b_middle = b == get_middle([a,b,c], ctx)
-            check_ab_close = all_close([a, b], ctx)
-            check_b_darker_a = is_darker(b, a, ctx)
-            if (
-                check_a_top
-                and check_b_middle
-                and check_ab_close
-                and check_b_darker_a
-            ):
-                results.add(frozenset([a,b,c]))
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 5)]
+Read after code: 14.85317601099996 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.9040726956995214
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
 
-# Them: Yes. And the smallest is on the bottom right.
-def turn(state):
-    # Follow up question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_smallest = a == smallest([a,b,c], ctx)
-            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)
-            if (
-                check_a_smallest
-                and check_a_bottom_right
-            ):
-                dots = frozenset([a,b,c])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
 
-# You: Yes, let's select the large one. <selection>.
-def select(state):
-    # Select a dot.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_large = is_large(a, ctx)
-            check_b_not_large = not is_large(b, ctx)
-            check_c_not_large = not is_large(c, ctx)
-            if (
-                check_a_large
-                and check_b_not_large
-                and check_c_not_large
-            ):
-                dots = frozenset([a])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=True)
-state = select(state)
-# End.
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is large-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a medium size and light color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the large size and grey color one. <selection>.
+Type:
+Classify: 2.694088444000954 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
 
-# New.
-ctx = get_ctx()
-state = []
+```
+`idxs = list(range(7))` corresponds to the available dots.
 
-# You: Do you see a large black dot on the bottom left?
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 1):
-        for x, in permutations(config):
-            check_x_large = is_large(x, ctx)
-            check_x_dark = is_dark(x, ctx)
-            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)
-            if (
-                check_x_large
-                and check_x_dark
-                and check_x_below_left
-            ):
-                dots = frozenset([x])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
- 
-# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 3):
-        for x,y,z in permutations(config):
-            check_xyz_close = all_close([x,y,z], ctx)
-            check_x_large = is_large(x, ctx)
-            check_z_dark = is_dark(z, ctx)
-            check_y_smaller_x = is_smaller(y, x, ctx)
-            check_z_smaller_x = is_smaller(z, x, ctx)
-            check_y_lighter_x = is_lighter(y, x, ctx)
-            check_z_lighter_x = is_lighter(z, x, ctx)
-            check_yz_same_size = same_size([y,z], ctx)
-            check_yz_same_color = same_color([y,z], ctx)
-            if (
-                check_xyz_close
-                and check_x_large
-                and check_z_dark
-                and check_y_smaller_x
-                and check_z_smaller_x
-                and check_y_lighter_x
-                and check_z_lighter_x
-                and check_yz_same_size
-                and check_yz_same_color
-            ):
-                dots = frozenset([x,y,z])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
-# End.
+Here are some examples.
 
-# You: Select the largest one.
-def select(state):
-    # Select a dot.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in state:
-        for a,b,c in permutations(config):
-            check_a_largest = a == get_largest([a,b,c], ctx)
-            if (
-                check_a_largest
-            ):
-                dots = frozenset([a])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=True)
-state = select(state)
-# End.
- 
-# Them: Okay.
-def noop(state):
-    # No op.
-    return state
-state = noop(state)
-# End.
- 
-# You: Okay. <selection>.
-def noop(state):
-    # No op.
-    return state
-state = noop(state)
-# End.
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
 
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
 
-# New.
-ctx = get_ctx()
-state = set()
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
 
-# Them: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey?
-def turn(state):
-    # New question.
-    results = set()
-    orderedresults = []
-    parents = []
-    for config in getsets(idxs, 2):
-        for x, y in permutations(config):
-            check_xy_pair = all_close([x,y], ctx)
-            check_x_left = is_left(x, y, ctx)
-            check_x_small = is_small(x, ctx)
-            check_x_dark = is_dark(x, ctx)
-            check_y_right = is_right(y, x, ctx)
-            check_y_small = is_small(y, ctx)
-            check_y_grey = is_grey(y, ctx)
-            if (
-                check_xy_pair
-                and check_x_left
-                and check_x_small
-                and check_x_dark
-                and check_y_right
-                and check_y_small
-                and check_y_grey
-            ):
-                dots = frozenset([x,y])
-                if dots not in results:
-                    results.add(dots)
-                    orderedresults.append(dots)
-                    parents.append(config)
-    return sort_state(orderedresults, parents, ctx, select=False)
-state = turn(state)
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
 
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
 
-print([tuple(x) for x in state])
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
 
-#print(sorted(
-#    [tuple(x) for x in state],
-#    key = lambda x: get_minimum_radius(x, ctx),
-#))
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+```
+29
+Understand: 6.231691863000378 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.295, 0.16, 0.6666666666666666, 0.6666666666666666], [-0.18, 0.435, 0.3333333333333333, 0.9866666666666667], [0.34, -0.19, -0.6666666666666666, 0.32], [0.4, -0.445, 1.0, 0.3333333333333333], [-0.65, 0.215, 0.3333333333333333, 0.06666666666666667], [0.6, 0.025, 0.0, 0.9466666666666667], [0.65, 0.575, 0.0, -0.21333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 3, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_grey
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3,)]
+Read after code: 8.96366236799986 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and grey?
+Type:
+Classify: 2.5569390389991895 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+91
+Understand: 18.204611135999585 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.545, 0.56, -1.0, 1.0], [0.385, 0.785, -0.6666666666666666, 0.8266666666666667], [-0.285, 0.175, -1.0, 0.29333333333333333], [-0.645, -0.49, -1.0, 0.92], [0.275, 0.005, -1.0, -0.08], [0.19, -0.165, 0.0, 0.5466666666666666], [-0.435, -0.415, 0.3333333333333333, -0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_small
+                    and check_a_light
+                    and check_b_right
+                    and check_b_medium
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
 [(3, 6)]
-Uncaught exception. Entering post mortem debugging
-Running 'cont' or 'step' will restart the program
-> /home/justinchiu/research/onecommon-gpt/oc/agent/planner.py(146)plan_select()
--> ridx2 = revsuc[ridx1+1:].index(True) + ridx1 + 1
-(Pdb) 141  	        """
-142  	
-143  	        pred_successes = [x.sum() > 0 for x in self.preds]
-144  	        revsuc = list(reversed(pred_successes))
-145  	        ridx1 = revsuc.index(True)
-146  ->	        ridx2 = revsuc[ridx1+1:].index(True) + ridx1 + 1
-147  	
-148  	        idx1 = len(self.preds) - ridx1 - 1
-149  	        idx2 = len(self.preds) - ridx2 - 1
-150  	        dots = self.preds[idx1][0]
-151  	        olddots = self.preds[idx2][0]
-(Pdb) array([0.00807981, 0.00616085, 0.00616085, 0.00444754, 0.00616085,
-       0.0030832 , 0.00253   , 0.002163  , 0.00616085, 0.02328044,
-       0.0038521 , 0.02263908, 0.00373881, 0.01903148, 0.00227178,
-       0.01851907, 0.00616085, 0.00382523, 0.00406522, 0.00285194,
-       0.00235879, 0.00186035, 0.00162233, 0.00136413, 0.00398931,
-       0.02030657, 0.0025581 , 0.02013583, 0.0023527 , 0.01661104,
-       0.00148377, 0.01648201, 0.00616085, 0.00399703, 0.00436754,
-       0.00306403, 0.00190755, 0.0019439 , 0.00174298, 0.00146558,
-       0.00347161, 0.02034587, 0.00265381, 0.02163331, 0.00204739,
-       0.01664318, 0.00153929, 0.01770776, 0.00423663, 0.00267112,
-       0.00291873, 0.00201386, 0.00157633, 0.00127765, 0.00114559,
-       0.00098633, 0.00266596, 0.0188592 , 0.00180637, 0.02006552,
-       0.00154633, 0.01543704, 0.00107283, 0.01643511, 0.00616085,
-       0.00380948, 0.00328246, 0.00267252, 0.0035173 , 0.00211354,
-       0.00182114, 0.0014583 , 0.01873272, 0.0193912 , 0.01580252,
-       0.0188691 , 0.0164351 , 0.01586226, 0.01385149, 0.01544514,
-       0.00231844, 0.00229858, 0.00210484, 0.00168547, 0.00130869,
-       0.00125425, 0.00114853, 0.00094172, 0.01633978, 0.01692501,
-       0.01455584, 0.01679355, 0.01434487, 0.01385382, 0.01276697,
-       0.01375513, 0.00247389, 0.00240181, 0.00226138, 0.00181082,
-       0.00137254, 0.00131058, 0.00123395, 0.00101175, 0.01421934,
-       0.01695776, 0.01510047, 0.01804246, 0.01248331, 0.01388063,
-       0.01324466, 0.01477808, 0.00165324, 0.00157861, 0.00148631,
-       0.00121867, 0.00090211, 0.00088201, 0.00083044, 0.00076112,
-       0.01514584, 0.01572882, 0.01450502, 0.01674576, 0.01330528,
-       0.01288304, 0.01273064, 0.0137249 ])
-(Pdb) 
\ No newline at end of file
+Read after code: 20.7902727769997 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6997912456762783
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and grey color dot to the right and above those?
+Type:
+Classify: 3.4098889870001585 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and grey color dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_above_a = is_above(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_above_b = is_above(c, b, ctx)
+```
+83
+Understand: 16.36760742899969 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.55, -0.45, 0.3333333333333333, -0.92], [-0.725, -0.445, -0.6666666666666666, 0.06666666666666667], [0.08, 0.94, -1.0, 0.29333333333333333], [-0.28, 0.28, -1.0, 0.92], [0.555, 0.6, 0.0, 0.5466666666666666], [-0.77, 0.37, 0.6666666666666666, -0.28], [-0.07, 0.355, 0.3333333333333333, -0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and grey color dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_above_a = is_above(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_above_b = is_above(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_grey
+                    and check_c_right_a
+                    and check_c_above_a
+                    and check_c_right_b
+                    and check_c_above_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3, 6)]
+Read after code: 19.81036299600055 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8948871717715022
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and grey color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the medium size and grey color one. <selection>.
+Type:
+Classify: 2.6530165309995937 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+31
+Understand: 6.865579051000168 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.545, 0.56, -1.0, 1.0], [0.385, 0.785, -0.6666666666666666, 0.8266666666666667], [-0.285, 0.175, -1.0, 0.29333333333333333], [-0.645, -0.49, -1.0, 0.92], [0.275, 0.005, -1.0, -0.08], [0.19, -0.165, 0.0, 0.5466666666666666], [-0.435, -0.415, 0.3333333333333333, -0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 3, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(6,)]
+Read after code: 9.566573195999808 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is medium-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is medium-sized and light?
+Type:
+Classify: 3.4488206599999103 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+89
+Understand: 20.64361517799989 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.57, 0.51, 1.0, 0.8533333333333334], [-0.5, -0.535, 0.6666666666666666, 0.96], [-0.255, 0.005, 0.3333333333333333, 0.4], [-0.085, -0.61, 0.6666666666666666, 0.6133333333333333], [0.24, -0.84, 0.6666666666666666, 0.25333333333333335], [-0.275, 0.525, -0.3333333333333333, 0.8], [0.695, 0.02, -1.0, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 24.116801410000335 seconds
+Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is large-sized and grey?
+Type:
+Classify: 2.609596820000661 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+94
+Understand: 21.2037428120002 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.085, 0.225, 1.0, 0.8533333333333334], [0.74, 0.395, -0.3333333333333333, -0.92], [0.635, -0.455, -0.6666666666666666, -0.92], [0.155, 0.56, 0.3333333333333333, 0.9333333333333333], [-0.735, -0.28, 0.3333333333333333, 0.4], [-0.76, 0.24, -0.3333333333333333, 0.8], [0.215, -0.27, -1.0, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is large-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_large
+                    and check_a_light
+                    and check_b_bottom_right
+                    and check_b_large
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 23.850739823001277 seconds
+Do you see a pair of dots, where the bottom dot is large-sized and light and the top dot is medium-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the bottom dot is large-sized and light, and the top dot is medium-sized and light?
+Type:
+Classify: 3.6383032970006752 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom dot is large-sized and light, and the top dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+85
+Understand: 18.185822658999314 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.57, 0.51, 1.0, 0.8533333333333334], [-0.5, -0.535, 0.6666666666666666, 0.96], [-0.255, 0.005, 0.3333333333333333, 0.4], [-0.085, -0.61, 0.6666666666666666, 0.6133333333333333], [0.24, -0.84, 0.6666666666666666, 0.25333333333333335], [-0.275, 0.525, -0.3333333333333333, 0.8], [0.695, 0.02, -1.0, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom dot is large-sized and light, and the top dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_large
+                    and check_a_light
+                    and check_b_top
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 5), (1, 2)]
+Read after code: 21.843144405998828 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.700165546834103
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is large-sized and light and the top dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes, is there a large size and light color dot to the left and below those?
+Type:
+Classify: 3.1415563890004705 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)```
+57
+Understand: 10.944638053000745 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.085, 0.225, 1.0, 0.8533333333333334], [0.74, 0.395, -0.3333333333333333, -0.92], [0.635, -0.455, -0.6666666666666666, -0.92], [0.155, 0.56, 0.3333333333333333, 0.9333333333333333], [-0.735, -0.28, 0.3333333333333333, 0.4], [-0.76, 0.24, -0.3333333333333333, 0.8], [0.215, -0.27, -1.0, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 3)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and light color dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_left = is_left(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    and check_c_left
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3, 4)]
+Read after code: 14.10793153099985 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.2941262547852497
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is large-sized and light and the top dot is medium-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes. Is there a small size and light color dot left of those?
+Type:
+Classify: 3.314476145000299 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and light color dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_small = is_small(d, ctx)
+check_d_light = is_light(d, ctx)
+check_d_left_abc = is_left(d, [a,b,c], ctx)
+46
+Understand: 8.445895831999223 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.57, 0.51, 1.0, 0.8533333333333334], [-0.5, -0.535, 0.6666666666666666, 0.96], [-0.255, 0.005, 0.3333333333333333, 0.4], [-0.085, -0.61, 0.6666666666666666, 0.6133333333333333], [0.24, -0.84, 0.6666666666666666, 0.25333333333333335], [-0.275, 0.525, -0.3333333333333333, 0.8], [0.695, 0.02, -1.0, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and light color dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_small = is_small(d, ctx)
+                check_d_light = is_light(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_small
+                    and check_d_light
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 11.772928665999643 seconds
+Followup config inclusion prob: 0.8952241618533335
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is large-sized and light and the top dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and light color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 4: Yes. Is there a small size and light color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No, let's select the medium size and light color one. <selection>.
+Type:
+Classify: 3.468014852000124 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, let's select the medium size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+29
+Understand: 6.513370937000218 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.085, 0.225, 1.0, 0.8533333333333334], [0.74, 0.395, -0.3333333333333333, -0.92], [0.635, -0.455, -0.6666666666666666, -0.92], [0.155, 0.56, 0.3333333333333333, 0.9333333333333333], [-0.735, -0.28, 0.3333333333333333, 0.4], [-0.76, 0.24, -0.3333333333333333, 0.8], [0.215, -0.27, -1.0, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 3, 4)]
+
+
+# Turn 0
+# Them: No, let's select the medium size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3,), (4,)]
+Read after code: 9.99828321700079 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark?
+Type:
+Classify: 2.347621020999213 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+95
+Understand: 34.33063058500011 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.45, -0.08, -0.6666666666666666, 0.88], [-0.53, -0.755, 0.6666666666666666, 0.8933333333333333], [0.29, 0.955, -0.3333333333333333, -0.04], [0.19, 0.76, -0.6666666666666666, 0.2], [0.755, 0.14, 0.6666666666666666, -0.6133333333333333], [-0.48, 0.485, 0.0, -0.37333333333333335], [0.39, -0.855, 0.0, 0.3466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom_left
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 36.727494200000365 seconds
+Do you see a pair of dots, where the top left dot is small-sized and grey and the bottom right dot is large-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the top left dot is small-sized and grey and the bottom right dot is large-sized and dark?
+Type:
+Classify: 4.672686057001556 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is small-sized and grey and the bottom right dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+94
+Understand: 21.146736949000115 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.205, 0.625, -0.3333333333333333, -0.04], [0.9, -0.435, 0.6666666666666666, 0.37333333333333335], [-0.305, 0.43, -0.6666666666666666, 0.2], [0.535, 0.59, 0.6666666666666666, -0.8666666666666667], [0.26, -0.19, 0.6666666666666666, -0.6133333333333333], [0.305, 0.785, 0.0, 0.76], [-0.97, 0.155, 0.0, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is small-sized and grey and the bottom right dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom_right
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 25.84120663399881 seconds
+Do you see a pair of dots, where the bottom right dot is large-sized and light and the top left dot is large-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is small-sized and grey and the bottom right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the bottom right dot is large-sized and light, and the top left dot is large-sized and dark?
+Type:
+Classify: 3.8855847800004994 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom right dot is large-sized and light, and the top left dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+92
+Understand: 19.28791911600092 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.45, -0.08, -0.6666666666666666, 0.88], [-0.53, -0.755, 0.6666666666666666, 0.8933333333333333], [0.29, 0.955, -0.3333333333333333, -0.04], [0.19, 0.76, -0.6666666666666666, 0.2], [0.755, 0.14, 0.6666666666666666, -0.6133333333333333], [-0.48, 0.485, 0.0, -0.37333333333333335], [0.39, -0.855, 0.0, 0.3466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom right dot is large-sized and light, and the top left dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 23.201411878000727 seconds
+Do you see a pair of dots, where the bottom dot is small-sized and light and the top dot is medium-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is small-sized and grey and the bottom right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom right dot is large-sized and light and the top left dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: No, do you see a pair of dots where the bottom dot is small-sized and light, and the top dot is medium-sized and dark?
+Type:
+Classify: 5.371255658999871 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom dot is small-sized and light, and the top dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = a == get_bottom([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_top = b == get_top([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+89
+Understand: 21.483199746999162 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.205, 0.625, -0.3333333333333333, -0.04], [0.9, -0.435, 0.6666666666666666, 0.37333333333333335], [-0.305, 0.43, -0.6666666666666666, 0.2], [0.535, 0.59, 0.6666666666666666, -0.8666666666666667], [0.26, -0.19, 0.6666666666666666, -0.6133333333333333], [0.305, 0.785, 0.0, 0.76], [-0.97, 0.155, 0.0, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom dot is small-sized and light, and the top dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = a == get_bottom([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_top = b == get_top([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_small
+                    and check_a_light
+                    and check_b_top
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 26.914517209999758 seconds
+Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is small-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is small-sized and grey and the bottom right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom right dot is large-sized and light and the top left dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the bottom dot is small-sized and light and the top dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 4: No, do you see a pair of dots where the top right dot is small-sized and grey and the bottom left dot is small-sized and grey?
+Type:
+Classify: 1.9446500430003653 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top right dot is small-sized and grey and the bottom left dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+96
+Understand: 24.470440438000878 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.45, -0.08, -0.6666666666666666, 0.88], [-0.53, -0.755, 0.6666666666666666, 0.8933333333333333], [0.29, 0.955, -0.3333333333333333, -0.04], [0.19, 0.76, -0.6666666666666666, 0.2], [0.755, 0.14, 0.6666666666666666, -0.6133333333333333], [-0.48, 0.485, 0.0, -0.37333333333333335], [0.39, -0.855, 0.0, 0.3466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top right dot is small-sized and grey and the bottom left dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom_left
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3)]
+Read after code: 26.43672280300052 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6875447650309896
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is small-sized and grey and the bottom right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom right dot is large-sized and light and the top left dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: No. Do you see a pair of dots, where the bottom dot is small-sized and light and the top dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 4: No. Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 5: Yes, is there a medium-sized and dark-colored dot to the left and below those?
+Type:
+Classify: 3.790400249999948 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and dark-colored dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+58
+Understand: 19.74294285600081 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.205, 0.625, -0.3333333333333333, -0.04], [0.9, -0.435, 0.6666666666666666, 0.37333333333333335], [-0.305, 0.43, -0.6666666666666666, 0.2], [0.535, 0.59, 0.6666666666666666, -0.8666666666666667], [0.26, -0.19, 0.6666666666666666, -0.6133333333333333], [0.305, 0.785, 0.0, 0.76], [-0.97, 0.155, 0.0, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2)]
+
+
+# Turn 0
+# Them: Yes, is there a medium-sized and dark-colored dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_left = is_left(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_dark
+                    and check_c_left
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2, 6)]
+Read after code: 23.556623518999913 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8886976797141013
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is small-sized and grey and the bottom right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom right dot is large-sized and light and the top left dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the bottom dot is small-sized and light and the top dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 4: No. Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 5: Yes. Is there a medium size and dark color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: Yes, let's select the small size and grey color one. <selection>.
+Type:
+Classify: 4.979319477999525 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+29
+Understand: 7.713424552001015 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.45, -0.08, -0.6666666666666666, 0.88], [-0.53, -0.755, 0.6666666666666666, 0.8933333333333333], [0.29, 0.955, -0.3333333333333333, -0.04], [0.19, 0.76, -0.6666666666666666, 0.2], [0.755, 0.14, 0.6666666666666666, -0.6133333333333333], [-0.48, 0.485, 0.0, -0.37333333333333335], [0.39, -0.855, 0.0, 0.3466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 3, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3,), (2,)]
+Read after code: 12.741970586999741 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and dark?
+Type:
+Classify: 4.423187763999522 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = a == get_top([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom = b == get_bottom([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+88
+Understand: 20.218359087999488 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.165, -0.745, -0.6666666666666666, -0.38666666666666666], [0.22, -0.73, 0.3333333333333333, 0.5466666666666666], [0.19, 0.8, -0.6666666666666666, -0.84], [0.735, 0.49, 0.6666666666666666, -0.30666666666666664], [-0.41, 0.8, 0.0, 0.3333333333333333], [0.285, 0.37, -1.0, -0.5866666666666667], [0.825, 0.185, -0.3333333333333333, 0.16]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = a == get_top([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom = b == get_bottom([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 5)]
+Read after code: 24.666880805998517 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7094998158097341
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot to the right of those?
+Type:
+Classify: 3.720092008999927 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and grey color dot to the right of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_right_ab = is_right(c, [a,b], ctx)
+45
+Understand: 10.876975395000045 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.005, 0.38, 1.0, -0.14666666666666667], [-0.775, 0.385, -0.6666666666666666, -0.84], [-0.23, 0.075, 0.6666666666666666, -0.30666666666666664], [0.15, 0.215, 0.3333333333333333, -0.3333333333333333], [-0.68, -0.045, -1.0, -0.5866666666666667], [-0.14, -0.23, -0.3333333333333333, 0.16], [0.625, -0.625, -0.3333333333333333, -0.92]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and grey color dot to the right of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 4), (0, 1, 4), (1, 3, 4)]
+Read after code: 14.634256737999749 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6166772286684652
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the small size and dark color one. <selection>.
+Type:
+Classify: 2.787118821999684 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+27
+Understand: 8.490101589000915 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.165, -0.745, -0.6666666666666666, -0.38666666666666666], [0.22, -0.73, 0.3333333333333333, 0.5466666666666666], [0.19, 0.8, -0.6666666666666666, -0.84], [0.735, 0.49, 0.6666666666666666, -0.30666666666666664], [-0.41, 0.8, 0.0, 0.3333333333333333], [0.285, 0.37, -1.0, -0.5866666666666667], [0.825, 0.185, -0.3333333333333333, 0.16]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 3, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(5,), (2,)]
+Read after code: 11.300683939998635 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey?
+Type:
+Classify: 3.032610707999993 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+90
+Understand: 23.74026468900047 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.545, 0.81, -0.3333333333333333, -0.14666666666666667], [0.66, -0.54, -1.0, 0.30666666666666664], [0.19, -0.57, 0.3333333333333333, -0.26666666666666666], [-0.055, 0.015, -0.3333333333333333, -0.7066666666666667], [-0.335, 0.735, 0.6666666666666666, -1.0], [0.63, -0.18, 0.6666666666666666, 0.7333333333333333], [0.525, 0.075, -0.6666666666666666, 0.24]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_right
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3, 6)]
+Read after code: 26.8101646060004 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.557769171845298
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and light color dot to the right and below those?
+Type:
+Classify: 2.6309574150000117 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+57
+Understand: 13.16422197599968 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.56, -0.31, 0.3333333333333333, -0.26666666666666666], [-0.55, -0.63, 0.6666666666666666, 0.7866666666666666], [0.32, 0.275, -0.3333333333333333, -0.7066666666666667], [-0.76, 0.06, -0.6666666666666666, -0.5733333333333334], [0.035, 0.995, 0.6666666666666666, -1.0], [0.9, 0.335, -0.6666666666666666, 0.24], [0.16, -0.77, 0.6666666666666666, 0.22666666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and light color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    and check_c_right
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 15.874438511000335 seconds
+Followup config inclusion prob: 0.5608385515968481
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No, is there a medium-sized and grey-colored dot below those?
+Type:
+Classify: 2.9492493660000036 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a medium-sized and grey-colored dot below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_below_ab = is_below(c, [a, b], ctx)
+47
+Understand: 11.738459322999915 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.545, 0.81, -0.3333333333333333, -0.14666666666666667], [0.66, -0.54, -1.0, 0.30666666666666664], [0.19, -0.57, 0.3333333333333333, -0.26666666666666666], [-0.055, 0.015, -0.3333333333333333, -0.7066666666666667], [-0.335, 0.735, 0.6666666666666666, -1.0], [0.63, -0.18, 0.6666666666666666, 0.7333333333333333], [0.525, 0.075, -0.6666666666666666, 0.24]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 6)]
+
+
+# Turn 0
+# Them: No, is there a medium-sized and grey-colored dot below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3, 6), (0, 3, 6)]
+Read after code: 14.785548638999899 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6372387387361431
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a medium size and grey color dot below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, let's select the small size and dark color one. <selection>.
+Type:
+Classify: 3.428367888000139 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+27
+Understand: 8.046918811000069 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.56, -0.31, 0.3333333333333333, -0.26666666666666666], [-0.55, -0.63, 0.6666666666666666, 0.7866666666666666], [0.32, 0.275, -0.3333333333333333, -0.7066666666666667], [-0.76, 0.06, -0.6666666666666666, -0.5733333333333334], [0.035, 0.995, 0.6666666666666666, -1.0], [0.9, 0.335, -0.6666666666666666, 0.24], [0.16, -0.77, 0.6666666666666666, 0.22666666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2,)]
+Read after code: 11.514082680001593 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey?
+Type:
+Classify: 3.2250440010011516 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+94
+Understand: 17.246889357998953 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, -0.985, -1.0, -0.5866666666666667], [0.355, 0.37, 0.6666666666666666, 0.14666666666666667], [0.67, 0.465, 0.0, -0.7733333333333333], [0.29, 0.935, -0.3333333333333333, -0.09333333333333334], [0.485, -0.265, -0.6666666666666666, 0.8533333333333334], [0.32, -0.275, -0.6666666666666666, 0.29333333333333333], [-0.385, -0.53, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_small
+                    and check_a_light
+                    and check_b_bottom_left
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4, 5)]
+Read after code: 20.556236756001454 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.5582935785093728
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those?
+Type:
+Classify: 4.100352107998333 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_above_ab = is_above(c, [a, b], ctx)
+46
+Understand: 10.817642456000613 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.325, -0.335, -1.0, -0.5866666666666667], [-0.48, -0.2, 0.0, 0.10666666666666667], [-0.895, -0.08, -0.6666666666666666, -0.7333333333333333], [-0.685, -0.36, -0.6666666666666666, 0.17333333333333334], [0.71, 0.385, -0.6666666666666666, 0.8533333333333334], [0.545, 0.375, -0.6666666666666666, 0.29333333333333333], [-0.16, 0.125, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and grey color dot above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 14.963111684000978 seconds
+Followup config inclusion prob: 0.48295487555751077
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those?
+Type:
+Classify: 3.376175981000415 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Is there a small size and dark color dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+56
+Understand: 12.046980961000372 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, -0.985, -1.0, -0.5866666666666667], [0.355, 0.37, 0.6666666666666666, 0.14666666666666667], [0.67, 0.465, 0.0, -0.7733333333333333], [0.29, 0.935, -0.3333333333333333, -0.09333333333333334], [0.485, -0.265, -0.6666666666666666, 0.8533333333333334], [0.32, -0.275, -0.6666666666666666, 0.29333333333333333], [-0.385, -0.53, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 5)]
+
+
+# Turn 0
+# Them: No. Is there a small size and dark color dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_left = is_left(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    and check_c_left
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 4, 5)]
+Read after code: 15.498630645999583 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.23877842369995775
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes. Is there a large size and grey color dot above those?
+Type:
+Classify: 3.1736344210003153 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_grey = is_grey(d, ctx)
+check_d_above_abc = is_above(d, [a,b,c], ctx)
+48
+Understand: 10.975151546999768 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.325, -0.335, -1.0, -0.5866666666666667], [-0.48, -0.2, 0.0, 0.10666666666666667], [-0.895, -0.08, -0.6666666666666666, -0.7333333333333333], [-0.685, -0.36, -0.6666666666666666, 0.17333333333333334], [0.71, 0.385, -0.6666666666666666, 0.8533333333333334], [0.545, 0.375, -0.6666666666666666, 0.29333333333333333], [-0.16, 0.125, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 4, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and grey color dot above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_grey = is_grey(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 14.225276000999656 seconds
+Followup config inclusion prob: 0.47256089058314693
+Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No, do you see a pair of dots where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey?
+Type:
+Classify: 3.43614237499969 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_top_right = b == get_top_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+97
+Understand: 20.413990188000753 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, -0.985, -1.0, -0.5866666666666667], [0.355, 0.37, 0.6666666666666666, 0.14666666666666667], [0.67, 0.465, 0.0, -0.7733333333333333], [0.29, 0.935, -0.3333333333333333, -0.09333333333333334], [0.485, -0.265, -0.6666666666666666, 0.8533333333333334], [0.32, -0.275, -0.6666666666666666, 0.29333333333333333], [-0.385, -0.53, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_top_right = b == get_top_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_left
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_top_right
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 23.961217852000118 seconds
+Followup config inclusion prob: 0.23877842369995775
+Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes. Is there a large size and grey color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 5: No, do you see a pair of dots where the bottom right dot is small-sized and dark, and the top left dot is small-sized and grey?
+Type:
+Classify: 2.21327206100068 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom right dot is small-sized and dark, and the top left dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+94
+Understand: 16.921028929000386 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.325, -0.335, -1.0, -0.5866666666666667], [-0.48, -0.2, 0.0, 0.10666666666666667], [-0.895, -0.08, -0.6666666666666666, -0.7333333333333333], [-0.685, -0.36, -0.6666666666666666, 0.17333333333333334], [0.71, 0.385, -0.6666666666666666, 0.8533333333333334], [0.545, 0.375, -0.6666666666666666, 0.29333333333333333], [-0.16, 0.125, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom right dot is small-sized and dark, and the top left dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 19.249950113000523 seconds
+Followup config inclusion prob: 0.47256089058314693
+Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 6: No, do you see a pair of dots where the bottom right dot is small-sized and dark, and the top left dot is small-sized and grey?
+Type:
+Classify: 2.202599960999578 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom right dot is small-sized and dark, and the top left dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+94
+Understand: 24.912028479000583 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, -0.985, -1.0, -0.5866666666666667], [0.355, 0.37, 0.6666666666666666, 0.14666666666666667], [0.67, 0.465, 0.0, -0.7733333333333333], [0.29, 0.935, -0.3333333333333333, -0.09333333333333334], [0.485, -0.265, -0.6666666666666666, 0.8533333333333334], [0.32, -0.275, -0.6666666666666666, 0.29333333333333333], [-0.385, -0.53, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom right dot is small-sized and dark, and the top left dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 27.139892979999786 seconds
+Followup config inclusion prob: 0.23877842369995775
+Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is medium-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes. Is there a large size and grey color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 6: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 7: No, do you see a pair of dots where the left dot is large-sized and grey and the right dot is medium-sized and dark?
+Type:
+Classify: 2.997359263999897 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the left dot is large-sized and grey and the right dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = is_left(a, b, ctx)
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = is_right(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+87
+Understand: 16.82166923600016 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.325, -0.335, -1.0, -0.5866666666666667], [-0.48, -0.2, 0.0, 0.10666666666666667], [-0.895, -0.08, -0.6666666666666666, -0.7333333333333333], [-0.685, -0.36, -0.6666666666666666, 0.17333333333333334], [0.71, 0.385, -0.6666666666666666, 0.8533333333333334], [0.545, 0.375, -0.6666666666666666, 0.29333333333333333], [-0.16, 0.125, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the left dot is large-sized and grey and the right dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = is_left(a, b, ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = is_right(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_large
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 19.913425921000453 seconds
+Followup config inclusion prob: 0.47256089058314693
+Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is small-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 6: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 7: No. Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 8: No, do you see a pair of dots where the top left dot is small-sized and dark, and the bottom right dot is small-sized and grey?
+Type:
+Classify: 3.389413732000321 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is small-sized and dark, and the bottom right dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+94
+Understand: 18.84223343799931 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, -0.985, -1.0, -0.5866666666666667], [0.355, 0.37, 0.6666666666666666, 0.14666666666666667], [0.67, 0.465, 0.0, -0.7733333333333333], [0.29, 0.935, -0.3333333333333333, -0.09333333333333334], [0.485, -0.265, -0.6666666666666666, 0.8533333333333334], [0.32, -0.275, -0.6666666666666666, 0.29333333333333333], [-0.385, -0.53, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is small-sized and dark, and the bottom right dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 22.32833585500157 seconds
+Followup config inclusion prob: 0.23877842369995775
+Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is small-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes. Is there a large size and grey color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 6: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 7: No. Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 8: No. Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 9: No, do you see a pair of dots where the bottom dot is large-sized and grey and the top dot is small-sized and grey?
+Type:
+Classify: 3.0741451970006892 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom dot is large-sized and grey and the top dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+88
+Understand: 18.721117604000028 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.325, -0.335, -1.0, -0.5866666666666667], [-0.48, -0.2, 0.0, 0.10666666666666667], [-0.895, -0.08, -0.6666666666666666, -0.7333333333333333], [-0.685, -0.36, -0.6666666666666666, 0.17333333333333334], [0.71, 0.385, -0.6666666666666666, 0.8533333333333334], [0.545, 0.375, -0.6666666666666666, 0.29333333333333333], [-0.16, 0.125, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom dot is large-sized and grey and the top dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_large
+                    and check_a_grey
+                    and check_b_top
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 21.887716258999717 seconds
+Followup config inclusion prob: 0.47256089058314693
+IN READ
+No
+UPDATED BELIEF denied
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 6: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 7: No. Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 8: No. Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 9: No. Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 10: No. Is there a small size and grey color dot left of those?
+Type:
+Classify: 4.005084013999294 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Is there a small size and grey color dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_small = is_small(d, ctx)
+check_d_grey = is_grey(d, ctx)
+check_d_left_abc = is_left(d, [a,b,c], ctx)
+48
+Understand: 9.898923892998937 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, -0.985, -1.0, -0.5866666666666667], [0.355, 0.37, 0.6666666666666666, 0.14666666666666667], [0.67, 0.465, 0.0, -0.7733333333333333], [0.29, 0.935, -0.3333333333333333, -0.09333333333333334], [0.485, -0.265, -0.6666666666666666, 0.8533333333333334], [0.32, -0.275, -0.6666666666666666, 0.29333333333333333], [-0.385, -0.53, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 4, 5)]
+
+
+# Turn 0
+# Them: No. Is there a small size and grey color dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_small = is_small(d, ctx)
+                check_d_grey = is_grey(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_small
+                    and check_d_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 4, 5, 6), (0, 3, 4, 5)]
+Read after code: 13.98614890799945 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7035806406589085
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes. Is there a large size and grey color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 6: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 7: No. Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 8: No. Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 9: No. Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 10: No. Is there a small size and grey color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 11: Yes, let's select the small size and light color one. <selection>.
+Type:
+Classify: 2.135164937999434 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+a
+Code:
+```
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+```
+27
+Understand: 6.563035676999789 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.325, -0.335, -1.0, -0.5866666666666667], [-0.48, -0.2, 0.0, 0.10666666666666667], [-0.895, -0.08, -0.6666666666666666, -0.7333333333333333], [-0.685, -0.36, -0.6666666666666666, 0.17333333333333334], [0.71, 0.385, -0.6666666666666666, 0.8533333333333334], [0.545, 0.375, -0.6666666666666666, 0.29333333333333333], [-0.16, 0.125, -0.6666666666666666, -0.14666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 4, 5, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_small
+                    and check_a_light
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,), (5,)]
+Read after code: 8.770809944000575 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is large-sized and dark, and the top left dot is small-sized and grey?
+Type:
+Classify: 5.793167630001335 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom right dot is large-sized and dark, and the top left dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+94
+Understand: 22.475723015000767 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.875, 0.425, 0.6666666666666666, -0.8533333333333334], [0.79, 0.575, -0.6666666666666666, -0.08], [0.765, -0.325, -0.3333333333333333, -0.013333333333333334], [-0.465, -0.66, 0.3333333333333333, -0.9466666666666667], [0.11, 0.95, 0.0, 0.9333333333333333], [0.835, -0.525, 1.0, 0.9066666666666666], [-0.73, 0.655, 0.6666666666666666, -0.09333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom right dot is large-sized and dark, and the top left dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom_right
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1)]
+Read after code: 28.390927774999 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.692426726411421
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and grey color dot to the left and below those?
+Type:
+Classify: 3.9047538849990815 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and grey color dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_left_a = is_left(c, a, ctx)
+check_c_below_a = is_below(c, a, ctx)
+check_c_left_b = is_left(c, b, ctx)
+check_c_below_b = is_below(c, b, ctx)
+```
+83
+Understand: 17.43994088600084 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.125, 0.505, -0.3333333333333333, -0.68], [0.28, -0.025, 0.6666666666666666, -0.8533333333333334], [0.195, 0.125, -0.6666666666666666, -0.08], [0.895, -0.215, -0.3333333333333333, 0.8666666666666667], [0.17, -0.775, -0.3333333333333333, -0.013333333333333334], [-0.485, 0.495, 0.0, 0.9333333333333333], [0.525, -0.66, 1.0, -0.5866666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and grey color dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_left_a = is_left(c, a, ctx)
+                check_c_below_a = is_below(c, a, ctx)
+                check_c_left_b = is_left(c, b, ctx)
+                check_c_below_b = is_below(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_grey
+                    and check_c_left_a
+                    and check_c_below_a
+                    and check_c_left_b
+                    and check_c_below_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 4)]
+Read after code: 21.398727581999992 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.24591819285528166
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and grey color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a large size and dark color dot to the right of those?
+Type:
+Classify: 3.071928105000552 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and dark color dot to the right of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_dark = is_dark(d, ctx)
+check_d_right_abc = is_right(d, [a,b,c], ctx)
+46
+Understand: 11.935023322001143 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.875, 0.425, 0.6666666666666666, -0.8533333333333334], [0.79, 0.575, -0.6666666666666666, -0.08], [0.765, -0.325, -0.3333333333333333, -0.013333333333333334], [-0.465, -0.66, 0.3333333333333333, -0.9466666666666667], [0.11, 0.95, 0.0, 0.9333333333333333], [0.835, -0.525, 1.0, 0.9066666666666666], [-0.73, 0.655, 0.6666666666666666, -0.09333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 2)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and dark color dot to the right of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_dark = is_dark(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1, 2, 3)]
+Read after code: 15.087834186000691 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.33482169012172397
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and grey color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a large size and dark color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, let's select the large size and dark color one. <selection>.
+Type:
+Classify: 2.6847493770001165 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+a
+Code:
+```
+check_a_large_dark = is_large(a, ctx) and is_dark(a, ctx)
+```
+25
+Understand: 6.879208948999803 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.125, 0.505, -0.3333333333333333, -0.68], [0.28, -0.025, 0.6666666666666666, -0.8533333333333334], [0.195, 0.125, -0.6666666666666666, -0.08], [0.895, -0.215, -0.3333333333333333, 0.8666666666666667], [0.17, -0.775, -0.3333333333333333, -0.013333333333333334], [-0.485, 0.495, 0.0, 0.9333333333333333], [0.525, -0.66, 1.0, -0.5866666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 4, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_a_large_dark = is_large(a, ctx) and is_dark(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large_dark
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1,), (6,)]
+Read after code: 9.646953884999675 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey?
+Type:
+Classify: 3.0032396120004705 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = is_left(a, b, ctx)
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = is_right(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+87
+Understand: 19.78259278099904 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.32, -0.48, 0.0, 0.8533333333333334], [-0.115, -0.095, 0.3333333333333333, 0.04], [-0.53, -0.455, -0.6666666666666666, 0.41333333333333333], [0.395, -0.815, -0.6666666666666666, -0.05333333333333334], [-0.745, -0.085, -0.6666666666666666, -0.7466666666666667], [0.895, -0.405, 0.6666666666666666, -0.2], [0.085, 0.265, 1.0, -0.9466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = is_left(a, b, ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = is_right(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_large
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 22.863323523999497 seconds
+Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is small-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is small-sized and light?
+Type:
+Classify: 2.713359224000669 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = is_left(a, b, ctx)
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = is_right(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+85
+Understand: 16.316313454999545 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.685, -0.205, 0.3333333333333333, 0.04], [0.81, -0.23, 0.0, 0.8933333333333333], [-0.175, -0.925, -0.6666666666666666, -0.05333333333333334], [-0.215, 0.905, 0.0, -0.9733333333333334], [0.325, -0.515, 0.6666666666666666, -0.2], [0.545, -0.335, 1.0, -0.16], [-0.485, 0.155, 1.0, -0.9466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No. Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = is_left(a, b, ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = is_right(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_small
+                    and check_a_light
+                    and check_b_right
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 19.098381846000848 seconds
+Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is large-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the bottom left dot is small-sized and grey and the top right dot is large-sized and grey?
+Type:
+Classify: 2.7507674629996473 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom left dot is small-sized and grey and the top right dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_top_right = b == get_top_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+96
+Understand: 19.971524044000034 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.32, -0.48, 0.0, 0.8533333333333334], [-0.115, -0.095, 0.3333333333333333, 0.04], [-0.53, -0.455, -0.6666666666666666, 0.41333333333333333], [0.395, -0.815, -0.6666666666666666, -0.05333333333333334], [-0.745, -0.085, -0.6666666666666666, -0.7466666666666667], [0.895, -0.405, 0.6666666666666666, -0.2], [0.085, 0.265, 1.0, -0.9466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom left dot is small-sized and grey and the top right dot is large-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_top_right = b == get_top_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_left
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_top_right
+                    and check_b_large
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 22.82192254000074 seconds
+Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is large-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is small-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: No, do you see a pair of dots where the bottom left dot is medium-sized and grey and the top right dot is large-sized and dark?
+Type:
+Classify: 3.235699040000327 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom left dot is medium-sized and grey and the top right dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_top_right = b == get_top_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+95
+Understand: 18.77148794200002 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.685, -0.205, 0.3333333333333333, 0.04], [0.81, -0.23, 0.0, 0.8933333333333333], [-0.175, -0.925, -0.6666666666666666, -0.05333333333333334], [-0.215, 0.905, 0.0, -0.9733333333333334], [0.325, -0.515, 0.6666666666666666, -0.2], [0.545, -0.335, 1.0, -0.16], [-0.485, 0.155, 1.0, -0.9466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom left dot is medium-sized and grey and the top right dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_top_right = b == get_top_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_left
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_top_right
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 6)]
+Read after code: 22.06764431999909 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.694292813518659
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 4: Yes, is there a small size and grey color dot to the right and below those?
+Type:
+Classify: 3.8204378049995285 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_below_a = is_below(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_below_b = is_below(c, b, ctx)
+```
+83
+Understand: 16.784383139000056 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.32, -0.48, 0.0, 0.8533333333333334], [-0.115, -0.095, 0.3333333333333333, 0.04], [-0.53, -0.455, -0.6666666666666666, 0.41333333333333333], [0.395, -0.815, -0.6666666666666666, -0.05333333333333334], [-0.745, -0.085, -0.6666666666666666, -0.7466666666666667], [0.895, -0.405, 0.6666666666666666, -0.2], [0.085, 0.265, 1.0, -0.9466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and grey color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_below_a = is_below(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_below_b = is_below(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_grey
+                    and check_c_right_a
+                    and check_c_below_a
+                    and check_c_right_b
+                    and check_c_below_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 3, 6)]
+Read after code: 20.664221860999533 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.3043670928720078
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is small-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 4: Yes. Is there a small size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: Yes. Is there a large size and grey color dot to the right of those?
+Type:
+Classify: 3.8551486000014847 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and grey color dot to the right of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_grey = is_grey(d, ctx)
+check_d_right = is_right(d, [a,b,c], ctx)
+46
+Understand: 8.89823823000006 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.685, -0.205, 0.3333333333333333, 0.04], [0.81, -0.23, 0.0, 0.8933333333333333], [-0.175, -0.925, -0.6666666666666666, -0.05333333333333334], [-0.215, 0.905, 0.0, -0.9733333333333334], [0.325, -0.515, 0.6666666666666666, -0.2], [0.545, -0.335, 1.0, -0.16], [-0.485, 0.155, 1.0, -0.9466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and grey color dot to the right of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_grey = is_grey(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2, 4, 6), (0, 2, 5, 6)]
+Read after code: 12.819849490999331 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.674187432208355
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is medium-sized and light and the left dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 4: Yes. Is there a small size and grey color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 5: Yes. Is there a large size and grey color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: Yes, let's select the large size and dark color one. <selection>.
+Type:
+Classify: 5.259551526998621 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+```
+27
+Understand: 6.493068499999936 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.32, -0.48, 0.0, 0.8533333333333334], [-0.115, -0.095, 0.3333333333333333, 0.04], [-0.53, -0.455, -0.6666666666666666, 0.41333333333333333], [0.395, -0.815, -0.6666666666666666, -0.05333333333333334], [-0.745, -0.085, -0.6666666666666666, -0.7466666666666667], [0.895, -0.405, 0.6666666666666666, -0.2], [0.085, 0.265, 1.0, -0.9466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 3, 5, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_dark
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(6,)]
+Read after code: 11.799889215999428 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is medium-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is medium-sized and light?
+Type:
+Classify: 2.096691421000287 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_top_right = b == get_top_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+93
+Understand: 19.253298076000647 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.365, -0.37, 1.0, 0.9466666666666667], [0.32, -0.01, 0.6666666666666666, -0.25333333333333335], [0.645, 0.125, 0.6666666666666666, -0.36], [0.055, -0.14, 0.3333333333333333, 0.8], [-0.555, 0.32, 0.3333333333333333, 0.49333333333333335], [0.815, 0.13, 0.3333333333333333, -0.7866666666666666], [0.535, -0.225, 0.3333333333333333, -0.88]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_top_right = b == get_top_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_left
+                    and check_a_large
+                    and check_a_light
+                    and check_b_top_right
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3)]
+Read after code: 21.42816432700056 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7127030370558598
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and grey color dot to the right and above those?
+Type:
+Classify: 2.9975244359993667 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and grey color dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_above_a = is_above(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_above_b = is_above(c, b, ctx)
+```
+83
+Understand: 18.64678654400086 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.445, 0.075, 1.0, -0.32], [0.065, 0.23, 1.0, 0.9466666666666667], [0.75, 0.595, 0.6666666666666666, -0.25333333333333335], [0.49, 0.46, 0.3333333333333333, 0.8], [-0.125, 0.92, 0.3333333333333333, 0.49333333333333335], [0.39, -0.43, -0.6666666666666666, 0.05333333333333334], [-0.955, 0.165, 0.0, -0.25333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 3)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and grey color dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_above_a = is_above(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_above_b = is_above(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_grey
+                    and check_c_right_a
+                    and check_c_above_a
+                    and check_c_right_b
+                    and check_c_above_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 3)]
+Read after code: 21.699607456001104 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.9008194221338617
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is medium-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the large size and light color one. <selection>.
+Type:
+Classify: 2.7921862520015566 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+```
+27
+Understand: 7.590499984999042 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.365, -0.37, 1.0, 0.9466666666666667], [0.32, -0.01, 0.6666666666666666, -0.25333333333333335], [0.645, 0.125, 0.6666666666666666, -0.36], [0.055, -0.14, 0.3333333333333333, 0.8], [-0.555, 0.32, 0.3333333333333333, 0.49333333333333335], [0.815, 0.13, 0.3333333333333333, -0.7866666666666666], [0.535, -0.225, 0.3333333333333333, -0.88]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 3)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_light
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0,), (3,)]
+Read after code: 10.445346190001146 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom left dot is small-sized and dark and the top right dot is small-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is small-sized and dark and the top right dot is small-sized and grey?
+Type:
+Classify: 3.9550869839986262 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom left dot is small-sized and dark and the top right dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top_right = b == get_top_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+94
+Understand: 18.12359157299943 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.335, -0.8, -1.0, -0.9866666666666667], [0.565, 0.465, -1.0, -0.5466666666666666], [0.34, -0.245, 0.3333333333333333, 0.38666666666666666], [-0.03, 0.985, 0.6666666666666666, -0.8533333333333334], [-0.235, -0.065, 1.0, 0.7066666666666667], [-0.56, 0.815, 0.0, -0.6], [0.755, 0.54, -0.6666666666666666, -0.18666666666666668]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom left dot is small-sized and dark and the top right dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top_right = b == get_top_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_left
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_top_right
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 6)]
+Read after code: 22.160437468000964 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.5655986697912994
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is small-sized and dark and the top right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a medium-sized and light-colored dot to the left and below those?
+Type:
+Classify: 3.3643600569994305 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and light-colored dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+58
+Understand: 12.421030696999878 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.92, 0.37, 0.6666666666666666, 0.013333333333333334], [0.415, 0.425, 1.0, 0.8666666666666667], [0.0, 0.48, -1.0, -0.5466666666666666], [-0.225, -0.23, 0.3333333333333333, 0.38666666666666666], [0.11, -0.92, 0.0, -0.9466666666666667], [-0.8, -0.045, 1.0, 0.7066666666666667], [0.19, 0.555, -0.6666666666666666, -0.18666666666666668]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a medium-sized and light-colored dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_left = is_left(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_light
+                    and check_c_left
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3, 6)]
+Read after code: 15.849821402998714 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.33678228571819596
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is small-sized and dark and the top right dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a medium size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a large size and light color dot to the right of those?
+Type:
+Classify: 3.5531912090009428 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and light color dot to the right of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_light = is_light(d, ctx)
+check_d_right = is_right(d, [a,b,c], ctx)
+44
+Understand: 8.72975501700057 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.335, -0.8, -1.0, -0.9866666666666667], [0.565, 0.465, -1.0, -0.5466666666666666], [0.34, -0.245, 0.3333333333333333, 0.38666666666666666], [-0.03, 0.985, 0.6666666666666666, -0.8533333333333334], [-0.235, -0.065, 1.0, 0.7066666666666667], [-0.56, 0.815, 0.0, -0.6], [0.755, 0.54, -0.6666666666666666, -0.18666666666666668]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and light color dot to the right of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_light = is_light(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_light
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 4, 6)]
+Read after code: 12.351380603000507 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.9328558463526698
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is small-sized and dark and the top right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a medium size and light color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a large size and light color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, let's select the small size and grey color one. <selection>.
+Type:
+Classify: 4.612477709000814 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+29
+Understand: 14.66986676399938 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.92, 0.37, 0.6666666666666666, 0.013333333333333334], [0.415, 0.425, 1.0, 0.8666666666666667], [0.0, 0.48, -1.0, -0.5466666666666666], [-0.225, -0.23, 0.3333333333333333, 0.38666666666666666], [0.11, -0.92, 0.0, -0.9466666666666667], [-0.8, -0.045, 1.0, 0.7066666666666667], [0.19, 0.555, -0.6666666666666666, -0.18666666666666668]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 3, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(6,)]
+Read after code: 19.336051411999506 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is large-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is large-sized and grey?
+Type:
+Classify: 3.4274296130006405 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+90
+Understand: 24.383801417998257 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.55, 0.58, -1.0, -0.8133333333333334], [-0.125, 0.465, 1.0, 0.52], [0.16, -0.385, -0.3333333333333333, -0.7866666666666666], [-0.19, 0.935, 0.3333333333333333, 0.06666666666666667], [-0.125, -0.33, -0.6666666666666666, 0.41333333333333333], [0.63, 0.32, -0.3333333333333333, -0.6933333333333334], [0.1, 0.21, 0.6666666666666666, -0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is large-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_large
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(5, 6), (0, 6), (2, 6)]
+Read after code: 27.84932124900115 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.17527212349840604
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and light color dot to the left and above those?
+Type:
+Classify: 4.887202725998577 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and light color dot to the left and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left_a = is_left(c, a, ctx)
+check_c_above_b = is_above(c, b, ctx)
+```
+55
+Understand: 10.693901426000593 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.14, 0.03, 0.6666666666666666, 0.68], [-0.38, 0.725, -1.0, -0.8133333333333334], [-0.77, -0.24, -0.3333333333333333, -0.7866666666666666], [0.07, -0.92, 0.0, -0.8133333333333334], [-0.295, 0.47, -0.3333333333333333, -0.6933333333333334], [0.285, 0.145, 0.0, -0.6266666666666667], [-0.825, 0.355, 0.6666666666666666, -0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and light color dot to the left and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_left_a = is_left(c, a, ctx)
+                check_c_above_b = is_above(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    and check_c_left_a
+                    and check_c_above_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 15.636314691000734 seconds
+Followup config inclusion prob: 0.5465125585075268
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is large-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a small size and dark color dot below those?
+Type:
+Classify: 3.663796466000349 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Is there a small size and dark color dot below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_below_ab = is_below(c, [a, b], ctx)
+44
+Understand: 10.472040718999779 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.55, 0.58, -1.0, -0.8133333333333334], [-0.125, 0.465, 1.0, 0.52], [0.16, -0.385, -0.3333333333333333, -0.7866666666666666], [-0.19, 0.935, 0.3333333333333333, 0.06666666666666667], [-0.125, -0.33, -0.6666666666666666, 0.41333333333333333], [0.63, 0.32, -0.3333333333333333, -0.6933333333333334], [0.1, 0.21, 0.6666666666666666, -0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(5, 6), (0, 6), (2, 6)]
+
+
+# Turn 0
+# Them: No. Is there a small size and dark color dot below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 5, 6), (2, 5, 6), (0, 2, 6)]
+Read after code: 14.184435135999593 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.5539695949195005
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a small size and dark color dot below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes. Is there a large size and light color dot left of those?
+Type:
+Classify: 3.64836933100014 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and light color dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_light = is_light(d, ctx)
+check_d_left = is_left(d, [a,b,c], ctx)
+44
+Understand: 8.933050083000126 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.14, 0.03, 0.6666666666666666, 0.68], [-0.38, 0.725, -1.0, -0.8133333333333334], [-0.77, -0.24, -0.3333333333333333, -0.7866666666666666], [0.07, -0.92, 0.0, -0.8133333333333334], [-0.295, 0.47, -0.3333333333333333, -0.6933333333333334], [0.285, 0.145, 0.0, -0.6266666666666667], [-0.825, 0.355, 0.6666666666666666, -0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 4, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and light color dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_light = is_light(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_light
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2, 4, 6)]
+Read after code: 12.607944002000295 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.650840315284239
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is large-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a small size and dark color dot below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and light color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes, let's select the large size and grey color one. <selection>.
+Type:
+Classify: 4.273933116999615 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+```
+29
+Understand: 6.658559794001121 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.55, 0.58, -1.0, -0.8133333333333334], [-0.125, 0.465, 1.0, 0.52], [0.16, -0.385, -0.3333333333333333, -0.7866666666666666], [-0.19, 0.935, 0.3333333333333333, 0.06666666666666667], [-0.125, -0.33, -0.6666666666666666, 0.41333333333333333], [0.63, 0.32, -0.3333333333333333, -0.6933333333333334], [0.1, 0.21, 0.6666666666666666, -0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 5, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_grey
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(6,)]
+Read after code: 10.983100294000906 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is small-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is small-sized and light?
+Type:
+Classify: 3.696321784000247 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+93
+Understand: 17.50855249899905 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.395, 0.015, 0.3333333333333333, -0.4266666666666667], [0.5, -0.505, -1.0, -0.9733333333333334], [0.35, 0.675, 1.0, 0.14666666666666667], [-0.06, -0.315, -0.6666666666666666, 0.92], [-0.095, 0.785, 1.0, -0.5333333333333333], [-0.575, -0.56, 0.0, 0.68], [-0.235, 0.575, 1.0, 0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3)]
+Read after code: 21.25250559899905 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7177537000874012
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those?
+Type:
+Classify: 3.3604459790003602 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_above_ab = is_above(c, [a,b], ctx)
+45
+Understand: 10.610480200000893 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.335, 0.3, 0.3333333333333333, -0.4266666666666667], [-0.835, 0.345, -0.3333333333333333, 0.3466666666666667], [0.675, -0.03, -0.6666666666666666, 0.92], [0.105, -0.85, 0.3333333333333333, -0.2], [0.16, -0.275, 0.0, 0.68], [-0.405, 0.475, -1.0, -0.48], [0.5, 0.865, 1.0, 0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and grey color dot above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2, 6), (0, 2, 3)]
+Read after code: 13.99216780900133 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8917792943258869
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is small-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the medium size and dark color one. <selection>.
+Type:
+Classify: 3.8537442260003445 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+29
+Understand: 7.2512449260011635 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.395, 0.015, 0.3333333333333333, -0.4266666666666667], [0.5, -0.505, -1.0, -0.9733333333333334], [0.35, 0.675, 1.0, 0.14666666666666667], [-0.06, -0.315, -0.6666666666666666, 0.92], [-0.095, 0.785, 1.0, -0.5333333333333333], [-0.575, -0.56, 0.0, 0.68], [-0.235, 0.575, 1.0, 0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 3, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0,)]
+Read after code: 11.144879376999597 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and grey?
+Type:
+Classify: 4.251078646999304 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = a == get_bottom([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top = b == get_top([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+91
+Understand: 19.87758477100033 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.22, 0.565, 0.6666666666666666, -0.6], [0.645, -0.085, 0.3333333333333333, 0.18666666666666668], [0.245, -0.58, 0.0, -0.3333333333333333], [0.395, 0.14, 0.3333333333333333, -0.7066666666666667], [0.39, 0.555, -0.6666666666666666, 0.06666666666666667], [-0.805, 0.575, -1.0, 0.6133333333333333], [-0.465, 0.47, 1.0, 1.0]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = a == get_bottom([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top = b == get_top([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_top
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3, 4)]
+Read after code: 24.183795344000828 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.71422023781661
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and dark color dot to the left and above those?
+Type:
+Classify: 4.571751056000721 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_left_a = is_left(c, a, ctx)
+check_c_above_b = is_above(c, b, ctx)```
+55
+Understand: 11.69686462899881 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.585, -0.615, 1.0, -0.8266666666666667], [0.52, 0.255, -1.0, -0.5333333333333333], [0.045, -0.015, 0.3333333333333333, 0.18666666666666668], [-0.355, -0.51, 0.0, -0.3333333333333333], [-0.205, 0.21, 0.3333333333333333, -0.7066666666666667], [-0.205, 0.625, -0.6666666666666666, 0.06666666666666667], [0.88, 0.415, -0.3333333333333333, 0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and dark color dot to the left and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_left_a = is_left(c, a, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_dark
+                    and check_c_left_a
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 16.307417586000156 seconds
+Followup config inclusion prob: 0.41068705393006744
+Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is medium-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No, do you see a pair of dots where the bottom right dot is medium-sized and grey and the top left dot is medium-sized and dark?
+Type:
+Classify: 2.9502836100000422 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom right dot is medium-sized and grey and the top left dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+96
+Understand: 20.03525909599921 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.22, 0.565, 0.6666666666666666, -0.6], [0.645, -0.085, 0.3333333333333333, 0.18666666666666668], [0.245, -0.58, 0.0, -0.3333333333333333], [0.395, 0.14, 0.3333333333333333, -0.7066666666666667], [0.39, 0.555, -0.6666666666666666, 0.06666666666666667], [-0.805, 0.575, -1.0, 0.6133333333333333], [-0.465, 0.47, 1.0, 1.0]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom right dot is medium-sized and grey and the top left dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_medium
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 3)]
+Read after code: 23.012701485000434 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8349839271145597
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and dark color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes, let's select the medium size and dark color one. <selection>.
+Type:
+Classify: 3.1564927809995424 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+29
+Understand: 8.081802138000057 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.585, -0.615, 1.0, -0.8266666666666667], [0.52, 0.255, -1.0, -0.5333333333333333], [0.045, -0.015, 0.3333333333333333, 0.18666666666666668], [-0.355, -0.51, 0.0, -0.3333333333333333], [-0.205, 0.21, 0.3333333333333333, -0.7066666666666667], [-0.205, 0.625, -0.6666666666666666, 0.06666666666666667], [0.88, 0.415, -0.3333333333333333, 0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 4)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 11.25310321699908 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is medium-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is medium-sized and grey?
+Type:
+Classify: 2.442636747000506 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is medium-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+96
+Understand: 16.94223990199862 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.245, 0.395, 0.0, 0.4666666666666667], [-0.675, 0.48, 0.3333333333333333, -0.5866666666666667], [-0.03, -0.81, -0.6666666666666666, -0.05333333333333334], [0.44, 0.27, 0.6666666666666666, 0.6], [0.01, -0.145, 0.3333333333333333, -0.25333333333333335], [-0.33, 0.545, 0.6666666666666666, -0.06666666666666667], [0.11, -0.7, 0.3333333333333333, -0.013333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is medium-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_bottom_right
+                    and check_b_medium
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 4)]
+Read after code: 19.409609465999893 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.18414591730653146
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the right of those?
+Type:
+Classify: 3.978052476000812 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and light color dot to the right of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+42
+Understand: 11.425151450001067 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.61, 0.16, 0.0, 0.4666666666666667], [-0.775, 0.03, -0.3333333333333333, 0.3333333333333333], [0.185, 0.25, 0.3333333333333333, -0.5866666666666667], [-0.65, -0.23, 0.0, 0.7733333333333333], [0.865, -0.38, 0.3333333333333333, -0.25333333333333335], [0.525, 0.31, 0.6666666666666666, -0.06666666666666667], [-0.02, -0.98, -0.6666666666666666, -0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 4)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and light color dot to the right of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 15.430848488000265 seconds
+Followup config inclusion prob: 0.5416485984097704
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a large size and grey color dot to the left and above those?
+Type:
+Classify: 3.1038890489999176 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Is there a large size and grey color dot to the left and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_left_a = is_left(c, a, ctx)
+check_c_above_b = is_above(c, b, ctx)```
+57
+Understand: 12.341740104000564 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.245, 0.395, 0.0, 0.4666666666666667], [-0.675, 0.48, 0.3333333333333333, -0.5866666666666667], [-0.03, -0.81, -0.6666666666666666, -0.05333333333333334], [0.44, 0.27, 0.6666666666666666, 0.6], [0.01, -0.145, 0.3333333333333333, -0.25333333333333335], [-0.33, 0.545, 0.6666666666666666, -0.06666666666666667], [0.11, -0.7, 0.3333333333333333, -0.013333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 4)]
+
+
+# Turn 0
+# Them: No. Is there a large size and grey color dot to the left and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_left_a = is_left(c, a, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_grey
+                    and check_c_left_a
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 4, 5)]
+Read after code: 15.467325673000232 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.06641025390899406
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot right of those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a large size and grey color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes. Is there a medium-sized and dark-colored dot left of those?
+Type:
+Classify: 2.698957650000011 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a medium-sized and dark-colored dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_medium = is_medium_size(d, ctx)
+check_d_dark = is_dark(d, ctx)
+check_d_left = is_left(d, [a,b,c], ctx)
+45
+Understand: 10.779190097999162 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.61, 0.16, 0.0, 0.4666666666666667], [-0.775, 0.03, -0.3333333333333333, 0.3333333333333333], [0.185, 0.25, 0.3333333333333333, -0.5866666666666667], [-0.65, -0.23, 0.0, 0.7733333333333333], [0.865, -0.38, 0.3333333333333333, -0.25333333333333335], [0.525, 0.31, 0.6666666666666666, -0.06666666666666667], [-0.02, -0.98, -0.6666666666666666, -0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 4, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a medium-sized and dark-colored dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_medium = is_medium_size(d, ctx)
+                check_d_dark = is_dark(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_medium
+                    and check_d_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2, 4, 5)]
+Read after code: 13.523143331000028 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.9394943419254603
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a large size and grey color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and dark color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes, let's select the medium size and grey color one. <selection>.
+Type:
+Classify: 4.49665540100068 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+31
+Understand: 8.384806723999645 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.245, 0.395, 0.0, 0.4666666666666667], [-0.675, 0.48, 0.3333333333333333, -0.5866666666666667], [-0.03, -0.81, -0.6666666666666666, -0.05333333333333334], [0.44, 0.27, 0.6666666666666666, 0.6], [0.01, -0.145, 0.3333333333333333, -0.25333333333333335], [-0.33, 0.545, 0.6666666666666666, -0.06666666666666667], [0.11, -0.7, 0.3333333333333333, -0.013333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 4, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 12.903078982000807 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is small-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is small-sized and light?
+Type:
+Classify: 2.6518687159987167 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+84
+Understand: 16.6881418009998 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.035, 0.18, -0.3333333333333333, 0.7333333333333333], [-0.02, 0.775, -1.0, -0.6266666666666667], [0.115, -0.23, -0.6666666666666666, 0.8], [-0.03, -0.66, 1.0, -0.9333333333333333], [-0.33, 0.805, -0.6666666666666666, -0.17333333333333334], [-0.915, -0.285, -0.6666666666666666, 0.7866666666666666], [0.95, 0.115, 0.0, 0.72]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_top
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3)]
+Read after code: 19.39602957199895 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.5388996908513131
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot left of those?
+Type:
+Classify: 4.3510110289989825 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and light color dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+42
+Understand: 8.459995936000269 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.26, 0.445, -0.3333333333333333, 0.7333333333333333], [0.34, 0.04, -0.6666666666666666, 0.8], [0.195, -0.395, 1.0, -0.9333333333333333], [0.695, -0.715, -0.6666666666666666, -0.2], [-0.365, -0.585, -1.0, 0.17333333333333334], [-0.72, -0.595, 1.0, -0.7333333333333333], [-0.69, -0.02, -0.6666666666666666, 0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(5, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and light color dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_light = is_light(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_light
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 5, 6), (0, 5, 6)]
+Read after code: 12.860436154998752 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.15676540577736048
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is small-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a small size and grey color dot near any of those?
+Type:
+Classify: 4.044797946999097 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and grey color dot near any of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_small = is_small(d, ctx)
+check_d_grey = is_grey(d, ctx)
+check_d_near_abc = any([all_close([dot, d], ctx) for dot in [a, b, c]])
+```
+59
+Understand: 20.392982610999752 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.035, 0.18, -0.3333333333333333, 0.7333333333333333], [-0.02, 0.775, -1.0, -0.6266666666666667], [0.115, -0.23, -0.6666666666666666, 0.8], [-0.03, -0.66, 1.0, -0.9333333333333333], [-0.33, 0.805, -0.6666666666666666, -0.17333333333333334], [-0.915, -0.285, -0.6666666666666666, 0.7866666666666666], [0.95, 0.115, 0.0, 0.72]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 3, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and grey color dot near any of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_small = is_small(d, ctx)
+                check_d_grey = is_grey(d, ctx)
+                check_d_near_abc = any([all_close([dot, d], ctx) for dot in [a, b, c]])
+                
+                if (
+                    True 
+                    and check_d_small
+                    and check_d_grey
+                    and check_d_near_abc
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 24.487179867999657 seconds
+Followup config inclusion prob: 0.6083941444076917
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot left of those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a small size and grey color dot near any of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: No, let's select the one that's large in size and dark in color. <selection>.
+Type:
+Classify: 4.002502948000256 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, let's select the one that's large in size and dark in color. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+```
+27
+Understand: 7.203081270999974 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.26, 0.445, -0.3333333333333333, 0.7333333333333333], [0.34, 0.04, -0.6666666666666666, 0.8], [0.195, -0.395, 1.0, -0.9333333333333333], [0.695, -0.715, -0.6666666666666666, -0.2], [-0.365, -0.585, -1.0, 0.17333333333333334], [-0.72, -0.595, 1.0, -0.7333333333333333], [-0.69, -0.02, -0.6666666666666666, 0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4, 5, 6)]
+
+
+# Turn 0
+# Them: No, let's select the one that's large in size and dark in color. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_dark
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(5,)]
+Read after code: 11.22739544199976 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and dark?
+Type:
+Classify: 2.7311944070006575 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a, b], ctx)
+check_a_bottom_right = a == get_bottom_right([a, b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top_left = b == get_top_left([a, b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+95
+Understand: 20.59219443800066 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.76, 0.525, 0.0, 0.7466666666666667], [0.35, -0.735, 0.6666666666666666, -0.7866666666666666], [-0.8, -0.09, 0.3333333333333333, 0.08], [0.55, -0.34, -0.3333333333333333, 0.7733333333333333], [-0.26, -0.875, -0.6666666666666666, -0.09333333333333334], [-0.045, -0.365, -0.3333333333333333, -0.4266666666666667], [0.86, -0.015, -0.6666666666666666, -0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a, b], ctx)
+                check_a_bottom_right = a == get_bottom_right([a, b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top_left = b == get_top_left([a, b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_right
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_top_left
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 5)]
+Read after code: 23.348771016999308 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7086942002134555
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and light color dot to the right and above those?
+Type:
+Classify: 4.232922308001434 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and light color dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_above_a = is_above(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_above_b = is_above(c, b, ctx)
+```
+81
+Understand: 16.196406725999623 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.485, -0.005, 0.6666666666666666, -0.7866666666666666], [0.105, 0.365, 0.0, 0.13333333333333333], [0.625, -0.34, 1.0, -0.6666666666666666], [-0.285, 0.39, -0.3333333333333333, 0.7733333333333333], [0.25, 0.24, 1.0, -0.22666666666666666], [-0.88, 0.365, -0.3333333333333333, -0.4266666666666667], [0.025, 0.715, -0.6666666666666666, -0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and light color dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_above_a = is_above(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_above_b = is_above(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_light
+                    and check_c_right_a
+                    and check_c_above_a
+                    and check_c_right_b
+                    and check_c_above_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3, 5)]
+Read after code: 20.480228811000416 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8330461252722233
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is large-sized and dark and the top left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the small size and dark color one. <selection>.
+Type:
+Classify: 2.737199925000823 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+27
+Understand: 5.0909405759994115 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.76, 0.525, 0.0, 0.7466666666666667], [0.35, -0.735, 0.6666666666666666, -0.7866666666666666], [-0.8, -0.09, 0.3333333333333333, 0.08], [0.55, -0.34, -0.3333333333333333, 0.7733333333333333], [-0.26, -0.875, -0.6666666666666666, -0.09333333333333334], [-0.045, -0.365, -0.3333333333333333, -0.4266666666666667], [0.86, -0.015, -0.6666666666666666, -0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 3, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(5,)]
+Read after code: 7.87677580700074 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and light?
+Type:
+Classify: 2.95852119600022 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a, b], ctx)
+check_a_left = a == get_left([a, b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_right = b == get_right([a, b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+90
+Understand: 21.16593489799925 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.125, 0.865, 0.3333333333333333, 0.6], [0.135, -0.925, 0.6666666666666666, -0.8933333333333333], [-0.61, 0.165, 0.6666666666666666, -0.3466666666666667], [0.265, -0.01, 0.0, -0.8933333333333333], [0.735, -0.53, -1.0, -0.05333333333333334], [0.34, 0.195, -0.6666666666666666, -0.52], [0.315, 0.785, -0.6666666666666666, -0.41333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a, b], ctx)
+                check_a_left = a == get_left([a, b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_right = b == get_right([a, b], ctx)
+                check_b_large = is_large(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_right
+                    and check_b_large
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 24.174814484000308 seconds
+Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the bottom dot is medium-sized and dark and the top dot is small-sized and dark?
+Type:
+Classify: 2.4915989649998664 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom dot is medium-sized and dark and the top dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+85
+Understand: 17.635578637000435 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.05, -0.475, 0.6666666666666666, -0.8933333333333333], [-0.96, -0.205, 0.0, 0.16], [0.305, -0.545, 0.6666666666666666, 0.56], [0.605, -0.29, 0.6666666666666666, -0.14666666666666667], [0.075, 0.44, 0.0, -0.8933333333333333], [0.55, -0.08, -1.0, -0.05333333333333334], [0.155, 0.645, -0.6666666666666666, -0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom dot is medium-sized and dark and the top dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_top
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4, 6)]
+Read after code: 20.15536752600019 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.696627802855394
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: Yes, is there a small size and grey color dot to the right and below those?
+Type:
+Classify: 2.85449773900109 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_right_ab = is_right(c, [a,b], ctx)
+check_c_below_ab = is_below(c, [a,b], ctx)
+```
+61
+Understand: 15.99096279999867 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.125, 0.865, 0.3333333333333333, 0.6], [0.135, -0.925, 0.6666666666666666, -0.8933333333333333], [-0.61, 0.165, 0.6666666666666666, -0.3466666666666667], [0.265, -0.01, 0.0, -0.8933333333333333], [0.735, -0.53, -1.0, -0.05333333333333334], [0.34, 0.195, -0.6666666666666666, -0.52], [0.315, 0.785, -0.6666666666666666, -0.41333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and grey color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_right_ab = is_right(c, [a,b], ctx)
+                check_c_below_ab = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_grey
+                    and check_c_right_ab
+                    and check_c_below_ab
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3, 4, 5)]
+Read after code: 18.86721175999992 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6275142625966705
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 2: Yes. Is there a small size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, let's select the medium size and dark color one. <selection>.
+Type:
+Classify: 2.581885007000892 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+29
+Understand: 8.576284144000965 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.05, -0.475, 0.6666666666666666, -0.8933333333333333], [-0.96, -0.205, 0.0, 0.16], [0.305, -0.545, 0.6666666666666666, 0.56], [0.605, -0.29, 0.6666666666666666, -0.14666666666666667], [0.075, 0.44, 0.0, -0.8933333333333333], [0.55, -0.08, -1.0, -0.05333333333333334], [0.155, 0.645, -0.6666666666666666, -0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 5, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 11.207280032998824 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top dot is large-sized and dark and the bottom dot is large-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and dark and the bottom dot is large-sized and dark?
+Type:
+Classify: 2.6823584219982877 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is large-sized and dark and the bottom dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = is_above(a, b, ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom = is_below(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+84
+Understand: 19.138481981999576 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.15, 0.135, 0.3333333333333333, -0.9733333333333334], [-0.74, 0.24, 0.0, 0.26666666666666666], [0.4, -0.34, 0.6666666666666666, -0.37333333333333335], [0.215, 0.66, -0.3333333333333333, -0.6666666666666666], [0.035, -0.16, 1.0, -0.7866666666666666], [-0.485, -0.675, -0.3333333333333333, -0.76], [0.275, 0.505, 0.6666666666666666, 0.68]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is large-sized and dark and the bottom dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = is_above(a, b, ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom = is_below(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_bottom
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 4), (2, 4)]
+Read after code: 21.84656512299989 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.5642017926738816
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and dark and the bottom dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a medium-sized and grey-colored dot to the left and above those?
+Type:
+Classify: 4.030037859000004 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and grey-colored dot to the left and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_left_a = is_left(c, a, ctx)
+check_c_above_b = is_above(c, b, ctx)```
+58
+Understand: 12.628867938999974 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.22, 0.855, 0.3333333333333333, -0.9733333333333334], [0.77, 0.38, 0.6666666666666666, -0.37333333333333335], [-0.5, -0.43, 0.0, -0.4533333333333333], [0.405, 0.56, 1.0, -0.7866666666666666], [-0.035, -0.4, 0.0, -0.3333333333333333], [-0.115, 0.04, -0.3333333333333333, -0.76], [0.96, -0.175, 0.6666666666666666, -0.7066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a medium-sized and grey-colored dot to the left and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_left_a = is_left(c, a, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_grey
+                    and check_c_left_a
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 4, 6)]
+Read after code: 16.71720250099861 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.18809655821905025
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and dark and the bottom dot is large-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a medium size and grey color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a large size and dark color dot to the right of those?
+Type:
+Classify: 3.985801509999874 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and dark color dot to the right of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_dark = is_dark(d, ctx)
+check_d_right_abc = is_right(d, [a,b,c], ctx)
+46
+Understand: 8.560699618001308 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.15, 0.135, 0.3333333333333333, -0.9733333333333334], [-0.74, 0.24, 0.0, 0.26666666666666666], [0.4, -0.34, 0.6666666666666666, -0.37333333333333335], [0.215, 0.66, -0.3333333333333333, -0.6666666666666666], [0.035, -0.16, 1.0, -0.7866666666666666], [-0.485, -0.675, -0.3333333333333333, -0.76], [0.275, 0.505, 0.6666666666666666, 0.68]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 4)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and dark color dot to the right of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_dark = is_dark(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1, 2, 4)]
+Read after code: 12.567907512999227 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8945743176563099
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and dark and the bottom dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a medium size and grey color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a large size and dark color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, let's select the medium size and dark color one. <selection>.
+Type:
+Classify: 3.6375149029991007 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+a
+Code:
+```
+check_a_medium_size = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+```
+29
+Understand: 4.812528784001188 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.22, 0.855, 0.3333333333333333, -0.9733333333333334], [0.77, 0.38, 0.6666666666666666, -0.37333333333333335], [-0.5, -0.43, 0.0, -0.4533333333333333], [0.405, 0.56, 1.0, -0.7866666666666666], [-0.035, -0.4, 0.0, -0.3333333333333333], [-0.115, 0.04, -0.3333333333333333, -0.76], [0.96, -0.175, 0.6666666666666666, -0.7066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 3, 4, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_a_medium_size = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_medium_size
+                    and check_a_dark
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 8.464909842001362 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark?
+Type:
+Classify: 2.367775144000916 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_right = a == get_bottom_right([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top_left = b == get_top_left([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+92
+Understand: 20.907348789000025 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, 0.02, 0.0, 0.14666666666666667], [-0.055, -0.455, 0.0, 0.21333333333333335], [-0.26, -0.39, 0.3333333333333333, -0.21333333333333335], [0.405, -0.375, -1.0, 0.52], [0.715, 0.49, -1.0, -0.64], [-0.055, 0.85, 0.6666666666666666, 0.52], [-0.66, 0.065, 1.0, -0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_right = a == get_bottom_right([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top_left = b == get_top_left([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_right
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_top_left
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 23.30002296999919 seconds
+Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark?
+Type:
+Classify: 3.2976545949986757 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+95
+Understand: 18.12732686599884 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.175, -0.52, 0.0, 0.14666666666666667], [0.51, 0.59, 0.3333333333333333, 0.7466666666666667], [0.13, -0.92, -1.0, 0.52], [0.79, -0.375, -1.0, -0.76], [-0.58, 0.57, 0.6666666666666666, 0.6266666666666667], [0.44, -0.05, -1.0, -0.64], [-0.33, 0.305, 0.6666666666666666, 0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_medium
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 21.445580989999144 seconds
+Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is large-sized and light?
+Type:
+Classify: 1.8279609310011438 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+92
+Understand: 20.450127565000003 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, 0.02, 0.0, 0.14666666666666667], [-0.055, -0.455, 0.0, 0.21333333333333335], [-0.26, -0.39, 0.3333333333333333, -0.21333333333333335], [0.405, -0.375, -1.0, 0.52], [0.715, 0.49, -1.0, -0.64], [-0.055, 0.85, 0.6666666666666666, 0.52], [-0.66, 0.065, 1.0, -0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_large
+                    and check_a_light
+                    and check_b_bottom_right
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 22.330305986000894 seconds
+Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 3: No, do you see a pair of dots where the bottom left dot is medium-sized and grey and the top right dot is small-sized and dark?
+Type:
+Classify: 2.6762470890007535 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom left dot is medium-sized and grey and the top right dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_top_right = b == get_top_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+95
+Understand: 18.744939966998572 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.175, -0.52, 0.0, 0.14666666666666667], [0.51, 0.59, 0.3333333333333333, 0.7466666666666667], [0.13, -0.92, -1.0, 0.52], [0.79, -0.375, -1.0, -0.76], [-0.58, 0.57, 0.6666666666666666, 0.6266666666666667], [0.44, -0.05, -1.0, -0.64], [-0.33, 0.305, 0.6666666666666666, 0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom left dot is medium-sized and grey and the top right dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_top_right = b == get_top_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_left
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_top_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 21.469112085000233 seconds
+Do you see a pair of dots, where the top dot is medium-sized and light and the bottom dot is small-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 4: No, do you see a pair of dots where the top dot is medium-sized and light and the bottom dot is small-sized and dark?
+Type:
+Classify: 5.499055538999528 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top dot is medium-sized and light and the bottom dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = a == get_top([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom = b == get_bottom([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+89
+Understand: 20.784065076000843 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, 0.02, 0.0, 0.14666666666666667], [-0.055, -0.455, 0.0, 0.21333333333333335], [-0.26, -0.39, 0.3333333333333333, -0.21333333333333335], [0.405, -0.375, -1.0, 0.52], [0.715, 0.49, -1.0, -0.64], [-0.055, 0.85, 0.6666666666666666, 0.52], [-0.66, 0.065, 1.0, -0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top dot is medium-sized and light and the bottom dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = a == get_top([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom = b == get_bottom([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_bottom
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 26.30239935099962 seconds
+Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is small-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 3: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 4: No. Do you see a pair of dots, where the top dot is medium-sized and light and the bottom dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 5: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is small-sized and light?
+Type:
+Classify: 2.1794009789991833 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+91
+Understand: 14.364980522001133 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.175, -0.52, 0.0, 0.14666666666666667], [0.51, 0.59, 0.3333333333333333, 0.7466666666666667], [0.13, -0.92, -1.0, 0.52], [0.79, -0.375, -1.0, -0.76], [-0.58, 0.57, 0.6666666666666666, 0.6266666666666667], [0.44, -0.05, -1.0, -0.64], [-0.33, 0.305, 0.6666666666666666, 0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2)]
+Read after code: 16.57929662999959 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6827337986926312
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 4: No. Do you see a pair of dots, where the top dot is medium-sized and light and the bottom dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 6: Yes, is there a small size and dark color dot to the right and above those?
+Type:
+Classify: 3.9076506679994054 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_above_a = is_above(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_above_b = is_above(c, b, ctx)```
+81
+Understand: 17.258264739999504 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, 0.02, 0.0, 0.14666666666666667], [-0.055, -0.455, 0.0, 0.21333333333333335], [-0.26, -0.39, 0.3333333333333333, -0.21333333333333335], [0.405, -0.375, -1.0, 0.52], [0.715, 0.49, -1.0, -0.64], [-0.055, 0.85, 0.6666666666666666, 0.52], [-0.66, 0.065, 1.0, -0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 3)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and dark color dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_above_a = is_above(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    and check_c_right_a
+                    and check_c_above_a
+                    and check_c_right_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 3, 4)]
+Read after code: 21.180391934 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.2234324202875326
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 3: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 4: No. Do you see a pair of dots, where the top dot is medium-sized and light and the bottom dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 5: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is small-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 6: Yes. Is there a small size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 7: Yes. Is there a medium-sized and grey-colored dot near any of those?
+Type:
+Classify: 4.22707260900097 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a medium-sized and grey-colored dot near any of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_medium = is_medium_size(d, ctx)
+check_d_grey = is_grey(d, ctx)
+check_d_near_abc = any([all_close([dot, d], ctx) for dot in [a, b, c]])
+```
+60
+Understand: 14.990582313001141 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.175, -0.52, 0.0, 0.14666666666666667], [0.51, 0.59, 0.3333333333333333, 0.7466666666666667], [0.13, -0.92, -1.0, 0.52], [0.79, -0.375, -1.0, -0.76], [-0.58, 0.57, 0.6666666666666666, 0.6266666666666667], [0.44, -0.05, -1.0, -0.64], [-0.33, 0.305, 0.6666666666666666, 0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a medium-sized and grey-colored dot near any of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_medium = is_medium_size(d, ctx)
+                check_d_grey = is_grey(d, ctx)
+                check_d_near_abc = any([all_close([dot, d], ctx) for dot in [a, b, c]])
+                
+                if (
+                    True 
+                    and check_d_medium
+                    and check_d_grey
+                    and check_d_near_abc
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 19.236518142000932 seconds
+Followup config inclusion prob: 0.6423278481783884
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom right dot is medium-sized and grey and the top left dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the bottom left dot is medium-sized and grey and the top right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 4: No. Do you see a pair of dots, where the top dot is medium-sized and light and the bottom dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 6: Yes. Is there a small size and dark color dot to the right and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 7: Yes. Is there a medium size and grey color dot near any of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 8: No, let's select the medium size and grey color one. <selection>
+Type:
+Classify: 2.5810279209999862 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, let's select the medium size and grey color one. <selection>
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+31
+Understand: 5.523235629001647 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.1, 0.02, 0.0, 0.14666666666666667], [-0.055, -0.455, 0.0, 0.21333333333333335], [-0.26, -0.39, 0.3333333333333333, -0.21333333333333335], [0.405, -0.375, -1.0, 0.52], [0.715, 0.49, -1.0, -0.64], [-0.055, 0.85, 0.6666666666666666, 0.52], [-0.66, 0.065, 1.0, -0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 3, 4)]
+
+
+# Turn 0
+# Them: No, let's select the medium size and grey color one. <selection>
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1,)]
+Read after code: 8.121191373000329 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is small-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is small-sized and dark?
+Type:
+Classify: 4.228286408999338 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = a == get_top([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom = b == get_bottom([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+90
+Understand: 22.66585731899977 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.01, 0.59, -0.3333333333333333, -0.49333333333333335], [-0.305, -0.335, 0.0, -0.92], [-0.135, -0.715, 0.6666666666666666, 0.7066666666666667], [0.41, 0.545, -0.6666666666666666, 0.5333333333333333], [0.39, -0.805, 1.0, -0.30666666666666664], [0.805, -0.465, 0.3333333333333333, -0.7066666666666667], [0.52, 0.75, -0.3333333333333333, -0.6266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = a == get_top([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom = b == get_bottom([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 26.915142840000044 seconds
+Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the top dot is medium-sized and dark and the bottom dot is large-sized and light?
+Type:
+Classify: 2.369970210000247 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top dot is medium-sized and dark and the bottom dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = is_above(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom = is_below(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+85
+Understand: 19.48184147200118 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.1, 0.94, -1.0, -0.22666666666666666], [0.725, 0.2, -0.6666666666666666, 0.04], [-0.715, 0.06, -0.3333333333333333, -0.49333333333333335], [-0.315, 0.015, -0.6666666666666666, 0.5333333333333333], [0.43, -0.125, -0.6666666666666666, 0.18666666666666668], [0.08, -0.995, 0.3333333333333333, -0.7066666666666667], [-0.205, 0.215, -0.3333333333333333, -0.6266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top dot is medium-sized and dark and the bottom dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = is_above(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom = is_below(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_bottom
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 21.87341447000108 seconds
+Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark?
+Type:
+Classify: 3.1439616869993188 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+95
+Understand: 29.13718508099919 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.01, 0.59, -0.3333333333333333, -0.49333333333333335], [-0.305, -0.335, 0.0, -0.92], [-0.135, -0.715, 0.6666666666666666, 0.7066666666666667], [0.41, 0.545, -0.6666666666666666, 0.5333333333333333], [0.39, -0.805, 1.0, -0.30666666666666664], [0.805, -0.465, 0.3333333333333333, -0.7066666666666667], [0.52, 0.75, -0.3333333333333333, -0.6266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom_left
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 32.30148861899943 seconds
+Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: No, do you see a pair of dots where the left dot is small-sized and dark and the right dot is small-sized and light?
+Type:
+Classify: 3.068690580999828 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the left dot is small-sized and dark and the right dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+88
+Understand: 19.00934445600069 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.1, 0.94, -1.0, -0.22666666666666666], [0.725, 0.2, -0.6666666666666666, 0.04], [-0.715, 0.06, -0.3333333333333333, -0.49333333333333335], [-0.315, 0.015, -0.6666666666666666, 0.5333333333333333], [0.43, -0.125, -0.6666666666666666, 0.18666666666666668], [0.08, -0.995, 0.3333333333333333, -0.7066666666666667], [-0.205, 0.215, -0.3333333333333333, -0.6266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the left dot is small-sized and dark and the right dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_right
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3)]
+Read after code: 22.104104984000514 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6988230705625303
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 4: Yes, is there a small size and dark color dot to the right and above those?
+Type:
+Classify: 3.3203827669985913 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_above_a = is_above(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_above_b = is_above(c, b, ctx)
+```
+81
+Understand: 16.479486758998974 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.01, 0.59, -0.3333333333333333, -0.49333333333333335], [-0.305, -0.335, 0.0, -0.92], [-0.135, -0.715, 0.6666666666666666, 0.7066666666666667], [0.41, 0.545, -0.6666666666666666, 0.5333333333333333], [0.39, -0.805, 1.0, -0.30666666666666664], [0.805, -0.465, 0.3333333333333333, -0.7066666666666667], [0.52, 0.75, -0.3333333333333333, -0.6266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 3)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and dark color dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_above_a = is_above(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_above_b = is_above(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    and check_c_right_a
+                    and check_c_above_a
+                    and check_c_right_b
+                    and check_c_above_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3, 6)]
+Read after code: 19.81435167500058 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8960741913042191
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and grey and the bottom dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top right dot is small-sized and grey and the bottom left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: No. Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is small-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 4: Yes. Is there a small size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: Yes, let's select the small size and light color one. <selection>.
+Type:
+Classify: 3.046105176999845 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+27
+Understand: 5.734600293000767 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.1, 0.94, -1.0, -0.22666666666666666], [0.725, 0.2, -0.6666666666666666, 0.04], [-0.715, 0.06, -0.3333333333333333, -0.49333333333333335], [-0.315, 0.015, -0.6666666666666666, 0.5333333333333333], [0.43, -0.125, -0.6666666666666666, 0.18666666666666668], [0.08, -0.995, 0.3333333333333333, -0.7066666666666667], [-0.205, 0.215, -0.3333333333333333, -0.6266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 3, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3,)]
+Read after code: 8.79581948499981 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and dark?
+Type:
+Classify: 1.7840690550001455 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+89
+Understand: 18.654322754000532 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.595, -0.015, 0.6666666666666666, -0.76], [0.325, 0.375, 0.3333333333333333, -0.48], [-0.1, -0.38, 0.3333333333333333, -0.49333333333333335], [-0.235, -0.19, 0.0, 0.12], [0.865, 0.46, 0.6666666666666666, -0.8266666666666667], [0.335, 0.145, 0.0, -0.9466666666666667], [0.06, 0.245, 0.0, 0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_large
+                    and check_a_light
+                    and check_b_right
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 20.464477135999914 seconds
+Do you see a pair of dots, where the right dot is large-sized and dark and the left dot is medium-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the right dot is large-sized and dark and the left dot is medium-sized and dark?
+Type:
+Classify: 1.8099945219983056 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the right dot is large-sized and dark and the left dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = is_left(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_right = is_right(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+85
+Understand: 15.600281299000926 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.06, 0.645, 0.6666666666666666, 0.56], [0.58, -0.385, 0.3333333333333333, -0.48], [0.29, 0.51, 0.3333333333333333, -0.36], [-0.475, 0.75, 0.3333333333333333, -0.88], [0.015, -0.95, 0.0, 0.12], [0.585, -0.61, 0.0, -0.9466666666666667], [0.315, -0.515, 0.0, 0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the right dot is large-sized and dark and the left dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = is_left(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_right = is_right(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_right
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 17.460290782999436 seconds
+Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is large-sized and dark and the left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark?
+Type:
+Classify: 1.7299309900008666 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = a == get_top([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom = b == get_bottom([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+90
+Understand: 18.47459961399909 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.595, -0.015, 0.6666666666666666, -0.76], [0.325, 0.375, 0.3333333333333333, -0.48], [-0.1, -0.38, 0.3333333333333333, -0.49333333333333335], [-0.235, -0.19, 0.0, 0.12], [0.865, 0.46, 0.6666666666666666, -0.8266666666666667], [0.335, 0.145, 0.0, -0.9466666666666667], [0.06, 0.245, 0.0, 0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = a == get_top([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom = b == get_bottom([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_bottom
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 5)]
+Read after code: 20.26450663600008 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7176295191781003
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is large-sized and dark and the left dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium-sized and light-colored dot to the left of those?
+Type:
+Classify: 2.3623848919996817 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a medium-sized and light-colored dot to the left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+43
+Understand: 8.312618482001199 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.06, 0.645, 0.6666666666666666, 0.56], [0.58, -0.385, 0.3333333333333333, -0.48], [0.29, 0.51, 0.3333333333333333, -0.36], [-0.475, 0.75, 0.3333333333333333, -0.88], [0.015, -0.95, 0.0, 0.12], [0.585, -0.61, 0.0, -0.9466666666666667], [0.315, -0.515, 0.0, 0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a medium-sized and light-colored dot to the left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_light = is_light(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_light
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 5, 6)]
+Read after code: 10.713919849999002 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7879159684825952
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is large-sized and dark and the left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and light color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes, let's select the medium size and dark color one. <selection>.
+Type:
+Classify: 3.385487795998415 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+29
+Understand: 7.713357939999696 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.595, -0.015, 0.6666666666666666, -0.76], [0.325, 0.375, 0.3333333333333333, -0.48], [-0.1, -0.38, 0.3333333333333333, -0.49333333333333335], [-0.235, -0.19, 0.0, 0.12], [0.865, 0.46, 0.6666666666666666, -0.8266666666666667], [0.335, 0.145, 0.0, -0.9466666666666667], [0.06, 0.245, 0.0, 0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 5, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(5,), (1,)]
+Read after code: 11.1198311499993 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is small-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is small-sized and dark?
+Type:
+Classify: 2.778859365998869 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+90
+Understand: 21.476587863999157 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.405, -0.71, 0.6666666666666666, 0.06666666666666667], [-0.845, 0.125, -0.6666666666666666, 0.10666666666666667], [-0.065, -0.425, -0.6666666666666666, 0.7466666666666667], [0.55, 0.29, 0.3333333333333333, 0.8133333333333334], [0.64, -0.675, -0.3333333333333333, -0.9733333333333334], [0.55, 0.59, 0.3333333333333333, 0.32], [0.28, 0.64, 0.3333333333333333, -0.49333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_large
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 4)]
+Read after code: 24.275967651999963 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6842228774593127
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and light color dot to the left and above those?
+Type:
+Classify: 3.5508281870006613 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and light color dot to the left and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left_a = is_left(c, a, ctx)
+check_c_above_b = is_above(c, b, ctx)
+```
+55
+Understand: 12.148432152000169 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.43, -0.17, 0.6666666666666666, 0.06666666666666667], [0.31, 0.775, 0.0, 0.30666666666666664], [0.775, -0.54, -0.6666666666666666, -0.22666666666666666], [-0.9, 0.115, -0.6666666666666666, 0.7466666666666667], [0.135, 0.28, 0.3333333333333333, -0.52], [-0.285, 0.83, 0.3333333333333333, 0.8133333333333334], [-0.2, -0.135, -0.3333333333333333, -0.9733333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and light color dot to the left and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_left_a = is_left(c, a, ctx)
+                check_c_above_b = is_above(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_light
+                    and check_c_left_a
+                    and check_c_above_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3, 6)]
+Read after code: 15.748454913000387 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8938578897483902
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and grey and the right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the small size and dark color one. <selection>.
+Type:
+Classify: 2.4608556690000114 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+27
+Understand: 7.20488265899985 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.405, -0.71, 0.6666666666666666, 0.06666666666666667], [-0.845, 0.125, -0.6666666666666666, 0.10666666666666667], [-0.065, -0.425, -0.6666666666666666, 0.7466666666666667], [0.55, 0.29, 0.3333333333333333, 0.8133333333333334], [0.64, -0.675, -0.3333333333333333, -0.9733333333333334], [0.55, 0.59, 0.3333333333333333, 0.32], [0.28, 0.64, 0.3333333333333333, -0.49333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 4)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 9.704036110999368 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is large-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is large-sized and light?
+Type:
+Classify: 2.2673329140015994 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = is_above(a, b, ctx) and is_left(a, b, ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = is_below(b, a, ctx) and is_right(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+104
+Understand: 25.345737953000935 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.095, -0.4, 0.6666666666666666, -0.8933333333333333], [0.775, -0.37, 0.6666666666666666, 0.7466666666666667], [0.325, -0.605, 1.0, 0.6133333333333333], [-0.6, 0.015, 0.6666666666666666, -0.16], [0.535, 0.33, -0.6666666666666666, -0.28], [0.48, -0.655, 0.3333333333333333, 0.44], [-0.28, 0.56, -1.0, 0.09333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = is_above(a, b, ctx) and is_left(a, b, ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = is_below(b, a, ctx) and is_right(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2), (0, 5)]
+Read after code: 27.633499818999553 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7144575059662748
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a medium-sized and light-colored dot to the right and below those?
+Type:
+Classify: 4.506260710999413 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and light-colored dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+58
+Understand: 11.773318139999901 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.46, 0.165, 0.6666666666666666, -0.8933333333333333], [-0.525, -0.235, -0.6666666666666666, 0.41333333333333333], [0.69, -0.04, 1.0, 0.6133333333333333], [-0.775, 0.625, 0.3333333333333333, 0.05333333333333334], [-0.235, 0.58, 0.6666666666666666, -0.16], [-0.215, -0.93, 0.6666666666666666, 0.3466666666666667], [0.845, -0.09, 0.3333333333333333, 0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2)]
+
+
+# Turn 0
+# Them: Yes, is there a medium-sized and light-colored dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_light
+                    and check_c_right
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2, 6)]
+Read after code: 16.32847506700091 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8985008389639284
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is large-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a medium size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the large size and dark color one. <selection>.
+Type:
+Classify: 3.490311126999586 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+```
+27
+Understand: 6.516794142000435 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.095, -0.4, 0.6666666666666666, -0.8933333333333333], [0.775, -0.37, 0.6666666666666666, 0.7466666666666667], [0.325, -0.605, 1.0, 0.6133333333333333], [-0.6, 0.015, 0.6666666666666666, -0.16], [0.535, 0.33, -0.6666666666666666, -0.28], [0.48, -0.655, 0.3333333333333333, 0.44], [-0.28, 0.56, -1.0, 0.09333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_dark
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0,)]
+Read after code: 10.061386074999973 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and grey?
+Type:
+Classify: 2.7841747359998408 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a, b], ctx)
+check_a_left = is_left(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = is_right(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+91
+Understand: 17.325708795999162 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.72, 0.67, 0.0, -0.18666666666666668], [-0.015, -0.18, -0.6666666666666666, -0.96], [-0.675, -0.72, -0.6666666666666666, -0.96], [0.33, -0.075, 0.6666666666666666, 0.5466666666666666], [0.61, -0.78, 0.3333333333333333, -0.8933333333333333], [-0.45, 0.54, 0.0, 0.04], [-0.715, -0.025, -0.3333333333333333, 0.38666666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a, b], ctx)
+                check_a_left = is_left(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = is_right(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_medium
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 5)]
+Read after code: 20.141606654000498 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.689617146807233
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot below those?
+Type:
+Classify: 3.746613730001627 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and light color dot below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_below_ab = is_below(c, [a,b], ctx)
+43
+Understand: 10.958163155000875 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.97, -0.16, 1.0, -0.88], [-0.805, -0.055, 0.0, -0.18666666666666668], [-0.1, -0.91, -0.6666666666666666, -0.96], [0.25, -0.8, 0.6666666666666666, 0.5466666666666666], [0.04, 0.545, -0.6666666666666666, 0.25333333333333335], [-0.535, -0.19, 0.0, 0.04], [-0.355, 0.415, 0.0, 0.68]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and light color dot below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_light = is_light(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_light
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 4, 5)]
+Read after code: 14.734505632000946 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.2992036877551224
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a medium size and light color dot near any of those?
+Type:
+Classify: 4.9053805350013135 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a medium size and light color dot near any of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_medium = is_medium_size(d, ctx)
+check_d_light = is_light(d, ctx)
+check_d_near_abc = any([all_close([dot, d], ctx) for dot in [a, b, c]])
+```
+58
+Understand: 13.76826085599896 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.72, 0.67, 0.0, -0.18666666666666668], [-0.015, -0.18, -0.6666666666666666, -0.96], [-0.675, -0.72, -0.6666666666666666, -0.96], [0.33, -0.075, 0.6666666666666666, 0.5466666666666666], [0.61, -0.78, 0.3333333333333333, -0.8933333333333333], [-0.45, 0.54, 0.0, 0.04], [-0.715, -0.025, -0.3333333333333333, 0.38666666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 5, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a medium size and light color dot near any of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_medium = is_medium_size(d, ctx)
+                check_d_light = is_light(d, ctx)
+                check_d_near_abc = any([all_close([dot, d], ctx) for dot in [a, b, c]])
+                
+                if (
+                    True 
+                    and check_d_medium
+                    and check_d_light
+                    and check_d_near_abc
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 18.73191103099998 seconds
+Followup config inclusion prob: 0.8968326015963706
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a medium size and light color dot near any of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: No, let's select the medium size and grey color one. <selection>
+Type:
+Classify: 6.081148310000572 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, let's select the medium size and grey color one. <selection>
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+31
+Understand: 6.507570097999633 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.97, -0.16, 1.0, -0.88], [-0.805, -0.055, 0.0, -0.18666666666666668], [-0.1, -0.91, -0.6666666666666666, -0.96], [0.25, -0.8, 0.6666666666666666, 0.5466666666666666], [0.04, 0.545, -0.6666666666666666, 0.25333333333333335], [-0.535, -0.19, 0.0, 0.04], [-0.355, 0.415, 0.0, 0.68]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4, 5)]
+
+
+# Turn 0
+# Them: No, let's select the medium size and grey color one. <selection>
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(5,), (1,)]
+Read after code: 12.612143419999484 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is large-sized and light and the right dot is large-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is large-sized and grey?
+Type:
+Classify: 3.954646568001408 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_grey = is_grey(b, ctx)
+89
+Understand: 23.311204521000036 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.325, -0.92, 0.6666666666666666, 0.6], [0.88, 0.285, 1.0, 0.5733333333333334], [-0.47, -0.57, 0.0, -0.8133333333333334], [0.765, -0.125, 0.3333333333333333, 0.6933333333333334], [-0.4, 0.175, 1.0, -0.21333333333333335], [-0.075, -0.145, -0.3333333333333333, 0.7066666666666667], [0.13, -0.945, 0.3333333333333333, -0.16]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is large-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_large
+                    and check_a_light
+                    and check_b_right
+                    and check_b_large
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 3)]
+Read after code: 27.286041589999513 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6840191188552369
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and light color dot to the left and below those?
+Type:
+Classify: 5.040988329001266 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+57
+Understand: 13.123704178999105 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.27, -0.89, 0.6666666666666666, 0.6], [0.29, 0.32, 1.0, 0.5733333333333334], [0.17, -0.09, 0.3333333333333333, 0.6933333333333334], [0.29, -0.74, 0.3333333333333333, -0.04], [0.59, 0.505, 0.6666666666666666, -0.09333333333333334], [0.7, -0.525, 0.6666666666666666, -0.14666666666666667], [-0.665, -0.11, -0.3333333333333333, 0.7066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and light color dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_left = is_left(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_light
+                    and check_c_left
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 4, 6)]
+Read after code: 18.17968899600055 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.18132214693231996
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a medium size and light color dot near any of those?
+Type:
+Classify: 2.8125704000012774 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a medium size and light color dot near any of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_medium = is_medium_size(d, ctx)
+check_d_light = is_light(d, ctx)
+check_d_near_abc = any([all_close([dot, d], ctx) for dot in [a, b, c]])
+```
+58
+Understand: 11.398779138999089 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.325, -0.92, 0.6666666666666666, 0.6], [0.88, 0.285, 1.0, 0.5733333333333334], [-0.47, -0.57, 0.0, -0.8133333333333334], [0.765, -0.125, 0.3333333333333333, 0.6933333333333334], [-0.4, 0.175, 1.0, -0.21333333333333335], [-0.075, -0.145, -0.3333333333333333, 0.7066666666666667], [0.13, -0.945, 0.3333333333333333, -0.16]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 3, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a medium size and light color dot near any of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_medium = is_medium_size(d, ctx)
+                check_d_light = is_light(d, ctx)
+                check_d_near_abc = any([all_close([dot, d], ctx) for dot in [a, b, c]])
+                
+                if (
+                    True 
+                    and check_d_medium
+                    and check_d_light
+                    and check_d_near_abc
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 14.230335125999773 seconds
+Followup config inclusion prob: 0.8973655217255128
+IN READ
+No
+UPDATED BELIEF denied
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a medium size and light color dot near any of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: No, let's select the medium size and light color one. <selection>.
+Type:
+Classify: 2.503482072999759 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, let's select the medium size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+29
+Understand: 6.923959957999614 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.27, -0.89, 0.6666666666666666, 0.6], [0.29, 0.32, 1.0, 0.5733333333333334], [0.17, -0.09, 0.3333333333333333, 0.6933333333333334], [0.29, -0.74, 0.3333333333333333, -0.04], [0.59, 0.505, 0.6666666666666666, -0.09333333333333334], [0.7, -0.525, 0.6666666666666666, -0.14666666666666667], [-0.665, -0.11, -0.3333333333333333, 0.7066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4, 6)]
+
+
+# Turn 0
+# Them: No, let's select the medium size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(6,)]
+Read after code: 9.440894440000193 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey?
+Type:
+Classify: 2.7340856329992675 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_top_right = b == get_top_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+94
+Understand: 18.91894827299984 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.405, 0.305, 0.3333333333333333, -0.3466666666666667], [-0.24, -0.43, 0.0, -0.05333333333333334], [-0.39, 0.185, 1.0, 0.56], [-0.88, -0.02, -0.3333333333333333, -0.72], [-0.475, -0.77, 0.3333333333333333, 0.8933333333333333], [0.21, -0.505, 0.6666666666666666, 0.8133333333333334], [0.275, 0.5, -0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_top_right = b == get_top_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_left
+                    and check_a_large
+                    and check_a_light
+                    and check_b_top_right
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 21.679001944999982 seconds
+Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the left dot is medium-sized and grey and the right dot is large-sized and light?
+Type:
+Classify: 2.6957227169987164 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the left dot is medium-sized and grey and the right dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = is_left(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = is_right(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+87
+Understand: 19.368061084000146 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.135, -0.05, 0.3333333333333333, -0.3466666666666667], [-0.93, -0.175, 1.0, 0.56], [0.37, 0.25, 0.6666666666666666, -0.5733333333333334], [0.265, 0.775, -0.6666666666666666, 0.06666666666666667], [0.56, -0.19, 0.6666666666666666, 0.52], [-0.33, -0.865, 0.6666666666666666, 0.8133333333333334], [-0.26, 0.145, -0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the left dot is medium-sized and grey and the right dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = is_left(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = is_right(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 22.083800999000232 seconds
+Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the top dot is medium-sized and dark and the bottom dot is large-sized and light?
+Type:
+Classify: 3.4509033159993123 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top dot is medium-sized and dark and the bottom dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = is_above(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom = is_below(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+85
+Understand: 16.898961111000972 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.405, 0.305, 0.3333333333333333, -0.3466666666666667], [-0.24, -0.43, 0.0, -0.05333333333333334], [-0.39, 0.185, 1.0, 0.56], [-0.88, -0.02, -0.3333333333333333, -0.72], [-0.475, -0.77, 0.3333333333333333, 0.8933333333333333], [0.21, -0.505, 0.6666666666666666, 0.8133333333333334], [0.275, 0.5, -0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top dot is medium-sized and dark and the bottom dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = is_above(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom = is_below(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_bottom
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 20.397632647998762 seconds
+Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 3: No, do you see a pair of dots where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and light?
+Type:
+Classify: 2.6915655430002516 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+96
+Understand: 22.639992787000665 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.135, -0.05, 0.3333333333333333, -0.3466666666666667], [-0.93, -0.175, 1.0, 0.56], [0.37, 0.25, 0.6666666666666666, -0.5733333333333334], [0.265, 0.775, -0.6666666666666666, 0.06666666666666667], [0.56, -0.19, 0.6666666666666666, 0.52], [-0.33, -0.865, 0.6666666666666666, 0.8133333333333334], [-0.26, 0.145, -0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_bottom_left
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 25.396981132000292 seconds
+Do you see a pair of dots, where the bottom right dot is medium-sized and dark and the top left dot is small-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 4: No, do you see a pair of dots where the bottom right dot is medium-sized and dark, and the top left dot is small-sized and grey?
+Type:
+Classify: 2.7303584669989505 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom right dot is medium-sized and dark, and the top left dot is small-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+95
+Understand: 21.21304072000021 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.405, 0.305, 0.3333333333333333, -0.3466666666666667], [-0.24, -0.43, 0.0, -0.05333333333333334], [-0.39, 0.185, 1.0, 0.56], [-0.88, -0.02, -0.3333333333333333, -0.72], [-0.475, -0.77, 0.3333333333333333, 0.8933333333333333], [0.21, -0.505, 0.6666666666666666, 0.8133333333333334], [0.275, 0.5, -0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom right dot is medium-sized and dark, and the top left dot is small-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_bottom_right
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 6)]
+Read after code: 23.978711498000848 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.692300821235327
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 3: No. Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 4: No. Do you see a pair of dots, where the bottom right dot is medium-sized and dark and the top left dot is small-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 5: Yes, is there a large size and light color dot to the left and below those?
+Type:
+Classify: 5.2260987519985065 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)```
+57
+Understand: 13.582604751998588 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.135, -0.05, 0.3333333333333333, -0.3466666666666667], [-0.93, -0.175, 1.0, 0.56], [0.37, 0.25, 0.6666666666666666, -0.5733333333333334], [0.265, 0.775, -0.6666666666666666, 0.06666666666666667], [0.56, -0.19, 0.6666666666666666, 0.52], [-0.33, -0.865, 0.6666666666666666, 0.8133333333333334], [-0.26, 0.145, -0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and light color dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_left = is_left(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    and check_c_left
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1, 6), (0, 5, 6)]
+Read after code: 18.849367974000415 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6144729959022552
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is large-sized and light and the top right dot is small-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 4: No. Do you see a pair of dots, where the bottom right dot is medium-sized and dark and the top left dot is small-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 5: Yes. Is there a large size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: Yes, let's select the medium size and dark color one. <selection>.
+Type:
+Classify: 3.2312029789991357 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+29
+Understand: 5.2623450589999266 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.405, 0.305, 0.3333333333333333, -0.3466666666666667], [-0.24, -0.43, 0.0, -0.05333333333333334], [-0.39, 0.185, 1.0, 0.56], [-0.88, -0.02, -0.3333333333333333, -0.72], [-0.475, -0.77, 0.3333333333333333, 0.8933333333333333], [0.21, -0.505, 0.6666666666666666, 0.8133333333333334], [0.275, 0.5, -0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0,)]
+Read after code: 8.509723654000481 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is small-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is small-sized and dark?
+Type:
+Classify: 2.399776352000117 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+93
+Understand: 18.473661772000924 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.665, 0.19, -0.6666666666666666, -0.48], [-0.075, 0.215, 0.6666666666666666, 0.8133333333333334], [0.325, -0.06, 0.3333333333333333, -0.7733333333333333], [-0.69, 0.395, 0.3333333333333333, 0.02666666666666667], [-0.18, -0.3, -1.0, -0.25333333333333335], [-0.39, 0.755, -1.0, 0.7866666666666666], [0.34, 0.63, -0.6666666666666666, -0.36]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_bottom_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 20.902004826999473 seconds
+Do you see a pair of dots, where the top right dot is small-sized and dark and the bottom left dot is medium-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the top right dot is small-sized and dark and the bottom left dot is medium-sized and dark?
+Type:
+Classify: 1.7403364630008582 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top right dot is small-sized and dark and the bottom left dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+93
+Understand: 20.198062307999862 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.205, -0.765, -0.6666666666666666, -0.48], [0.425, -0.24, 0.6666666666666666, 0.9466666666666667], [-0.42, 0.125, 0.0, 0.8266666666666667], [0.295, 0.23, -1.0, -0.26666666666666666], [-0.535, -0.735, 0.6666666666666666, 0.8133333333333334], [-0.85, -0.195, -1.0, 0.7866666666666666], [-0.115, -0.325, -0.6666666666666666, -0.36]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top right dot is small-sized and dark and the bottom left dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom_left
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 21.959512968000126 seconds
+Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top right dot is small-sized and dark and the bottom left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the bottom right dot is small-sized and dark, and the top left dot is small-sized and dark?
+Type:
+Classify: 4.367804090999925 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom right dot is small-sized and dark, and the top left dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+92
+Understand: 18.16830317000131 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.665, 0.19, -0.6666666666666666, -0.48], [-0.075, 0.215, 0.6666666666666666, 0.8133333333333334], [0.325, -0.06, 0.3333333333333333, -0.7733333333333333], [-0.69, 0.395, 0.3333333333333333, 0.02666666666666667], [-0.18, -0.3, -1.0, -0.25333333333333335], [-0.39, 0.755, -1.0, 0.7866666666666666], [0.34, 0.63, -0.6666666666666666, -0.36]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom right dot is small-sized and dark, and the top left dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 6)]
+Read after code: 22.600388279999606 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6928109427261503
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top right dot is small-sized and dark and the bottom left dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and light color dot left of those?
+Type:
+Classify: 2.37714270700053 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and light color dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+42
+Understand: 10.6966264269995 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.205, -0.765, -0.6666666666666666, -0.48], [0.425, -0.24, 0.6666666666666666, 0.9466666666666667], [-0.42, 0.125, 0.0, 0.8266666666666667], [0.295, 0.23, -1.0, -0.26666666666666666], [-0.535, -0.735, 0.6666666666666666, 0.8133333333333334], [-0.85, -0.195, -1.0, 0.7866666666666666], [-0.115, -0.325, -0.6666666666666666, -0.36]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and light color dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1, 6), (0, 4, 6)]
+Read after code: 13.086881764000282 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.895913663973299
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top left dot is medium-sized and light and the bottom right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top right dot is small-sized and dark and the bottom left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and light color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes, let's select the small size and dark color one. <selection>.
+Type:
+Classify: 2.5444557720002194 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+27
+Understand: 6.119497888999831 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.665, 0.19, -0.6666666666666666, -0.48], [-0.075, 0.215, 0.6666666666666666, 0.8133333333333334], [0.325, -0.06, 0.3333333333333333, -0.7733333333333333], [-0.69, 0.395, 0.3333333333333333, 0.02666666666666667], [-0.18, -0.3, -1.0, -0.25333333333333335], [-0.39, 0.755, -1.0, 0.7866666666666666], [0.34, 0.63, -0.6666666666666666, -0.36]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(6,), (0,)]
+Read after code: 8.678021038000225 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark?
+Type:
+Classify: 1.9188885809999192 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = is_above(a, b, ctx)
+check_b_bottom = is_below(b, a, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+86
+Understand: 17.158704239000144 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.115, 0.91, -1.0, -0.7866666666666666], [0.04, -0.115, 1.0, 0.84], [-0.67, 0.295, -0.3333333333333333, -0.5466666666666666], [0.55, 0.075, 1.0, -0.7333333333333333], [-0.355, -0.4, -0.6666666666666666, 0.8933333333333333], [0.325, -0.495, 0.3333333333333333, -0.48], [-0.32, -0.2, 0.6666666666666666, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = is_above(a, b, ctx)
+                check_b_bottom = is_below(b, a, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_b_bottom
+                    and check_a_medium
+                    and check_b_medium
+                    and check_a_dark
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 19.09840885199992 seconds
+Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark?
+Type:
+Classify: 3.147643018000963 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+92
+Understand: 17.385476106999704 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.07, -0.69, -1.0, 0.84], [-0.08, 0.865, 1.0, 0.84], [0.805, 0.385, 0.0, -0.8266666666666667], [0.95, 0.08, 0.3333333333333333, -0.49333333333333335], [-0.475, 0.58, -0.6666666666666666, 0.8933333333333333], [0.205, 0.485, 0.3333333333333333, -0.48], [-0.44, 0.78, 0.6666666666666666, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 20.56548444100008 seconds
+Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is medium-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is medium-sized and dark?
+Type:
+Classify: 3.061314370999753 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+93
+Understand: 17.40142505299991 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.115, 0.91, -1.0, -0.7866666666666666], [0.04, -0.115, 1.0, 0.84], [-0.67, 0.295, -0.3333333333333333, -0.5466666666666666], [0.55, 0.075, 1.0, -0.7333333333333333], [-0.355, -0.4, -0.6666666666666666, 0.8933333333333333], [0.325, -0.495, 0.3333333333333333, -0.48], [-0.32, -0.2, 0.6666666666666666, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_large
+                    and check_a_light
+                    and check_b_bottom_right
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 5)]
+Read after code: 20.51427469800001 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7036384119500443
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and dark color dot left of those?
+Type:
+Classify: 3.277277000999675 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and dark color dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+42
+Understand: 12.157077109000966 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.07, -0.69, -1.0, 0.84], [-0.08, 0.865, 1.0, 0.84], [0.805, 0.385, 0.0, -0.8266666666666667], [0.95, 0.08, 0.3333333333333333, -0.49333333333333335], [-0.475, 0.58, -0.6666666666666666, 0.8933333333333333], [0.205, 0.485, 0.3333333333333333, -0.48], [-0.44, 0.78, 0.6666666666666666, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and dark color dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 5, 6), (1, 3, 5)]
+Read after code: 15.448920381999415 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.5806138224424512
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and dark color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes, let's select the large size and light color one. <selection>.
+Type:
+Classify: 3.1239771649998147 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+```
+27
+Understand: 6.3591657470005885 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.115, 0.91, -1.0, -0.7866666666666666], [0.04, -0.115, 1.0, 0.84], [-0.67, 0.295, -0.3333333333333333, -0.5466666666666666], [0.55, 0.075, 1.0, -0.7333333333333333], [-0.355, -0.4, -0.6666666666666666, 0.8933333333333333], [0.325, -0.495, 0.3333333333333333, -0.48], [-0.32, -0.2, 0.6666666666666666, -0.37333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 5, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_light
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1,)]
+Read after code: 9.525519463999444 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is medium-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is medium-sized and light?
+Type:
+Classify: 2.3944048289995408 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = a == get_bottom([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_top = b == get_top([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+92
+Understand: 16.965109718999884 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.105, 0.435, -0.3333333333333333, -0.5466666666666666], [-0.625, 0.395, 0.0, -0.013333333333333334], [0.465, 0.8, 0.3333333333333333, 0.30666666666666664], [0.04, -0.45, -0.6666666666666666, -0.49333333333333335], [-0.415, -0.47, 0.0, -0.36], [0.015, -0.215, 0.3333333333333333, 0.7866666666666666], [0.08, 0.015, 1.0, 0.7733333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = a == get_bottom([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_top = b == get_top([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_top
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4, 5)]
+Read after code: 19.38051733499924 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.1690403886619234
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and dark color dot to the right of those?
+Type:
+Classify: 2.421786909999355 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and dark color dot to the right of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_ab = is_right(c, [a,b], ctx)
+```
+44
+Understand: 8.6004867190004 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.4, -0.405, -0.3333333333333333, -0.5466666666666666], [-0.33, -0.45, 0.0, -0.013333333333333334], [0.76, -0.04, 0.3333333333333333, 0.30666666666666664], [-0.365, 0.22, 0.3333333333333333, 0.6533333333333333], [0.255, 0.855, -0.3333333333333333, -0.9733333333333334], [0.7, 0.525, 1.0, -0.17333333333333334], [0.375, -0.825, 1.0, 0.7733333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 3)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and dark color dot to the right of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right_ab = is_right(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    and check_c_right_ab
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1, 3), (1, 3, 4)]
+Read after code: 11.061390880000545 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8571313590678988
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is medium-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and dark color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the medium size and light color one. <selection>.
+Type:
+Classify: 2.9483493860007 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+29
+Understand: 5.153457459000492 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.105, 0.435, -0.3333333333333333, -0.5466666666666666], [-0.625, 0.395, 0.0, -0.013333333333333334], [0.465, 0.8, 0.3333333333333333, 0.30666666666666664], [0.04, -0.45, -0.6666666666666666, -0.49333333333333335], [-0.415, -0.47, 0.0, -0.36], [0.015, -0.215, 0.3333333333333333, 0.7866666666666666], [0.08, 0.015, 1.0, 0.7733333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 4, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(5,)]
+Read after code: 8.123873258000458 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark?
+Type:
+Classify: 3.3140031960010674 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+89
+Understand: 16.47375640500104 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.08, -0.695, 0.3333333333333333, 0.21333333333333335], [0.065, -0.24, -0.6666666666666666, -0.5333333333333333], [0.88, -0.385, 0.6666666666666666, -0.9066666666666666], [-0.865, 0.385, -0.3333333333333333, -0.7066666666666667], [-0.375, 0.29, -0.3333333333333333, 0.9333333333333333], [-0.31, 0.505, 0.0, 0.5866666666666667], [-0.3, -0.54, 0.3333333333333333, -0.12]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 19.850303486000485 seconds
+Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is small-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the bottom dot is medium-sized and grey and the top dot is small-sized and dark?
+Type:
+Classify: 2.7202451020002627 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom dot is medium-sized and grey and the top dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+87
+Understand: 15.520927564000885 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.75, 0.335, 0.0, -0.30666666666666664], [0.57, -0.705, -0.6666666666666666, -0.5333333333333333], [-0.125, 0.73, 0.3333333333333333, 0.92], [0.235, 0.79, -1.0, -0.7466666666666667], [-0.36, -0.085, -0.3333333333333333, -0.7066666666666667], [0.13, -0.18, -0.3333333333333333, 0.9333333333333333], [0.195, 0.04, 0.0, 0.5866666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom dot is medium-sized and grey and the top dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_top
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 18.308327131000624 seconds
+Do you see a pair of dots, where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark?
+Type:
+Classify: 2.85999750100018 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+95
+Understand: 18.26911300699976 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.08, -0.695, 0.3333333333333333, 0.21333333333333335], [0.065, -0.24, -0.6666666666666666, -0.5333333333333333], [0.88, -0.385, 0.6666666666666666, -0.9066666666666666], [-0.865, 0.385, -0.3333333333333333, -0.7066666666666667], [-0.375, 0.29, -0.3333333333333333, 0.9333333333333333], [-0.31, 0.505, 0.0, 0.5866666666666667], [-0.3, -0.54, 0.3333333333333333, -0.12]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_bottom_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 6)]
+Read after code: 21.157369833999837 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.17307407589607432
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes, is there a medium-sized and grey-colored dot to the right and below those?
+Type:
+Classify: 4.19036461900032 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and grey-colored dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_below_a = is_below(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_below_b = is_below(c, b, ctx)
+```
+84
+Understand: 14.068308439998873 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.75, 0.335, 0.0, -0.30666666666666664], [0.57, -0.705, -0.6666666666666666, -0.5333333333333333], [-0.125, 0.73, 0.3333333333333333, 0.92], [0.235, 0.79, -1.0, -0.7466666666666667], [-0.36, -0.085, -0.3333333333333333, -0.7066666666666667], [0.13, -0.18, -0.3333333333333333, 0.9333333333333333], [0.195, 0.04, 0.0, 0.5866666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 4)]
+
+
+# Turn 0
+# Them: Yes, is there a medium-sized and grey-colored dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_below_a = is_below(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_below_b = is_below(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_grey
+                    and check_c_right_a
+                    and check_c_below_a
+                    and check_c_right_b
+                    and check_c_below_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 18.314211798999168 seconds
+Followup config inclusion prob: 0.5575995877593645
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No, is there a small size and light color dot to the right and below those?
+Type:
+Classify: 2.8072569460000523 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a small size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+56
+Understand: 11.217071848999694 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.08, -0.695, 0.3333333333333333, 0.21333333333333335], [0.065, -0.24, -0.6666666666666666, -0.5333333333333333], [0.88, -0.385, 0.6666666666666666, -0.9066666666666666], [-0.865, 0.385, -0.3333333333333333, -0.7066666666666667], [-0.375, 0.29, -0.3333333333333333, 0.9333333333333333], [-0.31, 0.505, 0.0, 0.5866666666666667], [-0.3, -0.54, 0.3333333333333333, -0.12]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 6)]
+
+
+# Turn 0
+# Them: No, is there a small size and light color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_light
+                    and check_c_right
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 14.066435840999475 seconds
+Followup config inclusion prob: 0.17307407589607432
+Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is large-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and grey color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Is there a small size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No. Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is large-sized and dark?
+Type:
+Classify: 3.375125246000607 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+88
+Understand: 15.378214757000023 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.75, 0.335, 0.0, -0.30666666666666664], [0.57, -0.705, -0.6666666666666666, -0.5333333333333333], [-0.125, 0.73, 0.3333333333333333, 0.92], [0.235, 0.79, -1.0, -0.7466666666666667], [-0.36, -0.085, -0.3333333333333333, -0.7066666666666667], [0.13, -0.18, -0.3333333333333333, 0.9333333333333333], [0.195, 0.04, 0.0, 0.5866666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No. Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_right
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 18.80675893999978 seconds
+Followup config inclusion prob: 0.5575995877593645
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Is there a small size and light color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 6: No, is there a medium-sized and light-colored dot to the right and above those?
+Type:
+Classify: 3.600799318999634 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a medium-sized and light-colored dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_above_a = is_above(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_above_b = is_above(c, b, ctx)
+```
+82
+Understand: 619.436209088999 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.08, -0.695, 0.3333333333333333, 0.21333333333333335], [0.065, -0.24, -0.6666666666666666, -0.5333333333333333], [0.88, -0.385, 0.6666666666666666, -0.9066666666666666], [-0.865, 0.385, -0.3333333333333333, -0.7066666666666667], [-0.375, 0.29, -0.3333333333333333, 0.9333333333333333], [-0.31, 0.505, 0.0, 0.5866666666666667], [-0.3, -0.54, 0.3333333333333333, -0.12]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 6)]
+
+
+# Turn 0
+# Them: No, is there a medium-sized and light-colored dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_above_a = is_above(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_above_b = is_above(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_light
+                    and check_c_right_a
+                    and check_c_above_a
+                    and check_c_right_b
+                    and check_c_above_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 623.1074171140008 seconds
+Followup config inclusion prob: 0.17307407589607432
+Do you see a pair of dots, where the bottom dot is small-sized and light and the top dot is medium-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and grey color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Is there a small size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No. Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 6: No. Is there a medium size and light color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 7: No, do you see a pair of dots where the bottom dot is small-sized and light, and the top dot is medium-sized and light?
+Type:
+Classify: 3.881611791000978 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom dot is small-sized and light, and the top dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+85
+Understand: 15.848491926999486 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.75, 0.335, 0.0, -0.30666666666666664], [0.57, -0.705, -0.6666666666666666, -0.5333333333333333], [-0.125, 0.73, 0.3333333333333333, 0.92], [0.235, 0.79, -1.0, -0.7466666666666667], [-0.36, -0.085, -0.3333333333333333, -0.7066666666666667], [0.13, -0.18, -0.3333333333333333, 0.9333333333333333], [0.195, 0.04, 0.0, 0.5866666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom dot is small-sized and light, and the top dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_small
+                    and check_a_light
+                    and check_b_top
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(5, 6)]
+Read after code: 19.840698842001075 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7354247661274627
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and grey and the top dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is medium-sized and grey and the bottom right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Is there a small size and light color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the left dot is small-sized and dark and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 6: No. Is there a medium size and light color dot to the right and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 7: No. Do you see a pair of dots, where the bottom dot is small-sized and light and the top dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 8: Yes, let's select the small size and light color one. <selection>.
+Type:
+Classify: 2.641786199999842 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+27
+Understand: 6.135669193001377 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.08, -0.695, 0.3333333333333333, 0.21333333333333335], [0.065, -0.24, -0.6666666666666666, -0.5333333333333333], [0.88, -0.385, 0.6666666666666666, -0.9066666666666666], [-0.865, 0.385, -0.3333333333333333, -0.7066666666666667], [-0.375, 0.29, -0.3333333333333333, 0.9333333333333333], [-0.31, 0.505, 0.0, 0.5866666666666667], [-0.3, -0.54, 0.3333333333333333, -0.12]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 8.850838018001014 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark?
+Type:
+Classify: 1.7586588089998259 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+91
+Understand: 16.764144085000225 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.26, 0.465, 1.0, -0.14666666666666667], [-0.825, 0.29, 0.6666666666666666, 0.48], [-0.4, 0.045, -0.3333333333333333, 0.48], [-0.51, -0.54, 0.0, 0.5066666666666667], [-0.08, 0.82, -0.6666666666666666, -0.4533333333333333], [0.72, 0.145, 0.3333333333333333, -0.09333333333333334], [0.185, -0.875, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 18.643416660001094 seconds
+Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the top dot is small-sized and light and the bottom dot is medium-sized and light?
+Type:
+Classify: 1.9332646050006588 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top dot is small-sized and light and the bottom dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = a == get_top([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom = b == get_bottom([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+89
+Understand: 15.583936604998598 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.3, 0.53, 1.0, -0.14666666666666667], [-0.965, 0.105, -0.3333333333333333, 0.48], [0.155, 0.21, 0.3333333333333333, -0.09333333333333334], [0.495, 0.395, 1.0, -0.84], [0.84, 0.155, -1.0, 0.92], [0.395, 0.645, 0.3333333333333333, -0.8933333333333333], [-0.375, -0.815, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top dot is small-sized and light and the bottom dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = a == get_top([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom = b == get_bottom([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_small
+                    and check_a_light
+                    and check_b_bottom
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 17.5916782889999 seconds
+Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey?
+Type:
+Classify: 2.076807233999716 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+97
+Understand: 20.09274398100024 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.26, 0.465, 1.0, -0.14666666666666667], [-0.825, 0.29, 0.6666666666666666, 0.48], [-0.4, 0.045, -0.3333333333333333, 0.48], [-0.51, -0.54, 0.0, 0.5066666666666667], [-0.08, 0.82, -0.6666666666666666, -0.4533333333333333], [0.72, 0.145, 0.3333333333333333, -0.09333333333333334], [0.185, -0.875, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_large
+                    and check_a_grey
+                    and check_b_bottom_right
+                    and check_b_medium
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 5)]
+Read after code: 22.274191584001528 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6868313372170018
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes, is there a small size and dark color dot to the left and above those?
+Type:
+Classify: 2.600026509997406 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_left_a = is_left(c, a, ctx)
+check_c_above_b = is_above(c, b, ctx)```
+55
+Understand: 10.421787395996944 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.3, 0.53, 1.0, -0.14666666666666667], [-0.965, 0.105, -0.3333333333333333, 0.48], [0.155, 0.21, 0.3333333333333333, -0.09333333333333334], [0.495, 0.395, 1.0, -0.84], [0.84, 0.155, -1.0, 0.92], [0.395, 0.645, 0.3333333333333333, -0.8933333333333333], [-0.375, -0.815, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and dark color dot to the left and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_left_a = is_left(c, a, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    and check_c_left_a
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 13.093985602998146 seconds
+Followup config inclusion prob: 0.7089853350177958
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Is there a large size and dark color dot right of those?
+Type:
+Classify: 3.6266203960003622 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Is there a large size and dark color dot right of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_abc = c == get_right([a, b, c], ctx)
+47
+Understand: 10.824722990997543 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.26, 0.465, 1.0, -0.14666666666666667], [-0.825, 0.29, 0.6666666666666666, 0.48], [-0.4, 0.045, -0.3333333333333333, 0.48], [-0.51, -0.54, 0.0, 0.5066666666666667], [-0.08, 0.82, -0.6666666666666666, -0.4533333333333333], [0.72, 0.145, 0.3333333333333333, -0.09333333333333334], [0.185, -0.875, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 5)]
+
+
+# Turn 0
+# Them: No. Is there a large size and dark color dot right of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 14.524151148001692 seconds
+Followup config inclusion prob: 0.6868313372170018
+Do you see a pair of dots, where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and dark color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Is there a large size and dark color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No, do you see a pair of dots where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark?
+Type:
+Classify: 2.6760853140003746 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+94
+Understand: 16.019657744000142 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.3, 0.53, 1.0, -0.14666666666666667], [-0.965, 0.105, -0.3333333333333333, 0.48], [0.155, 0.21, 0.3333333333333333, -0.09333333333333334], [0.495, 0.395, 1.0, -0.84], [0.84, 0.155, -1.0, 0.92], [0.395, 0.645, 0.3333333333333333, -0.8933333333333333], [-0.375, -0.815, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_large
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 18.81251292199886 seconds
+Followup config inclusion prob: 0.7089853350177958
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Is there a large size and dark color dot right of those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 6: No, is there a medium-sized and dark-colored dot to the right and above those?
+Type:
+Classify: 2.850245163001091 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a medium-sized and dark-colored dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_above_a = is_above(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_above_b = is_above(c, b, ctx)
+```
+82
+Understand: 17.51099027500095 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.26, 0.465, 1.0, -0.14666666666666667], [-0.825, 0.29, 0.6666666666666666, 0.48], [-0.4, 0.045, -0.3333333333333333, 0.48], [-0.51, -0.54, 0.0, 0.5066666666666667], [-0.08, 0.82, -0.6666666666666666, -0.4533333333333333], [0.72, 0.145, 0.3333333333333333, -0.09333333333333334], [0.185, -0.875, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 5)]
+
+
+# Turn 0
+# Them: No, is there a medium-sized and dark-colored dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_above_a = is_above(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_above_b = is_above(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_dark
+                    and check_c_right_a
+                    and check_c_above_a
+                    and check_c_right_b
+                    and check_c_above_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 20.45365992799998 seconds
+Followup config inclusion prob: 0.6868313372170018
+Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is small-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and dark color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Is there a large size and dark color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 6: No. Is there a medium size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 7: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is small-sized and light?
+Type:
+Classify: 2.9025178360025166 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+80
+Understand: 16.254608691000612 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.3, 0.53, 1.0, -0.14666666666666667], [-0.965, 0.105, -0.3333333333333333, 0.48], [0.155, 0.21, 0.3333333333333333, -0.09333333333333334], [0.495, 0.395, 1.0, -0.84], [0.84, 0.155, -1.0, 0.92], [0.395, 0.645, 0.3333333333333333, -0.8933333333333333], [-0.375, -0.815, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is large-sized and light and the bottom right dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_a_top_left
+                    and check_a_large
+                    and check_a_light
+                    and check_b_bottom_right
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4, 6)]
+Read after code: 19.23639841899785 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.10452855605762701
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Is there a large size and dark color dot right of those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 6: No. Is there a medium size and dark color dot to the right and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 7: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 8: Yes, is there a medium-sized and dark-colored dot above those?
+Type:
+Classify: 3.6240890590015624 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and dark-colored dot above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_above_ab = is_above(c, [a, b], ctx)
+45
+Understand: 10.60346571500122 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.26, 0.465, 1.0, -0.14666666666666667], [-0.825, 0.29, 0.6666666666666666, 0.48], [-0.4, 0.045, -0.3333333333333333, 0.48], [-0.51, -0.54, 0.0, 0.5066666666666667], [-0.08, 0.82, -0.6666666666666666, -0.4533333333333333], [0.72, 0.145, 0.3333333333333333, -0.09333333333333334], [0.185, -0.875, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2)]
+
+
+# Turn 0
+# Them: Yes, is there a medium-sized and dark-colored dot above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 14.308967894998204 seconds
+Followup config inclusion prob: 0.6987003072203443
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and dark color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Is there a large size and dark color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 6: No. Is there a medium size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 7: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is small-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 8: Yes. Is there a medium size and dark color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 9: No, is there a medium-sized and light-colored dot below those?
+Type:
+Classify: 3.3250864900001034 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a medium-sized and light-colored dot below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_below_ab = is_below(c, [a, b], ctx)
+45
+Understand: 9.979064757000742 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.3, 0.53, 1.0, -0.14666666666666667], [-0.965, 0.105, -0.3333333333333333, 0.48], [0.155, 0.21, 0.3333333333333333, -0.09333333333333334], [0.495, 0.395, 1.0, -0.84], [0.84, 0.155, -1.0, 0.92], [0.395, 0.645, 0.3333333333333333, -0.8933333333333333], [-0.375, -0.815, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 6)]
+
+
+# Turn 0
+# Them: No, is there a medium-sized and light-colored dot below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_light = is_light(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_light
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 4, 6)]
+Read after code: 13.376824654998927 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.03342297925024751
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Is there a large size and dark color dot right of those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 6: No. Is there a medium size and dark color dot to the right and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 7: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 8: Yes. Is there a medium size and dark color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 9: No. Is there a medium size and light color dot below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 10: Yes. Is there a large size and grey color dot above those?
+Type:
+Classify: 5.326212469997699 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_grey = is_grey(d, ctx)
+check_d_above_abc = is_above(d, [a,b,c], ctx)
+48
+Understand: 9.709119235998514 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.26, 0.465, 1.0, -0.14666666666666667], [-0.825, 0.29, 0.6666666666666666, 0.48], [-0.4, 0.045, -0.3333333333333333, 0.48], [-0.51, -0.54, 0.0, 0.5066666666666667], [-0.08, 0.82, -0.6666666666666666, -0.4533333333333333], [0.72, 0.145, 0.3333333333333333, -0.09333333333333334], [0.185, -0.875, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 3)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and grey color dot above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_grey = is_grey(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1, 2, 3), (1, 2, 3, 5)]
+Read after code: 15.097979149999446 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.983942783190207
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top dot is small-sized and light and the bottom dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is large-sized and grey and the bottom right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and dark color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Is there a large size and dark color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No. Do you see a pair of dots, where the bottom right dot is large-sized and grey and the top left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 6: No. Is there a medium size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 7: No. Do you see a pair of dots, where the top left dot is large-sized and light and the bottom right dot is small-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 8: Yes. Is there a medium size and dark color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 9: No. Is there a medium size and light color dot below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 10: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 11: Yes, let's select the small size and light color one. <selection>.
+Type:
+Classify: 2.419841691000329 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+27
+Understand: 7.925104640999052 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.3, 0.53, 1.0, -0.14666666666666667], [-0.965, 0.105, -0.3333333333333333, 0.48], [0.155, 0.21, 0.3333333333333333, -0.09333333333333334], [0.495, 0.395, 1.0, -0.84], [0.84, 0.155, -1.0, 0.92], [0.395, 0.645, 0.3333333333333333, -0.8933333333333333], [-0.375, -0.815, 0.3333333333333333, 0.8]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 4, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1,), (4,)]
+Read after code: 10.419618167001317 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is small-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is small-sized and dark?
+Type:
+Classify: 2.7434784550023323 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_top_right = b == get_top_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+94
+Understand: 16.648590382999828 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.48, 0.615, -0.6666666666666666, -0.30666666666666664], [-0.11, -0.535, -0.3333333333333333, -0.6666666666666666], [0.105, -0.925, 0.6666666666666666, -0.7866666666666666], [0.24, 0.9, 0.6666666666666666, 0.96], [0.15, -0.02, 1.0, 0.68], [-0.485, -0.57, -0.6666666666666666, 0.3333333333333333], [-0.43, 0.84, -0.6666666666666666, 0.09333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_top_right = b == get_top_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_left
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_top_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 5)]
+Read after code: 19.490492654000263 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6969386152041278
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and light color dot to the right and above those?
+Type:
+Classify: 5.292316301001847 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and light color dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_above = is_above(c, [a,b], ctx)
+```
+57
+Understand: 11.642787538999983 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.69, -0.56, 0.3333333333333333, -0.14666666666666667], [-0.335, 0.31, -0.3333333333333333, -0.6666666666666666], [-0.12, -0.08, 0.6666666666666666, -0.7866666666666666], [-0.075, 0.825, 1.0, 0.68], [0.455, -0.37, -0.3333333333333333, 0.17333333333333334], [-0.71, 0.275, -0.6666666666666666, 0.3333333333333333], [0.81, -0.03, -0.6666666666666666, -0.56]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and light color dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_above = is_above(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    and check_c_right
+                    and check_c_above
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 17.00572717799878 seconds
+Followup config inclusion prob: 0.4465265538636688
+Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No, do you see a pair of dots where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark?
+Type:
+Classify: 1.8521252460013784 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+92
+Understand: 16.0142477469999 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.48, 0.615, -0.6666666666666666, -0.30666666666666664], [-0.11, -0.535, -0.3333333333333333, -0.6666666666666666], [0.105, -0.925, 0.6666666666666666, -0.7866666666666666], [0.24, 0.9, 0.6666666666666666, 0.96], [0.15, -0.02, 1.0, 0.68], [-0.485, -0.57, -0.6666666666666666, 0.3333333333333333], [-0.43, 0.84, -0.6666666666666666, 0.09333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2)]
+Read after code: 17.92341898000086 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8207271959751192
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom left dot is small-sized and grey and the top right dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the right and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top left dot is small-sized and dark and the bottom right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes, let's select the small size and dark color one. <selection>.
+Type:
+Classify: 2.0508785659985733 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+27
+Understand: 11.395765418998053 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.69, -0.56, 0.3333333333333333, -0.14666666666666667], [-0.335, 0.31, -0.3333333333333333, -0.6666666666666666], [-0.12, -0.08, 0.6666666666666666, -0.7866666666666666], [-0.075, 0.825, 1.0, 0.68], [0.455, -0.37, -0.3333333333333333, 0.17333333333333334], [-0.71, 0.275, -0.6666666666666666, 0.3333333333333333], [0.81, -0.03, -0.6666666666666666, -0.56]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1,)]
+Read after code: 13.503952881001169 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and dark?
+Type:
+Classify: 2.7885395619996416 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+89
+Understand: 19.482578844999807 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.745, -0.295, -1.0, 0.4533333333333333], [0.085, 0.3, 0.6666666666666666, -0.14666666666666667], [-0.69, -0.28, -0.6666666666666666, 0.6666666666666666], [0.305, -0.045, 0.0, -0.96], [-0.4, -0.28, 0.3333333333333333, -0.5866666666666667], [0.835, 0.14, -0.3333333333333333, 0.8533333333333334], [0.48, -0.065, 0.3333333333333333, -0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_small
+                    and check_a_light
+                    and check_b_right
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 4)]
+Read after code: 22.291015114999027 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7011426488952797
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a medium-sized and dark-colored dot to the right and above those?
+Type:
+Classify: 3.0100644630001625 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and dark-colored dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_above_a = is_above(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_above_b = is_above(c, b, ctx)```
+82
+Understand: 18.634850729999016 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.635, 0.33, 0.6666666666666666, -0.14666666666666667], [-0.27, 0.605, -0.6666666666666666, 0.52], [-0.145, -0.25, -0.6666666666666666, 0.6666666666666666], [-0.09, -0.88, -0.6666666666666666, 0.9866666666666667], [0.85, -0.02, 0.0, -0.96], [-0.66, 0.315, 0.3333333333333333, 0.7866666666666666], [0.145, -0.255, 0.3333333333333333, -0.5866666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a medium-sized and dark-colored dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_above_a = is_above(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_dark
+                    and check_c_right_a
+                    and check_c_above_a
+                    and check_c_right_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 4, 6)]
+Read after code: 21.659846588998334 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.20720122359313387
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a medium size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a large size and grey color dot above those?
+Type:
+Classify: 2.794284699997661 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_grey = is_grey(d, ctx)
+check_d_above_abc = is_above(d, [a,b,c], ctx)
+48
+Understand: 10.845781215000898 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.745, -0.295, -1.0, 0.4533333333333333], [0.085, 0.3, 0.6666666666666666, -0.14666666666666667], [-0.69, -0.28, -0.6666666666666666, 0.6666666666666666], [0.305, -0.045, 0.0, -0.96], [-0.4, -0.28, 0.3333333333333333, -0.5866666666666667], [0.835, 0.14, -0.3333333333333333, 0.8533333333333334], [0.48, -0.065, 0.3333333333333333, -0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 3, 4)]
+
+
+# Turn 0
+# Them: Yes. Is there a large size and grey color dot above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_grey = is_grey(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 3, 4)]
+Read after code: 13.655177186999936 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6333280267279079
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and light and the right dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a medium size and dark color dot to the right and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a large size and grey color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, let's select the medium size and dark color one. <selection>.
+Type:
+Classify: 3.2546798089970252 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+29
+Understand: 11.314961366999341 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.635, 0.33, 0.6666666666666666, -0.14666666666666667], [-0.27, 0.605, -0.6666666666666666, 0.52], [-0.145, -0.25, -0.6666666666666666, 0.6666666666666666], [-0.09, -0.88, -0.6666666666666666, 0.9866666666666667], [0.85, -0.02, 0.0, -0.96], [-0.66, 0.315, 0.3333333333333333, 0.7866666666666666], [0.145, -0.255, 0.3333333333333333, -0.5866666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 4, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,), (6,)]
+Read after code: 14.59177999199892 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the right dot is large-sized and light and the left dot is small-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is large-sized and light and the left dot is small-sized and dark?
+Type:
+Classify: 3.2294627120027144 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the right dot is large-sized and light and the left dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_right = a == get_right([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_left = b == get_left([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+88
+Understand: 17.404871244998503 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.2, 0.41, 1.0, 0.68], [0.695, -0.145, -0.6666666666666666, -0.04], [0.015, 0.045, -1.0, -0.8], [-0.43, 0.445, -0.6666666666666666, -0.5866666666666667], [-0.085, -0.3, 0.0, 1.0], [0.67, -0.335, 0.3333333333333333, 0.14666666666666667], [0.495, -0.705, 0.3333333333333333, 0.7466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the right dot is large-sized and light and the left dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_right = a == get_right([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_left = b == get_left([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_right
+                    and check_a_large
+                    and check_a_light
+                    and check_b_left
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3)]
+Read after code: 20.66762910000034 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7033046539490752
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is large-sized and light and the left dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and dark color dot to the right and below those?
+Type:
+Classify: 4.375163890999829 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_below_a = is_below(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_below_b = is_below(c, b, ctx)
+```
+81
+Understand: 14.171266576999187 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.65, 0.075, 1.0, 0.68], [-0.635, -0.205, -0.3333333333333333, -0.8266666666666667], [0.87, -0.295, -1.0, -0.8], [0.425, 0.11, -0.6666666666666666, -0.5866666666666667], [-0.075, -0.935, 0.3333333333333333, -0.7466666666666667], [-0.615, 0.665, 0.3333333333333333, -0.2], [0.765, -0.64, 0.0, 1.0]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 3)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and dark color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_below_a = is_below(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_below_b = is_below(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    and check_c_right_a
+                    and check_c_below_a
+                    and check_c_right_b
+                    and check_c_below_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2, 3)]
+Read after code: 18.595870278000803 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8989685055692958
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the right dot is large-sized and light and the left dot is small-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the small size and dark color one. <selection>.
+Type:
+Classify: 4.422590926002158 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+27
+Understand: 5.333998542002519 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.2, 0.41, 1.0, 0.68], [0.695, -0.145, -0.6666666666666666, -0.04], [0.015, 0.045, -1.0, -0.8], [-0.43, 0.445, -0.6666666666666666, -0.5866666666666667], [-0.085, -0.3, 0.0, 1.0], [0.67, -0.335, 0.3333333333333333, 0.14666666666666667], [0.495, -0.705, 0.3333333333333333, 0.7466666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 3)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2,), (3,)]
+Read after code: 9.7848916130024 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is large-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is large-sized and light?
+Type:
+Classify: 2.6538997019997623 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = a == get_bottom([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_top = b == get_top([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+90
+Understand: 17.100072610999632 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.355, 0.785, 1.0, 0.56], [0.285, -0.225, 0.6666666666666666, -0.8], [-0.03, 0.185, 0.6666666666666666, -0.2], [-0.19, 0.725, 1.0, 0.6933333333333334], [-0.625, 0.11, -0.6666666666666666, -0.8666666666666667], [0.04, -0.73, 0.6666666666666666, 0.10666666666666667], [0.745, 0.21, -0.6666666666666666, -0.49333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = a == get_bottom([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_top = b == get_top([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_large
+                    and check_a_grey
+                    and check_b_top
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3)]
+Read after code: 19.780571188999602 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.1778990049816686
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and dark color dot to the right and below those?
+Type:
+Classify: 2.2333556349985884 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_below_a = is_below(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_below_b = is_below(c, b, ctx)
+```
+81
+Understand: 23.365783257999283 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.05, 0.12, 1.0, 0.56], [0.27, -0.48, 0.6666666666666666, -0.2], [0.11, 0.06, 1.0, 0.6933333333333334], [-0.32, -0.555, -0.6666666666666666, -0.8666666666666667], [0.25, 0.405, 0.6666666666666666, 0.6], [-0.905, -0.29, 0.6666666666666666, 0.24], [-0.63, -0.2, -0.3333333333333333, 0.41333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and dark color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_below_a = is_below(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_below_b = is_below(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_dark
+                    and check_c_right_a
+                    and check_c_below_a
+                    and check_c_right_b
+                    and check_c_below_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 25.61943536400213 seconds
+Followup config inclusion prob: 0.488986737990864
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is large-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No, is there a small size and dark color dot to the left and below those?
+Type:
+Classify: 4.692356022002059 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a small size and dark color dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+57
+Understand: 11.978056850999565 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.355, 0.785, 1.0, 0.56], [0.285, -0.225, 0.6666666666666666, -0.8], [-0.03, 0.185, 0.6666666666666666, -0.2], [-0.19, 0.725, 1.0, 0.6933333333333334], [-0.625, 0.11, -0.6666666666666666, -0.8666666666666667], [0.04, -0.73, 0.6666666666666666, 0.10666666666666667], [0.745, 0.21, -0.6666666666666666, -0.49333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 3)]
+
+
+# Turn 0
+# Them: No, is there a small size and dark color dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_left = is_left(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    and check_c_left
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3, 4)]
+Read after code: 16.702753379002388 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.0595600827531384
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and dark color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, is there a large size and dark color dot to the right and below those?
+Type:
+Classify: 3.8924927600019146 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_dark = is_dark(d, ctx)
+check_d_right = is_right(d, [a,b,c], ctx)
+check_d_below = is_below(d, [a,b,c], ctx)
+```
+60
+Understand: 12.002338541002246 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.05, 0.12, 1.0, 0.56], [0.27, -0.48, 0.6666666666666666, -0.2], [0.11, 0.06, 1.0, 0.6933333333333334], [-0.32, -0.555, -0.6666666666666666, -0.8666666666666667], [0.25, 0.405, 0.6666666666666666, 0.6], [-0.905, -0.29, 0.6666666666666666, 0.24], [-0.63, -0.2, -0.3333333333333333, 0.41333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 3)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and dark color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_dark = is_dark(d, ctx)
+                check_d_right = is_right(d, [a,b,c], ctx)
+                check_d_below = is_below(d, [a,b,c], ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_dark
+                    and check_d_right
+                    and check_d_below
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 15.916101881000941 seconds
+Followup config inclusion prob: 0.542479929770741
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is large-sized and grey and the top dot is large-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a small size and dark color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 3: Yes. Is there a large size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No, let's select the one that's large in size and grey in color. <selection>.
+Type:
+Classify: 2.7860528439996415 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, let's select the one that's large in size and grey in color. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+```
+29
+Understand: 7.019117957002891 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.355, 0.785, 1.0, 0.56], [0.285, -0.225, 0.6666666666666666, -0.8], [-0.03, 0.185, 0.6666666666666666, -0.2], [-0.19, 0.725, 1.0, 0.6933333333333334], [-0.625, 0.11, -0.6666666666666666, -0.8666666666666667], [0.04, -0.73, 0.6666666666666666, 0.10666666666666667], [0.745, 0.21, -0.6666666666666666, -0.49333333333333335]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 3, 4)]
+
+
+# Turn 0
+# Them: No, let's select the one that's large in size and grey in color. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_grey
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2,)]
+Read after code: 9.849001288999716 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey?
+Type:
+Classify: 2.501753685002768 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_grey = is_grey(b, ctx)
+91
+Understand: 16.89594342900091 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.69, -0.095, 0.3333333333333333, -0.56], [-0.115, 0.38, -0.3333333333333333, 0.4666666666666667], [-0.045, 0.11, 0.0, -0.76], [-0.37, -0.76, 0.6666666666666666, -0.37333333333333335], [-0.39, 0.625, 0.0, -0.5733333333333334], [-0.4, -0.53, 0.0, -0.08], [-0.125, 0.865, 0.6666666666666666, 0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_large
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 19.46238609500142 seconds
+Do you see a pair of dots, where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light?
+Type:
+Classify: 2.6241976420024002 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top_right = b == get_top_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+93
+Understand: 14.573524814000848 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.415, 0.785, -0.3333333333333333, 0.4666666666666667], [-0.345, 0.515, 0.0, -0.76], [0.87, 0.035, -0.3333333333333333, -0.37333333333333335], [0.165, -0.49, -0.6666666666666666, -0.14666666666666667], [-0.67, -0.355, 0.6666666666666666, -0.37333333333333335], [0.765, -0.455, 0.6666666666666666, 0.14666666666666667], [-0.7, -0.125, 0.0, -0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom_left = a == get_bottom_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top_right = b == get_top_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom_left
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_top_right
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 17.225406582001597 seconds
+Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is medium-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the bottom dot is large-sized and dark and the top dot is medium-sized and grey?
+Type:
+Classify: 2.753690657002153 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom dot is large-sized and dark and the top dot is medium-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+87
+Understand: 16.037973285998305 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.69, -0.095, 0.3333333333333333, -0.56], [-0.115, 0.38, -0.3333333333333333, 0.4666666666666667], [-0.045, 0.11, 0.0, -0.76], [-0.37, -0.76, 0.6666666666666666, -0.37333333333333335], [-0.39, 0.625, 0.0, -0.5733333333333334], [-0.4, -0.53, 0.0, -0.08], [-0.125, 0.865, 0.6666666666666666, 0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom dot is large-sized and dark and the top dot is medium-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_top
+                    and check_b_medium
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3, 5)]
+Read after code: 18.819682991001173 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7038871218782707
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes, is there a medium-sized and dark-colored dot to the left and above those?
+Type:
+Classify: 2.825338937000197 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and dark-colored dot to the left and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_left = is_left(c, [a, b], ctx)
+check_c_above = is_above(c, [a, b], ctx)
+```
+60
+Understand: 12.049851511997986 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.415, 0.785, -0.3333333333333333, 0.4666666666666667], [-0.345, 0.515, 0.0, -0.76], [0.87, 0.035, -0.3333333333333333, -0.37333333333333335], [0.165, -0.49, -0.6666666666666666, -0.14666666666666667], [-0.67, -0.355, 0.6666666666666666, -0.37333333333333335], [0.765, -0.455, 0.6666666666666666, 0.14666666666666667], [-0.7, -0.125, 0.0, -0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a medium-sized and dark-colored dot to the left and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_left = is_left(c, [a, b], ctx)
+                check_c_above = is_above(c, [a, b], ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_dark
+                    and check_c_left
+                    and check_c_above
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 14.924689011997543 seconds
+Followup config inclusion prob: 0.6945778249091448
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Is there a small size and grey color dot to the right and below those?
+Type:
+Classify: 2.761854308999318 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Is there a small size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_below_a = is_below(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_below_b = is_below(c, b, ctx)
+```
+83
+Understand: 15.249528663000092 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.69, -0.095, 0.3333333333333333, -0.56], [-0.115, 0.38, -0.3333333333333333, 0.4666666666666667], [-0.045, 0.11, 0.0, -0.76], [-0.37, -0.76, 0.6666666666666666, -0.37333333333333335], [-0.39, 0.625, 0.0, -0.5733333333333334], [-0.4, -0.53, 0.0, -0.08], [-0.125, 0.865, 0.6666666666666666, 0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 5)]
+
+
+# Turn 0
+# Them: No. Is there a small size and grey color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_below_a = is_below(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_below_b = is_below(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_grey
+                    and check_c_right_a
+                    and check_c_below_a
+                    and check_c_right_b
+                    and check_c_below_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 18.055088001001423 seconds
+Followup config inclusion prob: 0.7038871218782707
+Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is medium-sized and grey
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and dark color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Is there a small size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No, do you see a pair of dots where the top left dot is medium-sized and dark and the bottom right dot is medium-sized and grey?
+Type:
+Classify: 3.027767734001827 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is medium-sized and dark and the bottom right dot is medium-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+96
+Understand: 18.30492816399783 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.415, 0.785, -0.3333333333333333, 0.4666666666666667], [-0.345, 0.515, 0.0, -0.76], [0.87, 0.035, -0.3333333333333333, -0.37333333333333335], [0.165, -0.49, -0.6666666666666666, -0.14666666666666667], [-0.67, -0.355, 0.6666666666666666, -0.37333333333333335], [0.765, -0.455, 0.6666666666666666, 0.14666666666666667], [-0.7, -0.125, 0.0, -0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is medium-sized and dark and the bottom right dot is medium-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_medium
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 21.38233105999825 seconds
+Followup config inclusion prob: 0.6945778249091448
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Is there a small size and grey color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 6: No, is there a medium-sized and dark-colored dot to the right and above those?
+Type:
+Classify: 6.588055681997503 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a medium-sized and dark-colored dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_above = is_above(c, [a,b], ctx)
+```
+58
+Understand: 11.68407482999828 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.69, -0.095, 0.3333333333333333, -0.56], [-0.115, 0.38, -0.3333333333333333, 0.4666666666666667], [-0.045, 0.11, 0.0, -0.76], [-0.37, -0.76, 0.6666666666666666, -0.37333333333333335], [-0.39, 0.625, 0.0, -0.5733333333333334], [-0.4, -0.53, 0.0, -0.08], [-0.125, 0.865, 0.6666666666666666, 0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 5)]
+
+
+# Turn 0
+# Them: No, is there a medium-sized and dark-colored dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_above = is_above(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_dark
+                    and check_c_right
+                    and check_c_above
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3, 5)]
+Read after code: 18.31528212199919 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.3308695725166643
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and dark color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 4: No. Is there a small size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No. Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 6: No. Is there a medium size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 7: Yes. Is there a medium-sized and dark-colored dot left of those?
+Type:
+Classify: 3.2378278720025264 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a medium-sized and dark-colored dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_medium = is_medium_size(d, ctx)
+check_d_dark = is_dark(d, ctx)
+check_d_left = is_left(d, [a,b,c], ctx)
+45
+Understand: 6.5578064789988275 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.415, 0.785, -0.3333333333333333, 0.4666666666666667], [-0.345, 0.515, 0.0, -0.76], [0.87, 0.035, -0.3333333333333333, -0.37333333333333335], [0.165, -0.49, -0.6666666666666666, -0.14666666666666667], [-0.67, -0.355, 0.6666666666666666, -0.37333333333333335], [0.765, -0.455, 0.6666666666666666, 0.14666666666666667], [-0.7, -0.125, 0.0, -0.08]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a medium-sized and dark-colored dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_medium = is_medium_size(d, ctx)
+                check_d_dark = is_dark(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_medium
+                    and check_d_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 4, 6)]
+Read after code: 9.820135894999112 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.3924464463704316
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom left dot is medium-sized and dark and the top right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is large-sized and dark and the top dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and dark color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No. Is there a small size and grey color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 5: No. Do you see a pair of dots, where the top left dot is medium-sized and dark and the bottom right dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 6: No. Is there a medium size and dark color dot to the right and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 7: Yes. Is there a medium size and dark color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 8: Yes, let's select the medium size and grey color one. <selection>.
+Type:
+Classify: 2.5725422780014924 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+31
+Understand: 6.002672598999197 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.69, -0.095, 0.3333333333333333, -0.56], [-0.115, 0.38, -0.3333333333333333, 0.4666666666666667], [-0.045, 0.11, 0.0, -0.76], [-0.37, -0.76, 0.6666666666666666, -0.37333333333333335], [-0.39, 0.625, 0.0, -0.5733333333333334], [-0.4, -0.53, 0.0, -0.08], [-0.125, 0.865, 0.6666666666666666, 0.4266666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 3, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(5,)]
+Read after code: 8.589770080001472 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and light?
+Type:
+Classify: 3.416431568999542 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = a == get_top([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom = b == get_bottom([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+88
+Understand: 17.70802746100162 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.625, 0.38, 1.0, 0.3333333333333333], [0.085, -0.555, 0.6666666666666666, -0.8533333333333334], [-0.31, -0.84, -1.0, 0.37333333333333335], [-0.075, 0.525, 0.0, -0.96], [0.71, 0.44, 0.0, 0.96], [-0.73, 0.175, 0.3333333333333333, 0.5066666666666667], [-0.465, 0.165, 0.6666666666666666, -0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = a == get_top([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom = b == get_bottom([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 21.18482116499945 seconds
+Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is large-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the left dot is medium-sized and light and the right dot is large-sized and dark?
+Type:
+Classify: 2.2431059620030283 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the left dot is medium-sized and light and the right dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = is_left(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = is_right(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+85
+Understand: 15.660965713999758 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.65, -0.53, 1.0, 0.3333333333333333], [-0.1, -0.38, 0.0, -0.96], [0.685, -0.465, 0.0, 0.96], [0.455, 0.375, -0.6666666666666666, -0.9466666666666667], [-0.495, -0.745, 0.6666666666666666, -0.44], [0.235, 0.655, 0.6666666666666666, -0.3466666666666667], [0.45, 0.06, -0.3333333333333333, 0.6]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the left dot is medium-sized and light and the right dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = is_left(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = is_right(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_right
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 17.93041398100104 seconds
+Do you see a pair of dots, where the top right dot is medium-sized and dark and the bottom left dot is large-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the top right dot is medium-sized and dark and the bottom left dot is large-sized and dark?
+Type:
+Classify: 2.1470817730005365 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top right dot is medium-sized and dark and the bottom left dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+93
+Understand: 16.121898834000604 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.625, 0.38, 1.0, 0.3333333333333333], [0.085, -0.555, 0.6666666666666666, -0.8533333333333334], [-0.31, -0.84, -1.0, 0.37333333333333335], [-0.075, 0.525, 0.0, -0.96], [0.71, 0.44, 0.0, 0.96], [-0.73, 0.175, 0.3333333333333333, 0.5066666666666667], [-0.465, 0.165, 0.6666666666666666, -0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top right dot is medium-sized and dark and the bottom left dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_bottom_left
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3, 6)]
+Read after code: 18.2893728559975 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7114318220018511
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top right dot is medium-sized and dark and the bottom left dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium-sized and light-colored dot to the left of those?
+Type:
+Classify: 3.088126268998167 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a medium-sized and light-colored dot to the left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+43
+Understand: 610.5674884790023 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.65, -0.53, 1.0, 0.3333333333333333], [-0.1, -0.38, 0.0, -0.96], [0.685, -0.465, 0.0, 0.96], [0.455, 0.375, -0.6666666666666666, -0.9466666666666667], [-0.495, -0.745, 0.6666666666666666, -0.44], [0.235, 0.655, 0.6666666666666666, -0.3466666666666667], [0.45, 0.06, -0.3333333333333333, 0.6]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4)]
+
+
+# Turn 0
+# Them: Yes. Is there a medium-sized and light-colored dot to the left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_light = is_light(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_light
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 4), (1, 4, 6)]
+Read after code: 613.6978448129994 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.30483216591033996
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the top right dot is medium-sized and dark and the bottom left dot is large-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and light color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes. Is there a small size and light color dot above those?
+Type:
+Classify: 3.002615934001369 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and light color dot above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_small = is_small(d, ctx)
+check_d_light = is_light(d, ctx)
+check_d_above_abc = is_above(d, [a,b,c], ctx)
+46
+Understand: 8.975314463001268 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.625, 0.38, 1.0, 0.3333333333333333], [0.085, -0.555, 0.6666666666666666, -0.8533333333333334], [-0.31, -0.84, -1.0, 0.37333333333333335], [-0.075, 0.525, 0.0, -0.96], [0.71, 0.44, 0.0, 0.96], [-0.73, 0.175, 0.3333333333333333, 0.5066666666666667], [-0.465, 0.165, 0.6666666666666666, -0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 5, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and light color dot above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_small = is_small(d, ctx)
+                check_d_light = is_light(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_small
+                    and check_d_light
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 3, 5, 6)]
+Read after code: 12.004369439000584 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.39962513121092513
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is large-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the top right dot is medium-sized and dark and the bottom left dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: Yes. Is there a medium size and light color dot left of those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 4: Yes. Is there a small size and light color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: Yes, let's select the large size and dark color one. <selection>.
+Type:
+Classify: 4.017743218999385 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+```
+27
+Understand: 8.735581051998452 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.65, -0.53, 1.0, 0.3333333333333333], [-0.1, -0.38, 0.0, -0.96], [0.685, -0.465, 0.0, 0.96], [0.455, 0.375, -0.6666666666666666, -0.9466666666666667], [-0.495, -0.745, 0.6666666666666666, -0.44], [0.235, 0.655, 0.6666666666666666, -0.3466666666666667], [0.45, 0.06, -0.3333333333333333, 0.6]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 4, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_dark
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 12.785233529000834 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey?
+Type:
+Classify: 3.8426318029996764 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = is_above(a, b, ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom = is_below(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+86
+Understand: 14.952014776998112 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.21, -0.04, 1.0, -0.14666666666666667], [0.365, -0.1, 0.6666666666666666, 0.6], [0.235, 0.87, 0.0, -0.29333333333333333], [0.46, 0.505, -0.6666666666666666, -0.6133333333333333], [-0.885, 0.345, 0.6666666666666666, 0.09333333333333334], [0.34, -0.46, -0.6666666666666666, -0.76], [0.36, 0.34, 0.6666666666666666, -0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = is_above(a, b, ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom = is_below(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom
+                    and check_b_large
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3)]
+Read after code: 18.827266861997487 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.1752929596144171
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and dark color dot in the middle of those?
+Type:
+Classify: 2.8761590370013437 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and dark color dot in the middle of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_middle = is_middle(c, [a,b], ctx)
+42
+Understand: 9.099202354998852 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.645, 0.015, 0.0, -0.29333333333333333], [-0.41, 0.15, -0.6666666666666666, -0.41333333333333333], [-0.225, 0.67, 0.3333333333333333, 0.7866666666666666], [0.87, -0.35, -0.6666666666666666, -0.6133333333333333], [-0.475, -0.51, 0.6666666666666666, 0.09333333333333334], [0.33, 0.885, -0.3333333333333333, -0.7066666666666667], [0.77, -0.515, 0.6666666666666666, -0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and dark color dot in the middle of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 4, 6)]
+Read after code: 12.010103570002684 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.20785900963383508
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and dark color dot in the middle of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a small size and dark color dot above those?
+Type:
+Classify: 2.277026788000512 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and dark color dot above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_small = is_small(d, ctx)
+check_d_dark = is_dark(d, ctx)
+check_d_above_abc = is_above(d, [a,b,c], ctx)
+46
+Understand: 8.802798806998908 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.21, -0.04, 1.0, -0.14666666666666667], [0.365, -0.1, 0.6666666666666666, 0.6], [0.235, 0.87, 0.0, -0.29333333333333333], [0.46, 0.505, -0.6666666666666666, -0.6133333333333333], [-0.885, 0.345, 0.6666666666666666, 0.09333333333333334], [0.34, -0.46, -0.6666666666666666, -0.76], [0.36, 0.34, 0.6666666666666666, -0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 3, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and dark color dot above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_small = is_small(d, ctx)
+                check_d_dark = is_dark(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_small
+                    and check_d_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3, 5, 6)]
+Read after code: 11.10796617500091 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.23368250253054498
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and dark color dot in the middle of those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a small size and dark color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, is there a large size and light color dot in the middle of those?
+Type:
+Classify: 3.5318268740011263 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and light color dot in the middle of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,d,
+New dots: e,
+Save dots:
+a,b,c,d,e
+Code:
+```
+check_e_large = is_large(e, ctx)
+check_e_light = is_light(e, ctx)
+check_e_middle = is_middle(e, [a,b,c,d], ctx)```
+47
+Understand: 10.943961062999733 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.645, 0.015, 0.0, -0.29333333333333333], [-0.41, 0.15, -0.6666666666666666, -0.41333333333333333], [-0.225, 0.67, 0.3333333333333333, 0.7866666666666666], [0.87, -0.35, -0.6666666666666666, -0.6133333333333333], [-0.475, -0.51, 0.6666666666666666, 0.09333333333333334], [0.33, 0.885, -0.3333333333333333, -0.7066666666666667], [0.77, -0.515, 0.6666666666666666, -0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4, 5, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and light color dot in the middle of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for e, in get1idxs(idxs, exclude=[a,b,c,d,]):
+                check_e_large = is_large(e, ctx)
+                check_e_light = is_light(e, ctx)
+                
+                if (
+                    True 
+                    and check_e_large
+                    and check_e_light
+                    
+                ):
+                    dots = frozenset([a,b,c,d,e,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 4, 5, 6)]
+Read after code: 14.498777354001504 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.49605996730523483
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and dark color dot in the middle of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a small size and dark color dot above those? <eos>
+Type: Follow up question, new dots.
+New dots: 3
+End
+Turn 3: Yes. Is there a large size and light color dot in the middle of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes. Is there a medium size and grey color dot near any of those?
+Type:
+Classify: 3.156950112999766 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a medium size and grey color dot near any of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,d,e,
+New dots: f,
+Save dots:
+a,b,c,d,e,f
+Code:
+```
+check_f_medium = is_medium_size(f, ctx)
+check_f_grey = is_grey(f, ctx)
+check_f_near_abcde = any([all_close([dot, f], ctx) for dot in [a, b, c, d, e]])
+```
+67
+Understand: 11.207629783999437 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.21, -0.04, 1.0, -0.14666666666666667], [0.365, -0.1, 0.6666666666666666, 0.6], [0.235, 0.87, 0.0, -0.29333333333333333], [0.46, 0.505, -0.6666666666666666, -0.6133333333333333], [-0.885, 0.345, 0.6666666666666666, 0.09333333333333334], [0.34, -0.46, -0.6666666666666666, -0.76], [0.36, 0.34, 0.6666666666666666, -0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 3, 5, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a medium size and grey color dot near any of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d,e, in permutations(config):
+            for f, in get1idxs(idxs, exclude=[a,b,c,d,e,]):
+                check_f_medium = is_medium_size(f, ctx)
+                check_f_grey = is_grey(f, ctx)
+                check_f_near_abcde = any([all_close([dot, f], ctx) for dot in [a, b, c, d, e]])
+                
+                if (
+                    True 
+                    and check_f_medium
+                    and check_f_grey
+                    and check_f_near_abcde
+                    
+                ):
+                    dots = frozenset([a,b,c,d,e,f,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1, 2, 3, 5, 6)]
+Read after code: 14.454773244000535 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8956928749901454
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and dark color dot in the middle of those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a small size and dark color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes. Is there a large size and light color dot in the middle of those? <eos>
+Type: Follow up question, new dots.
+New dots: 4
+End
+Turn 4: Yes. Is there a medium size and grey color dot near any of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: Yes, let's select the large size and dark color one. <selection>.
+Type:
+Classify: 2.7215142599998217 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,e,f,
+Save dots:
+a
+Code:
+```
+check_a_large_dark = is_large(a, ctx) and is_dark(a, ctx)
+```
+25
+Understand: 4.851887581997289 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.645, 0.015, 0.0, -0.29333333333333333], [-0.41, 0.15, -0.6666666666666666, -0.41333333333333333], [-0.225, 0.67, 0.3333333333333333, 0.7866666666666666], [0.87, -0.35, -0.6666666666666666, -0.6133333333333333], [-0.475, -0.51, 0.6666666666666666, 0.09333333333333334], [0.33, 0.885, -0.3333333333333333, -0.7066666666666667], [0.77, -0.515, 0.6666666666666666, -0.52]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 2, 4, 5, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d,e,f, in permutations(config):
+            for _ in [0]:
+                check_a_large_dark = is_large(a, ctx) and is_dark(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large_dark
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(6,)]
+Read after code: 7.588013368000247 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light?
+Type:
+Classify: 2.164131744997576 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = is_above(a, b, ctx)
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom = is_below(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+87
+Understand: 18.28992427600315 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.245, 0.47, -0.6666666666666666, 0.41333333333333333], [-0.89, 0.11, -0.3333333333333333, 0.5066666666666667], [0.715, 0.335, 0.0, -0.4266666666666667], [-0.22, -0.48, -0.3333333333333333, -0.7733333333333333], [0.37, -0.26, 0.6666666666666666, -0.49333333333333335], [0.78, -0.575, 0.0, 0.7333333333333333], [-0.65, -0.565, -0.6666666666666666, 0.36]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = is_above(a, b, ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom = is_below(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_large
+                    and check_a_grey
+                    and check_b_bottom
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 20.47476584299875 seconds
+Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is small-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the right dot is small-sized and dark and the left dot is small-sized and light?
+Type:
+Classify: 1.4235946059998241 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the right dot is small-sized and dark and the left dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+88
+Understand: 16.551409394000075 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.535, 0.275, -0.6666666666666666, 0.41333333333333333], [-0.065, 0.14, 0.0, -0.4266666666666667], [-0.41, -0.455, 0.6666666666666666, -0.49333333333333335], [0.775, 0.08, 1.0, 0.29333333333333333], [0.0, -0.77, 0.0, 0.7333333333333333], [0.675, -0.295, 0.0, 0.5733333333333334], [0.165, -0.565, -1.0, -0.41333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the right dot is small-sized and dark and the left dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_small
+                    and check_a_light
+                    and check_b_right
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 17.995181881000462 seconds
+Do you see a pair of dots, where the bottom dot is medium-sized and light and the top dot is small-sized and dark
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No, do you see a pair of dots where the bottom dot is medium-sized and light, and the top dot is small-sized and dark?
+Type:
+Classify: 1.876590332001797 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom dot is medium-sized and light, and the top dot is small-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+85
+Understand: 18.57842730700213 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.245, 0.47, -0.6666666666666666, 0.41333333333333333], [-0.89, 0.11, -0.3333333333333333, 0.5066666666666667], [0.715, 0.335, 0.0, -0.4266666666666667], [-0.22, -0.48, -0.3333333333333333, -0.7733333333333333], [0.37, -0.26, 0.6666666666666666, -0.49333333333333335], [0.78, -0.575, 0.0, 0.7333333333333333], [-0.65, -0.565, -0.6666666666666666, 0.36]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom dot is medium-sized and light, and the top dot is small-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_top
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 20.483156514001166 seconds
+Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is medium-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is small-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is medium-sized and light and the top dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: No, do you see a pair of dots where the top left dot is large-sized and dark and the bottom right dot is medium-sized and light?
+Type:
+Classify: 3.062245108998468 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top left dot is large-sized and dark and the bottom right dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_left = a == get_top_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+93
+Understand: 20.16233007700066 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.535, 0.275, -0.6666666666666666, 0.41333333333333333], [-0.065, 0.14, 0.0, -0.4266666666666667], [-0.41, -0.455, 0.6666666666666666, -0.49333333333333335], [0.775, 0.08, 1.0, 0.29333333333333333], [0.0, -0.77, 0.0, 0.7333333333333333], [0.675, -0.295, 0.0, 0.5733333333333334], [0.165, -0.565, -1.0, -0.41333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top left dot is large-sized and dark and the bottom right dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_left = a == get_top_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom_right = b == get_bottom_right([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_left
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_bottom_right
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 4)]
+Read after code: 23.245213769998372 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6993558337917589
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is medium-sized and light and the top dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 4: Yes. Is there a small size and dark color dot to the right of those?
+Type:
+Classify: 2.713573725999595 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and dark color dot to the right of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_ab = is_right(c, [a,b], ctx)
+```
+44
+Understand: 11.206653983997967 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.245, 0.47, -0.6666666666666666, 0.41333333333333333], [-0.89, 0.11, -0.3333333333333333, 0.5066666666666667], [0.715, 0.335, 0.0, -0.4266666666666667], [-0.22, -0.48, -0.3333333333333333, -0.7733333333333333], [0.37, -0.26, 0.6666666666666666, -0.49333333333333335], [0.78, -0.575, 0.0, 0.7333333333333333], [-0.65, -0.565, -0.6666666666666666, 0.36]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and dark color dot to the right of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right_ab = is_right(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    and check_c_right_ab
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 13.933927527999913 seconds
+Followup config inclusion prob: 0.7010767877508843
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is small-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is medium-sized and light and the top dot is small-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 3: No. Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is medium-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 4: Yes. Is there a small size and dark color dot right of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: No. Is there a small size and dark color dot left of those?
+Type:
+Classify: 3.4404203640006017 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No. Is there a small size and dark color dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_left_ab = is_left(c, [a, b], ctx)
+44
+Understand: 8.431875621001382 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.535, 0.275, -0.6666666666666666, 0.41333333333333333], [-0.065, 0.14, 0.0, -0.4266666666666667], [-0.41, -0.455, 0.6666666666666666, -0.49333333333333335], [0.775, 0.08, 1.0, 0.29333333333333333], [0.0, -0.77, 0.0, 0.7333333333333333], [0.675, -0.295, 0.0, 0.5733333333333334], [0.165, -0.565, -1.0, -0.41333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 4)]
+
+
+# Turn 0
+# Them: No. Is there a small size and dark color dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 4, 6)]
+Read after code: 11.888826573002007 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.9028943514542903
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is large-sized and grey and the bottom dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the right dot is small-sized and dark and the left dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: No. Do you see a pair of dots, where the bottom dot is medium-sized and light and the top dot is small-sized and dark <eos>
+Type: New question.
+New dots: 0
+End
+Turn 3: No. Do you see a pair of dots, where the top left dot is large-sized and dark and the bottom right dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 4: Yes. Is there a small size and dark color dot right of those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 5: No. Is there a small size and dark color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: Yes, let's select the large size and dark color one. <selection>.
+Type:
+Classify: 2.5117454350001935 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+```
+27
+Understand: 6.932502472001943 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.245, 0.47, -0.6666666666666666, 0.41333333333333333], [-0.89, 0.11, -0.3333333333333333, 0.5066666666666667], [0.715, 0.335, 0.0, -0.4266666666666667], [-0.22, -0.48, -0.3333333333333333, -0.7733333333333333], [0.37, -0.26, 0.6666666666666666, -0.49333333333333335], [0.78, -0.575, 0.0, 0.7333333333333333], [-0.65, -0.565, -0.6666666666666666, 0.36]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 4, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_dark
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 9.456699234000553 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is large-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is large-sized and light?
+Type:
+Classify: 2.765801924997504 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+85
+Understand: 18.04865512499964 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.905, -0.145, -0.6666666666666666, -0.9066666666666666], [0.065, -0.69, 0.3333333333333333, 0.6666666666666666], [-0.485, -0.275, 0.3333333333333333, -0.24], [0.39, 0.11, -0.6666666666666666, -0.5733333333333334], [0.655, 0.705, 0.6666666666666666, 0.7866666666666666], [-0.005, -0.885, 0.6666666666666666, 0.4], [-0.48, -0.115, -0.3333333333333333, 0.8666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_top
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 20.86762818400166 seconds
+Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is large-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the top right dot is medium-sized and light and the bottom left dot is large-sized and light?
+Type:
+Classify: 2.971069940002053 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the top right dot is medium-sized and light and the bottom left dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+93
+Understand: 17.275015967999934 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.495, -0.53, 0.0, -0.84], [0.43, 0.155, 0.3333333333333333, 0.6666666666666666], [-0.12, 0.57, 0.3333333333333333, -0.24], [-0.895, 0.395, 1.0, 0.6533333333333333], [-0.64, -0.355, 0.6666666666666666, 0.32], [0.36, -0.035, 0.6666666666666666, 0.4], [-0.115, 0.73, -0.3333333333333333, 0.8666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the top right dot is medium-sized and light and the bottom left dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_bottom_left
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 5)]
+Read after code: 20.26472148799803 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7063460236927817
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: Yes, is there a medium-sized and dark-colored dot to the right and below those?
+Type:
+Classify: 2.698972849000711 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a medium-sized and dark-colored dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+58
+Understand: 11.953847769000276 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.905, -0.145, -0.6666666666666666, -0.9066666666666666], [0.065, -0.69, 0.3333333333333333, 0.6666666666666666], [-0.485, -0.275, 0.3333333333333333, -0.24], [0.39, 0.11, -0.6666666666666666, -0.5733333333333334], [0.655, 0.705, 0.6666666666666666, 0.7866666666666666], [-0.005, -0.885, 0.6666666666666666, 0.4], [-0.48, -0.115, -0.3333333333333333, 0.8666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a medium-sized and dark-colored dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_dark
+                    and check_c_right
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 14.667911766002362 seconds
+Followup config inclusion prob: 0.6981135125386349
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is large-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 2: Yes. Is there a medium size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: No, is there a medium-sized and grey-colored dot to the left and above those?
+Type:
+Classify: 2.746439948998159 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a medium-sized and grey-colored dot to the left and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_left_a = is_left(c, a, ctx)
+check_c_above_b = is_above(c, b, ctx)```
+58
+Understand: 11.148248540001077 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.495, -0.53, 0.0, -0.84], [0.43, 0.155, 0.3333333333333333, 0.6666666666666666], [-0.12, 0.57, 0.3333333333333333, -0.24], [-0.895, 0.395, 1.0, 0.6533333333333333], [-0.64, -0.355, 0.6666666666666666, 0.32], [0.36, -0.035, 0.6666666666666666, 0.4], [-0.115, 0.73, -0.3333333333333333, 0.8666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 5)]
+
+
+# Turn 0
+# Them: No, is there a medium-sized and grey-colored dot to the left and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_left_a = is_left(c, a, ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_grey
+                    and check_c_left_a
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 5)]
+Read after code: 13.911154200002784 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.32665924754334513
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is large-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: Yes. Is there a medium size and dark color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 3: No. Is there a medium size and grey color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes. Is there a small size and light color dot above those?
+Type:
+Classify: 2.93184465000013 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and light color dot above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_small = is_small(d, ctx)
+check_d_light = is_light(d, ctx)
+check_d_above_abc = is_above(d, [a,b,c], ctx)
+46
+Understand: 8.632843161001801 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.905, -0.145, -0.6666666666666666, -0.9066666666666666], [0.065, -0.69, 0.3333333333333333, 0.6666666666666666], [-0.485, -0.275, 0.3333333333333333, -0.24], [0.39, 0.11, -0.6666666666666666, -0.5733333333333334], [0.655, 0.705, 0.6666666666666666, 0.7866666666666666], [-0.005, -0.885, 0.6666666666666666, 0.4], [-0.48, -0.115, -0.3333333333333333, 0.8666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and light color dot above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_small = is_small(d, ctx)
+                check_d_light = is_light(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_small
+                    and check_d_light
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 5, 6)]
+Read after code: 11.579949535000196 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.9386904299679943
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is large-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 2: Yes. Is there a medium size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: No. Is there a medium size and grey color dot to the left and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 4: Yes. Is there a small size and light color dot above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 5: Yes, let's select the medium size and light color one. <selection>.
+Type:
+Classify: 3.765511322999373 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+29
+Understand: 6.749498428998777 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.495, -0.53, 0.0, -0.84], [0.43, 0.155, 0.3333333333333333, 0.6666666666666666], [-0.12, 0.57, 0.3333333333333333, -0.24], [-0.895, 0.395, 1.0, 0.6533333333333333], [-0.64, -0.355, 0.6666666666666666, 0.32], [0.36, -0.035, 0.6666666666666666, 0.4], [-0.115, 0.73, -0.3333333333333333, 0.8666666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 5, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(6,), (1,)]
+Read after code: 10.537862887998926 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and light?
+Type:
+Classify: 2.4039675099993474 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = a == get_bottom([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_top = b == get_top([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+89
+Understand: 19.427409748001082 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.48, 0.035, 0.6666666666666666, -0.10666666666666667], [0.085, 0.14, 0.0, 0.06666666666666667], [-0.565, 0.245, -0.6666666666666666, 0.9866666666666667], [0.12, -0.865, -0.3333333333333333, -0.2], [-0.18, 0.565, 0.3333333333333333, -0.6666666666666666], [-0.225, 0.87, -0.6666666666666666, 0.8133333333333334], [0.155, -0.24, 0.0, 0.4]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = a == get_bottom([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_top = b == get_top([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_top
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4, 5)]
+Read after code: 21.849718466000922 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7063503312900146
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and light color dot to the left and below those?
+Type:
+Classify: 3.1207219710013305 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+57
+Understand: 10.768523680999351 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.235, -0.65, 0.6666666666666666, -0.10666666666666667], [-0.63, -0.545, 0.0, 0.06666666666666667], [-0.055, 0.565, -0.6666666666666666, 0.5333333333333333], [0.4, 0.44, -0.6666666666666666, -0.64], [-0.895, -0.12, 0.3333333333333333, -0.6666666666666666], [-0.94, 0.185, -0.6666666666666666, 0.8133333333333334], [-0.165, 0.7, 1.0, 0.6666666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and light color dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_left = is_left(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_light
+                    and check_c_left
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 13.902952114000072 seconds
+Followup config inclusion prob: 0.7066865329918472
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No, is there a medium-sized and grey-colored dot to the right and below those?
+Type:
+Classify: 2.8149904599995352 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a medium-sized and grey-colored dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+60
+Understand: 11.381699348999973 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.48, 0.035, 0.6666666666666666, -0.10666666666666667], [0.085, 0.14, 0.0, 0.06666666666666667], [-0.565, 0.245, -0.6666666666666666, 0.9866666666666667], [0.12, -0.865, -0.3333333333333333, -0.2], [-0.18, 0.565, 0.3333333333333333, -0.6666666666666666], [-0.225, 0.87, -0.6666666666666666, 0.8133333333333334], [0.155, -0.24, 0.0, 0.4]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(4, 5)]
+
+
+# Turn 0
+# Them: No, is there a medium-sized and grey-colored dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_grey
+                    and check_c_right
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 4, 5), (3, 4, 5)]
+Read after code: 14.213097500000003 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.3419326487798734
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a medium size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes. Is there a small size and light color dot left of those?
+Type:
+Classify: 3.3932963799998106 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and light color dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_small = is_small(d, ctx)
+check_d_light = is_light(d, ctx)
+check_d_left = is_left(d, [a,b,c], ctx)
+44
+Understand: 8.735770277999109 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.235, -0.65, 0.6666666666666666, -0.10666666666666667], [-0.63, -0.545, 0.0, 0.06666666666666667], [-0.055, 0.565, -0.6666666666666666, 0.5333333333333333], [0.4, 0.44, -0.6666666666666666, -0.64], [-0.895, -0.12, 0.3333333333333333, -0.6666666666666666], [-0.94, 0.185, -0.6666666666666666, 0.8133333333333334], [-0.165, 0.7, 1.0, 0.6666666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and light color dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_small = is_small(d, ctx)
+                check_d_light = is_light(d, ctx)
+                
+                if (
+                    True 
+                    and check_d_small
+                    and check_d_light
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 4, 5)]
+Read after code: 12.144024843000807 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.4397774232811335
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the bottom dot is medium-sized and dark and the top dot is small-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and light color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a medium size and grey color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and light color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: Yes, let's select the medium size and dark color one. <selection>.
+Type:
+Classify: 2.8740770959993824 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+29
+Understand: 5.375774076997914 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.48, 0.035, 0.6666666666666666, -0.10666666666666667], [0.085, 0.14, 0.0, 0.06666666666666667], [-0.565, 0.245, -0.6666666666666666, 0.9866666666666667], [0.12, -0.865, -0.3333333333333333, -0.2], [-0.18, 0.565, 0.3333333333333333, -0.6666666666666666], [-0.225, 0.87, -0.6666666666666666, 0.8133333333333334], [0.155, -0.24, 0.0, 0.4]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 4, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 8.265795003000676 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey?
+Type:
+Classify: 1.9767837459985458 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = is_above(a, b, ctx)
+check_a_small = is_small(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom = is_below(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+86
+Understand: 17.278460904002714 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.295, 0.875, -0.6666666666666666, 0.5466666666666666], [0.38, -0.4, -0.3333333333333333, -0.88], [0.435, 0.255, 0.0, 0.4266666666666667], [-0.66, 0.16, 0.3333333333333333, 0.18666666666666668], [0.73, -0.31, -1.0, -0.9066666666666666], [-0.67, -0.12, -0.6666666666666666, -0.96], [0.67, -0.625, 0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = is_above(a, b, ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom = is_below(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_small
+                    and check_a_dark
+                    and check_b_bottom
+                    and check_b_large
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4, 6), (1, 6)]
+Read after code: 19.275582562000636 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6872380659422791
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and dark color dot left of those?
+Type:
+Classify: 3.2091526629992586 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a small size and dark color dot left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_left_ab = is_left(c, [a,b], ctx)
+43
+Understand: 11.71304871599932 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.05, -0.025, -0.3333333333333333, -0.88], [-0.155, -0.67, 0.0, -0.08], [0.005, 0.625, 0.0, 0.4266666666666667], [0.3, 0.06, -1.0, -0.9066666666666666], [0.64, -0.53, 0.6666666666666666, 0.84], [0.61, 0.62, 1.0, -0.5333333333333333], [0.24, -0.255, 0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 6)]
+
+
+# Turn 0
+# Them: Yes. Is there a small size and dark color dot left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3, 6)]
+Read after code: 14.936935628000356 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.9010702103046472
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is small-sized and dark and the bottom dot is large-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and dark color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the small size and dark color one. <selection>.
+Type:
+Classify: 1.9418641410011332 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+27
+Understand: 5.606045477001317 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.295, 0.875, -0.6666666666666666, 0.5466666666666666], [0.38, -0.4, -0.3333333333333333, -0.88], [0.435, 0.255, 0.0, 0.4266666666666667], [-0.66, 0.16, 0.3333333333333333, 0.18666666666666668], [0.73, -0.31, -1.0, -0.9066666666666666], [-0.67, -0.12, -0.6666666666666666, -0.96], [0.67, -0.625, 0.6666666666666666, 0.29333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,), (1,)]
+Read after code: 7.562928688999818 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is medium-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is medium-sized and grey?
+Type:
+Classify: 6.030214556001738 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is medium-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+96
+Understand: 19.10214855400045 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.795, 0.225, 0.3333333333333333, -0.8], [-0.48, -0.12, 0.0, 0.92], [-0.72, -0.355, 0.0, 0.18666666666666668], [-0.39, -0.5, 0.6666666666666666, 0.7066666666666667], [-0.425, -0.785, -1.0, -0.44], [-0.105, -0.74, 0.3333333333333333, 0.96], [-0.04, -0.335, 1.0, -0.7333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is medium-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_bottom_left
+                    and check_b_medium
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2)]
+Read after code: 25.17957511199711 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7016234980231737
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is medium-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and light color dot to the right and below those?
+Type:
+Classify: 3.6271151950022613 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+57
+Understand: 11.776767379000376 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.03, -0.435, 0.0, 0.92], [0.325, 0.88, 0.0, -0.09333333333333334], [-0.25, 0.87, 0.6666666666666666, -0.6666666666666666], [-0.755, 0.4, -0.3333333333333333, 0.52], [-0.27, -0.67, 0.0, 0.18666666666666668], [0.06, -0.815, 0.6666666666666666, 0.7066666666666667], [0.415, -0.655, 1.0, -0.7333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 4)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and light color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    and check_c_right
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 4, 5)]
+Read after code: 15.418966163000732 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.896276754037861
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is medium-sized and light and the bottom left dot is medium-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the medium size and light color one. <selection>.
+Type:
+Classify: 3.0285176590004994 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+29
+Understand: 6.761625356000877 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.795, 0.225, 0.3333333333333333, -0.8], [-0.48, -0.12, 0.0, 0.92], [-0.72, -0.355, 0.0, 0.18666666666666668], [-0.39, -0.5, 0.6666666666666666, 0.7066666666666667], [-0.425, -0.785, -1.0, -0.44], [-0.105, -0.74, 0.3333333333333333, 0.96], [-0.04, -0.335, 1.0, -0.7333333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 3)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1,)]
+Read after code: 9.804918829999224 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and light?
+Type:
+Classify: 2.577461322001909 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_small = is_small(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+90
+Understand: 18.99735546300144 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.445, -0.145, 0.3333333333333333, -0.4266666666666667], [0.51, -0.535, -0.6666666666666666, -0.12], [-0.04, -0.14, 0.3333333333333333, -0.5066666666666667], [-0.585, -0.05, -0.6666666666666666, 0.05333333333333334], [0.79, -0.525, 0.6666666666666666, 0.6533333333333333], [0.955, -0.07, -0.6666666666666666, -0.7066666666666667], [-0.605, -0.525, 0.6666666666666666, -0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_small
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_large
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 4)]
+Read after code: 21.610432309000316 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.712328878357915
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and dark color dot to the right and above those?
+Type:
+Classify: 3.1453216419977252 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_dark = is_dark(c, ctx)
+check_c_right_a = is_right(c, a, ctx)
+check_c_above_a = is_above(c, a, ctx)
+check_c_right_b = is_right(c, b, ctx)
+check_c_above_b = is_above(c, b, ctx)
+```
+81
+Understand: 16.836373934998846 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.66, 0.17, 0.6666666666666666, -0.6933333333333334], [0.145, 0.285, -0.6666666666666666, -0.12], [-0.5, -0.62, -1.0, 0.24], [-0.405, 0.68, 0.3333333333333333, -0.5066666666666667], [0.915, -0.385, 0.0, -0.9866666666666667], [0.425, 0.29, 0.6666666666666666, 0.6533333333333333], [0.585, 0.75, -0.6666666666666666, -0.7066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and dark color dot to the right and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_dark = is_dark(c, ctx)
+                check_c_right_a = is_right(c, a, ctx)
+                check_c_above_a = is_above(c, a, ctx)
+                check_c_right_b = is_right(c, b, ctx)
+                check_c_above_b = is_above(c, b, ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_dark
+                    and check_c_right_a
+                    and check_c_above_a
+                    and check_c_right_b
+                    and check_c_above_b
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 5, 6)]
+Read after code: 20.030613301998528 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.26438407173196043
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and dark color dot to the right and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, is there a large size and dark color dot to the right and below those?
+Type:
+Classify: 3.254676552998717 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_large = is_large(d, ctx)
+check_d_dark = is_dark(d, ctx)
+check_d_right = is_right(d, [a,b,c], ctx)
+check_d_below = is_below(d, [a,b,c], ctx)
+59
+Understand: 9.939339586999267 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.445, -0.145, 0.3333333333333333, -0.4266666666666667], [0.51, -0.535, -0.6666666666666666, -0.12], [-0.04, -0.14, 0.3333333333333333, -0.5066666666666667], [-0.585, -0.05, -0.6666666666666666, 0.05333333333333334], [0.79, -0.525, 0.6666666666666666, 0.6533333333333333], [0.955, -0.07, -0.6666666666666666, -0.7066666666666667], [-0.605, -0.525, 0.6666666666666666, -0.7866666666666666]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 4, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and dark color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_large = is_large(d, ctx)
+                check_d_dark = is_dark(d, ctx)
+                check_d_right = is_right(d, [a,b,c], ctx)
+                
+                if (
+                    True 
+                    and check_d_large
+                    and check_d_dark
+                    and check_d_right
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 13.216002987999673 seconds
+Followup config inclusion prob: 0.8969284106187152
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is small-sized and grey and the right dot is large-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and dark color dot to the right and above those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a large size and dark color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: No, let's select the small size and grey color one. <selection>.
+Type:
+Classify: 2.7219126669988327 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, let's select the small size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+29
+Understand: 5.480236332001368 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.66, 0.17, 0.6666666666666666, -0.6933333333333334], [0.145, 0.285, -0.6666666666666666, -0.12], [-0.5, -0.62, -1.0, 0.24], [-0.405, 0.68, 0.3333333333333333, -0.5066666666666667], [0.915, -0.385, 0.0, -0.9866666666666667], [0.425, 0.29, 0.6666666666666666, 0.6533333333333333], [0.585, 0.75, -0.6666666666666666, -0.7066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 5, 6)]
+
+
+# Turn 0
+# Them: No, let's select the small size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1,)]
+Read after code: 8.21889409600044 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and dark?
+Type:
+Classify: 2.6834840849987813 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top_right = a == get_top_right([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+96
+Understand: 26.4991300699985 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.535, -0.115, -0.6666666666666666, -0.13333333333333333], [-0.825, -0.44, -0.3333333333333333, 0.28], [0.575, 0.355, -0.3333333333333333, -0.05333333333333334], [-0.845, 0.24, 0.0, 0.96], [-0.29, 0.74, 0.3333333333333333, -0.013333333333333334], [-0.37, 0.465, 0.3333333333333333, -0.84], [-0.49, 0.62, 0.0, -0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top_right = a == get_top_right([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top_right
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_bottom_left
+                    and check_b_medium
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4, 6), (4, 5)]
+Read after code: 29.20289163399866 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.5367554520138231
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and grey color dot to the right and below those?
+Type:
+Classify: 4.294465797000157 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_right = is_right(c, [a, b], ctx)
+check_c_below = is_below(c, [a, b], ctx)
+```
+61
+Understand: 11.652945719000854 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.15, 0.715, -0.3333333333333333, 0.92], [0.32, -0.215, -0.3333333333333333, -0.05333333333333334], [-0.55, 0.17, 0.3333333333333333, -0.013333333333333334], [0.195, 0.785, -0.3333333333333333, 0.22666666666666666], [-0.625, -0.11, 0.3333333333333333, -0.84], [0.595, 0.415, -0.3333333333333333, 0.02666666666666667], [-0.745, 0.045, 0.0, -0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 6)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and grey color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_right = is_right(c, [a, b], ctx)
+                check_c_below = is_below(c, [a, b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_grey
+                    and check_c_right
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1, 2, 6)]
+Read after code: 15.962906089000171 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.2235048104222832
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and grey color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes. Is there a medium-sized and dark-colored dot to the left of those?
+Type:
+Classify: 4.50814516399987 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes. Is there a medium-sized and dark-colored dot to the left of those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_medium = is_medium_size(d, ctx)
+check_d_dark = is_dark(d, ctx)
+check_d_left_abc = is_left(d, [a,b,c], ctx)
+```
+48
+Understand: 11.780942453002353 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.535, -0.115, -0.6666666666666666, -0.13333333333333333], [-0.825, -0.44, -0.3333333333333333, 0.28], [0.575, 0.355, -0.3333333333333333, -0.05333333333333334], [-0.845, 0.24, 0.0, 0.96], [-0.29, 0.74, 0.3333333333333333, -0.013333333333333334], [-0.37, 0.465, 0.3333333333333333, -0.84], [-0.49, 0.62, 0.0, -0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 4, 5)]
+
+
+# Turn 0
+# Them: Yes. Is there a medium-sized and dark-colored dot to the left of those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_medium = is_medium_size(d, ctx)
+                check_d_dark = is_dark(d, ctx)
+                check_d_left_abc = is_left(d, [a,b,c], ctx)
+                
+                if (
+                    True 
+                    and check_d_medium
+                    and check_d_dark
+                    and check_d_left_abc
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2, 4, 5, 6)]
+Read after code: 16.330519249000645 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.890453749022179
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top right dot is medium-sized and grey and the bottom left dot is medium-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and grey color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 2: Yes. Is there a medium size and dark color dot left of those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, let's select the medium size and grey color one. <selection>.
+Type:
+Classify: 2.976280795002822 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the medium size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,d,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+31
+Understand: 7.462916247000976 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.15, 0.715, -0.3333333333333333, 0.92], [0.32, -0.215, -0.3333333333333333, -0.05333333333333334], [-0.55, 0.17, 0.3333333333333333, -0.013333333333333334], [0.195, 0.785, -0.3333333333333333, 0.22666666666666666], [-0.625, -0.11, 0.3333333333333333, -0.84], [0.595, 0.415, -0.3333333333333333, 0.02666666666666667], [-0.745, 0.045, 0.0, -0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 2, 4, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the medium size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c,d, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(2,), (1,)]
+Read after code: 10.453988862998813 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and grey
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and grey?
+Type:
+Classify: 2.21481525299896 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and grey?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_large = is_large(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_large = is_large(b, ctx)
+check_b_grey = is_grey(b, ctx)
+```
+90
+Understand: 17.873251395001716 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.51, -0.48, -1.0, 0.8933333333333333], [0.65, -0.265, 0.6666666666666666, 0.25333333333333335], [-0.07, 0.845, -1.0, -0.04], [0.37, 0.3, 0.6666666666666666, -0.96], [0.465, -0.885, 1.0, -0.22666666666666666], [0.775, 0.345, 0.6666666666666666, -0.17333333333333334], [-0.91, -0.055, 0.0, 0.6133333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and grey?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_large = is_large(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_grey = is_grey(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_large
+                    and check_a_dark
+                    and check_b_right
+                    and check_b_large
+                    and check_b_grey
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3, 5)]
+Read after code: 20.120821770000475 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6895471084069467
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and grey
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and grey color dot below those?
+Type:
+Classify: 2.4542555549996905 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and grey color dot below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_below_ab = is_below(c, [a, b], ctx)
+46
+Understand: 11.117729146000784 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.17, -0.165, 0.6666666666666666, 0.25333333333333335], [0.62, -0.53, -1.0, -0.08], [-0.45, 0.4, 0.6666666666666666, -0.96], [-0.355, -0.785, 1.0, -0.22666666666666666], [-0.045, 0.445, 0.6666666666666666, -0.17333333333333334], [0.56, 0.445, -0.6666666666666666, 0.8], [-0.185, -0.85, 0.6666666666666666, -0.44]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(2, 4)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and grey color dot below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_grey
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2, 4), (2, 3, 4)]
+Read after code: 13.620761897000193 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6325028560693673
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is large-sized and dark and the right dot is large-sized and grey <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and grey color dot below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the large size and grey color one. <selection>.
+Type:
+Classify: 2.088732981999783 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the large size and grey color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+```
+29
+Understand: 5.880029153999203 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.51, -0.48, -1.0, 0.8933333333333333], [0.65, -0.265, 0.6666666666666666, 0.25333333333333335], [-0.07, 0.845, -1.0, -0.04], [0.37, 0.3, 0.6666666666666666, -0.96], [0.465, -0.885, 1.0, -0.22666666666666666], [0.775, 0.345, 0.6666666666666666, -0.17333333333333334], [-0.91, -0.055, 0.0, 0.6133333333333333]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(1, 3, 5)]
+
+
+# Turn 0
+# Them: Yes, let's select the large size and grey color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_a_large = is_large(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                
+                if (
+                    True 
+                    and check_a_large
+                    and check_a_grey
+                    
+                ):
+                    dots = frozenset([a])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(1,), (5,)]
+Read after code: 7.990226150999661 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and dark
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and dark?
+Type:
+Classify: 3.5462068710003223 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and dark?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_top = is_above(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_dark = is_dark(a, ctx)
+check_b_bottom = is_below(b, a, ctx)
+check_b_large = is_large(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+85
+Understand: 15.01642483699834 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.64, 0.655, 0.3333333333333333, -0.72], [0.695, 0.205, 1.0, -0.9333333333333333], [0.385, 0.115, 0.0, 0.41333333333333333], [-0.61, 0.42, 0.6666666666666666, -0.5866666666666667], [0.42, -0.35, -0.6666666666666666, -0.09333333333333334], [0.925, 0.03, 0.3333333333333333, -0.6933333333333334], [-0.885, -0.28, -0.6666666666666666, 0.013333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and dark?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_top = is_above(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_dark = is_dark(a, ctx)
+                check_b_bottom = is_below(b, a, ctx)
+                check_b_large = is_large(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_top
+                    and check_a_medium
+                    and check_a_dark
+                    and check_b_bottom
+                    and check_b_large
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3)]
+Read after code: 18.606400149001274 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.5440029332143642
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a small size and grey color dot to the left and below those?
+Type:
+Classify: 2.420952700998896 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and grey color dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_small = is_small(c, ctx)
+check_c_grey = is_grey(c, ctx)
+check_c_left = is_left(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+59
+Understand: 12.103044429000875 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.815, -0.1, 0.3333333333333333, -0.72], [0.88, -0.47, 0.0, 0.21333333333333335], [0.155, 0.68, -0.6666666666666666, -0.48], [0.515, -0.55, 1.0, -0.9333333333333333], [0.21, -0.64, 0.0, 0.41333333333333333], [-0.79, -0.335, 0.6666666666666666, -0.5866666666666667], [0.245, 0.29, -1.0, 0.2]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and grey color dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_small = is_small(c, ctx)
+                check_c_grey = is_grey(c, ctx)
+                check_c_left = is_left(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_small
+                    and check_c_grey
+                    and check_c_left
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 14.548408525999548 seconds
+Followup config inclusion prob: 0.5229990778045814
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and grey color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No, is there a medium-sized and light-colored dot to the right and below those?
+Type:
+Classify: 3.0821206790024007 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, is there a medium-sized and light-colored dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_medium = is_medium_size(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+58
+Understand: 11.210812009001529 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.64, 0.655, 0.3333333333333333, -0.72], [0.695, 0.205, 1.0, -0.9333333333333333], [0.385, 0.115, 0.0, 0.41333333333333333], [-0.61, 0.42, 0.6666666666666666, -0.5866666666666667], [0.42, -0.35, -0.6666666666666666, -0.09333333333333334], [0.925, 0.03, 0.3333333333333333, -0.6933333333333334], [-0.885, -0.28, -0.6666666666666666, 0.013333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 3)]
+
+
+# Turn 0
+# Them: No, is there a medium-sized and light-colored dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_medium = is_medium_size(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_medium
+                    and check_c_light
+                    and check_c_right
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 2, 3)]
+Read after code: 14.317623709001055 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.2649392921916407
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and dark
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and grey color dot to the left and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 0
+End
+Turn 2: No. Is there a medium size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, is there a small size and grey color dot to the left and below those?
+Type:
+Classify: 2.9046684880013345 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a small size and grey color dot to the left and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,c,
+New dots: d,
+Save dots:
+a,b,c,d
+Code:
+```
+check_d_small = is_small(d, ctx)
+check_d_grey = is_grey(d, ctx)
+check_d_left = is_left(d, [a,b,c], ctx)
+check_d_below = is_below(d, [a,b,c], ctx)
+```
+62
+Understand: 12.540151033001166 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.815, -0.1, 0.3333333333333333, -0.72], [0.88, -0.47, 0.0, 0.21333333333333335], [0.155, 0.68, -0.6666666666666666, -0.48], [0.515, -0.55, 1.0, -0.9333333333333333], [0.21, -0.64, 0.0, 0.41333333333333333], [-0.79, -0.335, 0.6666666666666666, -0.5866666666666667], [0.245, 0.29, -1.0, 0.2]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 4, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a small size and grey color dot to the left and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for d, in get1idxs(idxs, exclude=[a,b,c,]):
+                check_d_small = is_small(d, ctx)
+                check_d_grey = is_grey(d, ctx)
+                check_d_left = is_left(d, [a,b,c], ctx)
+                check_d_below = is_below(d, [a,b,c], ctx)
+                
+                if (
+                    True 
+                    and check_d_small
+                    and check_d_grey
+                    and check_d_left
+                    and check_d_below
+                    
+                ):
+                    dots = frozenset([a,b,c,d,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 15.500074522999057 seconds
+Followup config inclusion prob: 0.8542391092278239
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and dark <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a small size and grey color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: No. Is there a medium size and light color dot to the right and below those? <eos>
+Type: Follow up question, new dots.
+New dots: 2
+End
+Turn 3: Yes. Is there a small size and grey color dot to the left and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 4: No, let's select the medium size and dark color one. <selection>.
+Type:
+Classify: 2.432508140002028 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, let's select the medium size and dark color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_medium_size = is_medium_size(b, ctx)
+check_b_dark = is_dark(b, ctx)
+```
+29
+Understand: 7.052780630998313 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.64, 0.655, 0.3333333333333333, -0.72], [0.695, 0.205, 1.0, -0.9333333333333333], [0.385, 0.115, 0.0, 0.41333333333333333], [-0.61, 0.42, 0.6666666666666666, -0.5866666666666667], [0.42, -0.35, -0.6666666666666666, -0.09333333333333334], [0.925, 0.03, 0.3333333333333333, -0.6933333333333334], [-0.885, -0.28, -0.6666666666666666, 0.013333333333333334]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 2, 3)]
+
+
+# Turn 0
+# Them: No, let's select the medium size and dark color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_medium_size = is_medium_size(b, ctx)
+                check_b_dark = is_dark(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_medium_size
+                    and check_b_dark
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0,)]
+Read after code: 9.50249538999924 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and light?
+Type:
+Classify: 1.803045443000883 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = a == get_left([a,b], ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_right = b == get_right([a,b], ctx)
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+89
+Understand: 21.794512511001813 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.26, 0.02, 1.0, 0.8], [0.13, 0.155, 1.0, -0.4], [-0.175, -0.695, 0.3333333333333333, 0.6133333333333333], [-0.885, 0.09, 0.0, 0.5066666666666667], [-0.595, 0.025, -0.6666666666666666, 0.9066666666666666], [0.09, -0.64, 0.3333333333333333, -0.9333333333333333], [0.4, -0.44, 0.0, -0.92]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = a == get_left([a,b], ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_right = b == get_right([a,b], ctx)
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_light
+                    and check_b_right
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(3, 4)]
+Read after code: 23.634193916001095 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.7065694464849444
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes, is there a large size and light color dot to the right and below those?
+Type:
+Classify: 3.055056650999177 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_right = is_right(c, [a,b], ctx)
+check_c_below = is_below(c, [a,b], ctx)
+```
+57
+Understand: 11.884363150998979 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.37, -0.225, 1.0, 0.8], [0.76, -0.09, 1.0, -0.4], [-0.305, 0.14, 0.0, 0.52], [-0.255, -0.155, 0.0, 0.5066666666666667], [-0.73, 0.33, 1.0, -0.9866666666666667], [0.035, -0.22, -0.6666666666666666, 0.9066666666666666], [-0.545, 0.22, -0.6666666666666666, 0.96]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(3, 5)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and light color dot to the right and below those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_right = is_right(c, [a,b], ctx)
+                check_c_below = is_below(c, [a,b], ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    and check_c_right
+                    and check_c_below
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 3, 5)]
+Read after code: 14.975307386997883 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6181393320381054
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and light and the right dot is small-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 1: Yes. Is there a large size and light color dot to the right and below those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 2: Yes, let's select the small size and light color one. <selection>.
+Type:
+Classify: 3.115507272999821 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+27
+Understand: 5.919967376001296 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[-0.26, 0.02, 1.0, 0.8], [0.13, 0.155, 1.0, -0.4], [-0.175, -0.695, 0.3333333333333333, 0.6133333333333333], [-0.885, 0.09, 0.0, 0.5066666666666667], [-0.595, 0.025, -0.6666666666666666, 0.9066666666666666], [0.09, -0.64, 0.3333333333333333, -0.9333333333333333], [0.4, -0.44, 0.0, -0.92]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 3, 4)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(4,)]
+Read after code: 9.075260567999067 seconds
+UPDATED BELIEF we see
+Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and light
+IN READ
+None
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and light?
+Type:
+Classify: 2.908854411001812 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_left = is_left(a, b, ctx)
+check_a_medium = is_medium_size(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_b_right = is_right(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+88
+Understand: 18.796976451001683 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.535, 0.415, -0.3333333333333333, 0.4], [0.58, 0.795, 0.0, 0.6666666666666666], [0.64, -0.245, 0.6666666666666666, -0.5333333333333333], [-0.76, -0.41, 0.3333333333333333, 0.08], [-0.45, 0.39, 0.0, 0.9066666666666666], [-0.155, -0.02, -0.6666666666666666, -0.21333333333333335], [0.19, 0.82, 1.0, 0.5066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_left = is_left(a, b, ctx)
+                check_a_medium = is_medium_size(a, ctx)
+                check_a_grey = is_grey(a, ctx)
+                check_b_right = is_right(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_left
+                    and check_a_medium
+                    and check_a_grey
+                    and check_b_right
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[]
+Read after code: 21.776616621002177 seconds
+Do you see a pair of dots, where the bottom dot is small-sized and light and the top dot is medium-sized and light
+IN READ
+None
+NO UPDATED BELIEF none
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No, do you see a pair of dots where the bottom dot is small-sized and light, and the top dot is medium-sized and light?
+Type:
+Classify: 3.488940425002511 seconds
+New question.
+New dots: 2
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: No, do you see a pair of dots where the bottom dot is small-sized and light, and the top dot is medium-sized and light?
+Type: New question.
+Dots: a,b,
+Save dots:
+a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_a_bottom = is_below(a, b, ctx)
+check_a_small = is_small(a, ctx)
+check_a_light = is_light(a, ctx)
+check_b_top = is_above(b, a, ctx)
+check_b_medium = is_medium_size(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+85
+Understand: 18.126541815003293 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.24, -0.615, -0.3333333333333333, 0.4], [0.285, -0.235, 0.0, 0.6666666666666666], [-0.5, 0.415, 0.0, -0.04], [-0.495, 0.805, -0.3333333333333333, -0.9866666666666667], [-0.16, 0.215, 0.3333333333333333, 0.7466666666666667], [-0.745, -0.64, 0.0, 0.9066666666666666], [-0.105, -0.21, 1.0, 0.5066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = None
+
+
+# Turn 0
+# Them: No, do you see a pair of dots where the bottom dot is small-sized and light, and the top dot is medium-sized and light?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in getsets(idxs, 2):
+        for a,b, in permutations(config):
+            for _ in [0]:
+                check_ab_pair = all_close([a,b], ctx)
+                check_a_bottom = is_below(a, b, ctx)
+                check_a_small = is_small(a, ctx)
+                check_a_light = is_light(a, ctx)
+                check_b_top = is_above(b, a, ctx)
+                check_b_medium = is_medium_size(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_ab_pair
+                    and check_a_bottom
+                    and check_a_small
+                    and check_a_light
+                    and check_b_top
+                    and check_b_medium
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([a,b,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1)]
+Read after code: 21.65745533899826 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.6989361170038029
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and light <eos>
+Type: New question.
+New dots: 0
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is small-sized and light and the top dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 2: Yes, is there a large size and light color dot to the left and above those?
+Type:
+Classify: 3.605019378999714 seconds
+Follow up question, new dots.
+New dots: 1
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, is there a large size and light color dot to the left and above those?
+Type: Follow up question, new dots.
+Previous dots: a,b,
+New dots: c,
+Save dots:
+a,b,c
+Code:
+```
+check_c_large = is_large(c, ctx)
+check_c_light = is_light(c, ctx)
+check_c_left_a = is_left(c, a, ctx)
+check_c_above_b = is_above(c, b, ctx)```
+55
+Understand: 10.517158012997243 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.535, 0.415, -0.3333333333333333, 0.4], [0.58, 0.795, 0.0, 0.6666666666666666], [0.64, -0.245, 0.6666666666666666, -0.5333333333333333], [-0.76, -0.41, 0.3333333333333333, 0.08], [-0.45, 0.39, 0.0, 0.9066666666666666], [-0.155, -0.02, -0.6666666666666666, -0.21333333333333335], [0.19, 0.82, 1.0, 0.5066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1)]
+
+
+# Turn 0
+# Them: Yes, is there a large size and light color dot to the left and above those?
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b, in permutations(config):
+            for c, in get1idxs(idxs, exclude=[a,b,]):
+                check_c_large = is_large(c, ctx)
+                check_c_light = is_light(c, ctx)
+                check_c_left_a = is_left(c, a, ctx)
+                
+                if (
+                    True 
+                    and check_c_large
+                    and check_c_light
+                    and check_c_left_a
+                    
+                ):
+                    dots = frozenset([a,b,c,])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=False)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0, 1, 6)]
+Read after code: 14.175319098998443 seconds
+UPDATED BELIEF we see
+Followup config inclusion prob: 0.8981387459731072
+IN READ
+Yes
+UPDATED BELIEF confirmed
+Turn 0: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+New dots: 3
+End
+Turn 1: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+New dots: 2
+End
+Turn 3: No.
+Type: No op.
+New dots: 0
+End
+Turn 4: What about a large medium grey dot near the center?
+Type: New question.
+New dots: 1
+End
+Turn 5: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+New dots: 3
+End
+Turn 7: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 8: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+New dots: 0
+End
+Turn 9: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+New dots: 0
+End
+Turn 0: Do you see a large black dot on the bottom left?
+Type: New question.
+New dots: 1
+End
+Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+New dots: 3
+End
+Turn 2: Select the largest one.
+Type: Select a dot.
+New dots: 0
+End
+Turn 3: Yes.
+Type: No op.
+New dots: 0
+End
+Turn 4: Okay. <selection>.
+Type: No op.
+New dots: 0
+End
+
+
+Turn 0: Do you see a pair of dots, where the left dot is medium-sized and grey and the right dot is medium-sized and light
+Type: New question.
+New dots: 2
+End
+Turn 1: No. Do you see a pair of dots, where the bottom dot is small-sized and light and the top dot is medium-sized and light <eos>
+Type: New question.
+New dots: 2
+End
+Turn 2: Yes. Is there a large size and light color dot to the left and above those?
+Type: Follow up question, new dots.
+New dots: 1
+End
+Turn 3: Yes, let's select the small size and light color one. <selection>.
+Type:
+Classify: 2.872284649998619 seconds
+Select a dot.
+New dots: 0
+Translate the text into code.
+These are the available functions.
+```
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+```
+`idxs = list(range(7))` corresponds to the available dots.
+
+Here are some examples.
+
+Text: Got a triangle of 3 light grey dots by itself.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_triangle = is_triangle([a,b,c], ctx)
+check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
+check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
+```
+
+Text: Could be. One on right is largest with a tiny gray on top??
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_right = a == get_right([a,b,c], ctx)
+check_a_largest = a == largest([a,b,c], ctx)
+check_b_tiny = is_small(b, ctx)
+check_b_grey = is_grey(b, ctx)
+check_b_top = b == get_top([a,b,c], ctx)
+```
+
+Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
+Type: New question.
+Dots: a,b
+Save dots: a,b
+Code:
+```
+check_ab_pair = all_close([a,b], ctx)
+check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
+check_b_right_a = is_right(b, a, ctx)
+check_b_above_a = is_above(b, a, ctx)
+check_ab_same_size = same_size([a,b], ctx)
+```
+
+Text: No.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: What about a large medium grey dot near the center?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+check_a_grey = is_grey(a, ctx)
+check_a_center = is_middle(a, None, ctx)
+```
+
+Text: Is there a smaller black one next to it?
+Type: Follow up question, new dots.
+Previous dots: a,
+New dots: b,
+Save dots: a,b
+Code:
+```
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_b_dark = is_dark(b, ctx)
+check_b_next_to_a = all_close([a,b], ctx)
+```
+
+Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_line = is_line([a,b,c], ctx)
+check_a_top_left = a == get_top_left([a,b,c], ctx)
+check_a_light = is_light(a, ctx)
+check_b_middle = is_middle(b, [a,b,c], ctx)
+check_b_grey = is_grey(y, ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+check_c_dark = is_dark(c, ctx)
+```
+
+Text: Yes. Is the top one close to the middle darker one?
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_a_top = a == get_top([a,b,c], ctx)
+check_b_middle = b == get_middle([a,b,c], ctx)
+check_ab_close = all_close([a, b], ctx)
+check_b_darker_a = is_darker(b, a, ctx)
+```
+
+Text: Yes. And the smallest is on the bottom right.
+Type: Follow up question, no new dots.
+Previous dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_c_smallest = c == smallest([a,b,c], ctx)
+check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
+```
+
+Text: Yes, let's select the large one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, ctx)
+```
+
+Text: Do you see a large black dot on the bottom left?
+Type: New question.
+Dots: a
+Save dots: a
+Code:
+```
+check_a_large = is_large(a, cta)
+check_a_dark = is_dark(a, cta)
+check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
+```
+
+Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
+Type: New question.
+Dots: a,b,c
+Save dots: a,b,c
+Code:
+```
+check_abc_close = all_close([a,b,c], ctx)
+check_a_large = is_large(a, ctx)
+check_c_dark = is_dark(c, ctx)
+check_b_smaller_a = is_smaller(b, a, ctx)
+check_c_smaller_a = is_smaller(c, a, ctx)
+check_b_lighter_a = is_lighter(b, a, ctx)
+check_c_lighter_a = is_lighter(c, a, ctx)
+check_bc_same_size = same_size([b,c], ctx)
+check_bc_same_color = same_color([b,c], ctx)
+```
+
+Text: Select the largest one.
+Type: Select a dot.
+Previous dots: a,b,c
+New dots: _
+Save dots: a
+Code:
+```
+check_a_largest = a == get_largest([a,b,c], ctx)
+```
+
+Text: Yes.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Okay. <selection>.
+Type: No op.
+Code:
+```
+pass
+```
+
+Text: Yes, let's select the small size and light color one. <selection>.
+Type: Select a dot.
+Previous dots: a,b,c,
+Save dots:
+b
+Code:
+```
+check_b_small = is_small(b, ctx)
+check_b_light = is_light(b, ctx)
+```
+27
+Understand: 5.7394083399995 seconds
+
+
+from oc.fns.context import get_ctx
+from oc.fns.shapes import is_triangle, is_line, is_square
+from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
+from oc.fns.spatial import get_top, get_bottom, get_right, get_left
+from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
+from oc.fns.spatial import get_middle
+from oc.fns.spatial import get_distance, get_minimum_radius
+from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
+from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
+from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
+from oc.fns.lists import add
+from oc.fns.lists import sort_state
+import numpy as np
+from functools import partial
+from itertools import permutations
+
+
+def get_ctx():
+    ctx = np.array([[0.24, -0.615, -0.3333333333333333, 0.4], [0.285, -0.235, 0.0, 0.6666666666666666], [-0.5, 0.415, 0.0, -0.04], [-0.495, 0.805, -0.3333333333333333, -0.9866666666666667], [-0.16, 0.215, 0.3333333333333333, 0.7466666666666667], [-0.745, -0.64, 0.0, 0.9066666666666666], [-0.105, -0.21, 1.0, 0.5066666666666667]])
+    return ctx
+
+idxs = list(range(7))
+
+# New.
+ctx = get_ctx()
+state = [(0, 1, 6)]
+
+
+# Turn 0
+# Them: Yes, let's select the small size and light color one. <selection>.
+def turn(state):
+    results = set()
+    orderedresults = []
+    parents = []
+    for config in state:
+        for a,b,c, in permutations(config):
+            for _ in [0]:
+                check_b_small = is_small(b, ctx)
+                check_b_light = is_light(b, ctx)
+                
+                if (
+                    True 
+                    and check_b_small
+                    and check_b_light
+                    
+                ):
+                    dots = frozenset([b])
+                    if dots not in results:
+                        results.add(dots)
+                        orderedresults.append(dots)
+                        parents.append(config)
+    return sort_state(orderedresults, parents, ctx, select=True)
+state = turn(state)
+
+
+if state is not None:
+    print([tuple(x) for x in state])
+else:
+    print("None")
+[(0,)]
+Read after code: 8.634739802997501 seconds
+UPDATED BELIEF we see
+dump selfplay_markables.json
+dump selfplay_referents.json
+repeat selfplay results 0.76470588 ( 0.00000000 )
gpt_selfplay.py --context_file=shared_4 --markable_detector_file=serialized_models/markable_detector_with_dict_1.th --verbose --num_contexts 50 --log_file=gpt2_logs/gpt2_selfplay_ctx-4.selfplay.log
{'alice_forward_model_file': None,
 'alice_model_file': None,
 'belief_alice': False,
 'belief_bob': False,
 'bob_model_file': None,
 'bsz': 16,
 'context_file': 'shared_4',
 'cuda': False,
 'data': 'data/onecommon',
 'dialog_log_dir': 'analysis_log',
 'domain': 'one_common',
 'eps': 0.0,
 'log_attention': False,
 'log_file': 'gpt2_logs/gpt2_selfplay_ctx-4.selfplay.log',
 'markable_detector_file': 'serialized_models/markable_detector_with_dict_1.th',
 'markables_file': 'selfplay_markables.json',
 'max_turns': 20,
 'must_contain': None,
 'num_contexts': 50,
 'plot_metrics': False,
 'record_markables': False,
 'ref_text': None,
 'referents_file': 'selfplay_referents.json',
 'repeat_selfplay': False,
 'rollout_bsz': 3,
 'rollout_count_threshold': 3,
 'rollout_model_file': '',
 'seed': 1,
 'selection_model_file': '',
 'smart_alice': False,
 'smart_bob': False,
 'symbolic': False,
 'unk_threshold': 10,
 'verbose': True,
 'visual': False}
Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is medium-sized and grey
IN READ
None
Turn 0: Got a triangle of 3 light grey dots by itself.
Type: New question.
New dots: 3
End
Turn 1: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
New dots: 0
End
Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
New dots: 2
End
Turn 3: No.
Type: No op.
New dots: 0
End
Turn 4: What about a large medium grey dot near the center?
Type: New question.
New dots: 1
End
Turn 5: Is there a smaller black one next to it?
Type: Follow up question, new dots.
New dots: 1
End
Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
New dots: 3
End
Turn 7: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
New dots: 0
End
Turn 8: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
New dots: 0
End
Turn 9: Yes, let's select the large one. <selection>.
Type: Select a dot.
New dots: 0
End
Turn 0: Do you see a large black dot on the bottom left?
Type: New question.
New dots: 1
End
Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
New dots: 3
End
Turn 2: Select the largest one.
Type: Select a dot.
New dots: 0
End
Turn 3: Yes.
Type: No op.
New dots: 0
End
Turn 4: Okay. <selection>.
Type: No op.
New dots: 0
End


Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is medium-sized and grey?
Type:
Classify: 2.0004551699967124 seconds
New question.
New dots: 2
Translate the text into code.
These are the available functions.
```
from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations

```
`idxs = list(range(7))` corresponds to the available dots.

Here are some examples.

Text: Got a triangle of 3 light grey dots by itself.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_triangle = is_triangle([a,b,c], ctx)
check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
```

Text: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_right = a == get_right([a,b,c], ctx)
check_a_largest = a == largest([a,b,c], ctx)
check_b_tiny = is_small(b, ctx)
check_b_grey = is_grey(b, ctx)
check_b_top = b == get_top([a,b,c], ctx)
```

Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
Dots: a,b
Save dots: a,b
Code:
```
check_ab_pair = all_close([a,b], ctx)
check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
check_b_right_a = is_right(b, a, ctx)
check_b_above_a = is_above(b, a, ctx)
check_ab_same_size = same_size([a,b], ctx)
```

Text: No.
Type: No op.
Code:
```
pass
```

Text: What about a large medium grey dot near the center?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
check_a_grey = is_grey(a, ctx)
check_a_center = is_middle(a, None, ctx)
```

Text: Is there a smaller black one next to it?
Type: Follow up question, new dots.
Previous dots: a,
New dots: b,
Save dots: a,b
Code:
```
check_b_smaller_a = is_smaller(b, a, ctx)
check_b_dark = is_dark(b, ctx)
check_b_next_to_a = all_close([a,b], ctx)
```

Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_line = is_line([a,b,c], ctx)
check_a_top_left = a == get_top_left([a,b,c], ctx)
check_a_light = is_light(a, ctx)
check_b_middle = is_middle(b, [a,b,c], ctx)
check_b_grey = is_grey(y, ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
check_c_dark = is_dark(c, ctx)
```

Text: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_top = a == get_top([a,b,c], ctx)
check_b_middle = b == get_middle([a,b,c], ctx)
check_ab_close = all_close([a, b], ctx)
check_b_darker_a = is_darker(b, a, ctx)
```

Text: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_c_smallest = c == smallest([a,b,c], ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
```

Text: Yes, let's select the large one. <selection>.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
```

Text: Do you see a large black dot on the bottom left?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, cta)
check_a_dark = is_dark(a, cta)
check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
```

Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_close = all_close([a,b,c], ctx)
check_a_large = is_large(a, ctx)
check_c_dark = is_dark(c, ctx)
check_b_smaller_a = is_smaller(b, a, ctx)
check_c_smaller_a = is_smaller(c, a, ctx)
check_b_lighter_a = is_lighter(b, a, ctx)
check_c_lighter_a = is_lighter(c, a, ctx)
check_bc_same_size = same_size([b,c], ctx)
check_bc_same_color = same_color([b,c], ctx)
```

Text: Select the largest one.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_largest = a == get_largest([a,b,c], ctx)
```

Text: Yes.
Type: No op.
Code:
```
pass
```

Text: Okay. <selection>.
Type: No op.
Code:
```
pass
```

Text: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is medium-sized and grey?
Type: New question.
Dots: a,b,
Save dots:
a,b
Code:
```
check_ab_pair = all_close([a,b], ctx)
check_a_bottom_right = a == get_bottom_right([a,b], ctx)
check_a_small = is_small(a, ctx)
check_a_dark = is_dark(a, ctx)
check_b_top_left = b == get_top_left([a,b], ctx)
check_b_medium = is_medium_size(b, ctx)
check_b_grey = is_grey(b, ctx)
```
95
Understand: 8.834974712000985 seconds


from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations


def get_ctx():
    ctx = np.array([[-0.295, 0.16, 0.6666666666666666, 0.6666666666666666], [-0.18, 0.435, 0.3333333333333333, 0.9866666666666667], [0.34, -0.19, -0.6666666666666666, 0.32], [0.4, -0.445, 1.0, 0.3333333333333333], [-0.65, 0.215, 0.3333333333333333, 0.06666666666666667], [0.6, 0.025, 0.0, 0.9466666666666667], [0.65, 0.575, 0.0, -0.21333333333333335]])
    return ctx

idxs = list(range(7))

# New.
ctx = get_ctx()
state = None


# Turn 0
# Them: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is medium-sized and grey?
def turn(state):
    results = set()
    orderedresults = []
    parents = []
    for config in getsets(idxs, 2):
        for a,b, in permutations(config):
            for _ in [0]:
                check_ab_pair = all_close([a,b], ctx)
                check_a_bottom_right = a == get_bottom_right([a,b], ctx)
                check_a_small = is_small(a, ctx)
                check_a_dark = is_dark(a, ctx)
                check_b_top_left = b == get_top_left([a,b], ctx)
                check_b_medium = is_medium_size(b, ctx)
                check_b_grey = is_grey(b, ctx)
                
                if (
                    True 
                    and check_ab_pair
                    and check_a_bottom_right
                    and check_a_small
                    and check_a_dark
                    and check_b_top_left
                    and check_b_medium
                    and check_b_grey
                    
                ):
                    dots = frozenset([a,b,])
                    if dots not in results:
                        results.add(dots)
                        orderedresults.append(dots)
                        parents.append(config)
    return sort_state(orderedresults, parents, ctx, select=False)
state = turn(state)


if state is not None:
    print([tuple(x) for x in state])
else:
    print("None")
[]
Read after code: 10.857327092002379 seconds
Do you see a pair of dots, where the bottom dot is medium-sized and light and the top dot is medium-sized and grey
IN READ
None
NO UPDATED BELIEF none
Turn 0: Got a triangle of 3 light grey dots by itself.
Type: New question.
New dots: 3
End
Turn 1: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
New dots: 0
End
Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
New dots: 2
End
Turn 3: No.
Type: No op.
New dots: 0
End
Turn 4: What about a large medium grey dot near the center?
Type: New question.
New dots: 1
End
Turn 5: Is there a smaller black one next to it?
Type: Follow up question, new dots.
New dots: 1
End
Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
New dots: 3
End
Turn 7: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
New dots: 0
End
Turn 8: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
New dots: 0
End
Turn 9: Yes, let's select the large one. <selection>.
Type: Select a dot.
New dots: 0
End
Turn 0: Do you see a large black dot on the bottom left?
Type: New question.
New dots: 1
End
Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
New dots: 3
End
Turn 2: Select the largest one.
Type: Select a dot.
New dots: 0
End
Turn 3: Yes.
Type: No op.
New dots: 0
End
Turn 4: Okay. <selection>.
Type: No op.
New dots: 0
End


Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is medium-sized and grey
Type: New question.
New dots: 2
End
Turn 1: No, do you see a pair of dots where the bottom dot is medium-sized and light, and the top dot is medium-sized and grey?
Type:
Classify: 2.1606234690043493 seconds
New question.
New dots: 2
Translate the text into code.
These are the available functions.
```
from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations

```
`idxs = list(range(7))` corresponds to the available dots.

Here are some examples.

Text: Got a triangle of 3 light grey dots by itself.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_triangle = is_triangle([a,b,c], ctx)
check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
```

Text: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_right = a == get_right([a,b,c], ctx)
check_a_largest = a == largest([a,b,c], ctx)
check_b_tiny = is_small(b, ctx)
check_b_grey = is_grey(b, ctx)
check_b_top = b == get_top([a,b,c], ctx)
```

Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
Dots: a,b
Save dots: a,b
Code:
```
check_ab_pair = all_close([a,b], ctx)
check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
check_b_right_a = is_right(b, a, ctx)
check_b_above_a = is_above(b, a, ctx)
check_ab_same_size = same_size([a,b], ctx)
```

Text: No.
Type: No op.
Code:
```
pass
```

Text: What about a large medium grey dot near the center?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
check_a_grey = is_grey(a, ctx)
check_a_center = is_middle(a, None, ctx)
```

Text: Is there a smaller black one next to it?
Type: Follow up question, new dots.
Previous dots: a,
New dots: b,
Save dots: a,b
Code:
```
check_b_smaller_a = is_smaller(b, a, ctx)
check_b_dark = is_dark(b, ctx)
check_b_next_to_a = all_close([a,b], ctx)
```

Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_line = is_line([a,b,c], ctx)
check_a_top_left = a == get_top_left([a,b,c], ctx)
check_a_light = is_light(a, ctx)
check_b_middle = is_middle(b, [a,b,c], ctx)
check_b_grey = is_grey(y, ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
check_c_dark = is_dark(c, ctx)
```

Text: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_top = a == get_top([a,b,c], ctx)
check_b_middle = b == get_middle([a,b,c], ctx)
check_ab_close = all_close([a, b], ctx)
check_b_darker_a = is_darker(b, a, ctx)
```

Text: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_c_smallest = c == smallest([a,b,c], ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
```

Text: Yes, let's select the large one. <selection>.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
```

Text: Do you see a large black dot on the bottom left?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, cta)
check_a_dark = is_dark(a, cta)
check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
```

Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_close = all_close([a,b,c], ctx)
check_a_large = is_large(a, ctx)
check_c_dark = is_dark(c, ctx)
check_b_smaller_a = is_smaller(b, a, ctx)
check_c_smaller_a = is_smaller(c, a, ctx)
check_b_lighter_a = is_lighter(b, a, ctx)
check_c_lighter_a = is_lighter(c, a, ctx)
check_bc_same_size = same_size([b,c], ctx)
check_bc_same_color = same_color([b,c], ctx)
```

Text: Select the largest one.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_largest = a == get_largest([a,b,c], ctx)
```

Text: Yes.
Type: No op.
Code:
```
pass
```

Text: Okay. <selection>.
Type: No op.
Code:
```
pass
```

Text: No, do you see a pair of dots where the bottom dot is medium-sized and light, and the top dot is medium-sized and grey?
Type: New question.
Dots: a,b,
Save dots:
a,b
Code:
```
check_ab_pair = all_close([a,b], ctx)
check_a_bottom = a == get_bottom([a,b], ctx)
check_a_medium_size = is_medium_size(a, ctx)
check_a_light = is_light(a, ctx)
check_b_top = b == get_top([a,b], ctx)
check_b_medium_size = is_medium_size(b, ctx)
check_b_grey = is_grey(b, ctx)
```
94
Understand: 11.642403034005838 seconds


from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations


def get_ctx():
    ctx = np.array([[0.42, -0.265, -0.3333333333333333, 0.8933333333333333], [-0.43, 0.135, -0.6666666666666666, 0.32], [-0.37, -0.12, 1.0, 0.3333333333333333], [0.305, -0.9, -0.3333333333333333, -0.92], [-0.475, -0.665, 0.0, 0.25333333333333335], [-0.17, 0.35, 0.0, 0.9466666666666667], [-0.12, 0.9, 0.0, -0.21333333333333335]])
    return ctx

idxs = list(range(7))

# New.
ctx = get_ctx()
state = None


# Turn 0
# Them: No, do you see a pair of dots where the bottom dot is medium-sized and light, and the top dot is medium-sized and grey?
def turn(state):
    results = set()
    orderedresults = []
    parents = []
    for config in getsets(idxs, 2):
        for a,b, in permutations(config):
            for _ in [0]:
                check_ab_pair = all_close([a,b], ctx)
                check_a_bottom = a == get_bottom([a,b], ctx)
                check_a_medium_size = is_medium_size(a, ctx)
                check_a_light = is_light(a, ctx)
                check_b_top = b == get_top([a,b], ctx)
                check_b_medium_size = is_medium_size(b, ctx)
                check_b_grey = is_grey(b, ctx)
                
                if (
                    True 
                    and check_ab_pair
                    and check_a_bottom
                    and check_a_medium_size
                    and check_a_light
                    and check_b_top
                    and check_b_medium_size
                    and check_b_grey
                    
                ):
                    dots = frozenset([a,b,])
                    if dots not in results:
                        results.add(dots)
                        orderedresults.append(dots)
                        parents.append(config)
    return sort_state(orderedresults, parents, ctx, select=False)
state = turn(state)


if state is not None:
    print([tuple(x) for x in state])
else:
    print("None")
[(5, 6)]
Read after code: 13.85570088300301 seconds
UPDATED BELIEF we see
Followup config inclusion prob: 0.7603649749364197
IN READ
Yes
UPDATED BELIEF confirmed
Turn 0: Got a triangle of 3 light grey dots by itself.
Type: New question.
New dots: 3
End
Turn 1: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
New dots: 0
End
Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
New dots: 2
End
Turn 3: No.
Type: No op.
New dots: 0
End
Turn 4: What about a large medium grey dot near the center?
Type: New question.
New dots: 1
End
Turn 5: Is there a smaller black one next to it?
Type: Follow up question, new dots.
New dots: 1
End
Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
New dots: 3
End
Turn 7: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
New dots: 0
End
Turn 8: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
New dots: 0
End
Turn 9: Yes, let's select the large one. <selection>.
Type: Select a dot.
New dots: 0
End
Turn 0: Do you see a large black dot on the bottom left?
Type: New question.
New dots: 1
End
Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
New dots: 3
End
Turn 2: Select the largest one.
Type: Select a dot.
New dots: 0
End
Turn 3: Yes.
Type: No op.
New dots: 0
End
Turn 4: Okay. <selection>.
Type: No op.
New dots: 0
End


Turn 0: Do you see a pair of dots, where the bottom right dot is small-sized and dark and the top left dot is medium-sized and grey <eos>
Type: New question.
New dots: 0
End
Turn 1: No. Do you see a pair of dots, where the bottom dot is medium-sized and light and the top dot is medium-sized and grey
Type: New question.
New dots: 2
End
Turn 2: Yes, let's select the medium size and grey color one. <selection>.
Type:
Classify: 2.5337561039996217 seconds
Select a dot.
New dots: 0
Translate the text into code.
These are the available functions.
```
from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations

```
`idxs = list(range(7))` corresponds to the available dots.

Here are some examples.

Text: Got a triangle of 3 light grey dots by itself.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_triangle = is_triangle([a,b,c], ctx)
check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
```

Text: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_right = a == get_right([a,b,c], ctx)
check_a_largest = a == largest([a,b,c], ctx)
check_b_tiny = is_small(b, ctx)
check_b_grey = is_grey(b, ctx)
check_b_top = b == get_top([a,b,c], ctx)
```

Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
Dots: a,b
Save dots: a,b
Code:
```
check_ab_pair = all_close([a,b], ctx)
check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
check_b_right_a = is_right(b, a, ctx)
check_b_above_a = is_above(b, a, ctx)
check_ab_same_size = same_size([a,b], ctx)
```

Text: No.
Type: No op.
Code:
```
pass
```

Text: What about a large medium grey dot near the center?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
check_a_grey = is_grey(a, ctx)
check_a_center = is_middle(a, None, ctx)
```

Text: Is there a smaller black one next to it?
Type: Follow up question, new dots.
Previous dots: a,
New dots: b,
Save dots: a,b
Code:
```
check_b_smaller_a = is_smaller(b, a, ctx)
check_b_dark = is_dark(b, ctx)
check_b_next_to_a = all_close([a,b], ctx)
```

Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_line = is_line([a,b,c], ctx)
check_a_top_left = a == get_top_left([a,b,c], ctx)
check_a_light = is_light(a, ctx)
check_b_middle = is_middle(b, [a,b,c], ctx)
check_b_grey = is_grey(y, ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
check_c_dark = is_dark(c, ctx)
```

Text: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_top = a == get_top([a,b,c], ctx)
check_b_middle = b == get_middle([a,b,c], ctx)
check_ab_close = all_close([a, b], ctx)
check_b_darker_a = is_darker(b, a, ctx)
```

Text: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_c_smallest = c == smallest([a,b,c], ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
```

Text: Yes, let's select the large one. <selection>.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
```

Text: Do you see a large black dot on the bottom left?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, cta)
check_a_dark = is_dark(a, cta)
check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
```

Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_close = all_close([a,b,c], ctx)
check_a_large = is_large(a, ctx)
check_c_dark = is_dark(c, ctx)
check_b_smaller_a = is_smaller(b, a, ctx)
check_c_smaller_a = is_smaller(c, a, ctx)
check_b_lighter_a = is_lighter(b, a, ctx)
check_c_lighter_a = is_lighter(c, a, ctx)
check_bc_same_size = same_size([b,c], ctx)
check_bc_same_color = same_color([b,c], ctx)
```

Text: Select the largest one.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_largest = a == get_largest([a,b,c], ctx)
```

Text: Yes.
Type: No op.
Code:
```
pass
```

Text: Okay. <selection>.
Type: No op.
Code:
```
pass
```

Text: Yes, let's select the medium size and grey color one. <selection>.
Type: Select a dot.
Previous dots: a,b,
Save dots:
b
Code:
```
check_b_medium_size = is_medium_size(b, ctx)
check_b_grey = is_grey(b, ctx)
```
31
Understand: 4.393717702005233 seconds


from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations


def get_ctx():
    ctx = np.array([[-0.295, 0.16, 0.6666666666666666, 0.6666666666666666], [-0.18, 0.435, 0.3333333333333333, 0.9866666666666667], [0.34, -0.19, -0.6666666666666666, 0.32], [0.4, -0.445, 1.0, 0.3333333333333333], [-0.65, 0.215, 0.3333333333333333, 0.06666666666666667], [0.6, 0.025, 0.0, 0.9466666666666667], [0.65, 0.575, 0.0, -0.21333333333333335]])
    return ctx

idxs = list(range(7))

# New.
ctx = get_ctx()
state = [(5, 6)]


# Turn 0
# Them: Yes, let's select the medium size and grey color one. <selection>.
def turn(state):
    results = set()
    orderedresults = []
    parents = []
    for config in state:
        for a,b, in permutations(config):
            for _ in [0]:
                check_b_medium_size = is_medium_size(b, ctx)
                check_b_grey = is_grey(b, ctx)
                
                if (
                    True 
                    and check_b_medium_size
                    and check_b_grey
                    
                ):
                    dots = frozenset([b])
                    if dots not in results:
                        results.add(dots)
                        orderedresults.append(dots)
                        parents.append(config)
    return sort_state(orderedresults, parents, ctx, select=True)
state = turn(state)


if state is not None:
    print([tuple(x) for x in state])
else:
    print("None")
[(6,)]
Read after code: 6.961510537999857 seconds
UPDATED BELIEF we see
Do you see a pair of dots, where the bottom right dot is medium-sized and dark and the top left dot is small-sized and grey
IN READ
None
Turn 0: Got a triangle of 3 light grey dots by itself.
Type: New question.
New dots: 3
End
Turn 1: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
New dots: 0
End
Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
New dots: 2
End
Turn 3: No.
Type: No op.
New dots: 0
End
Turn 4: What about a large medium grey dot near the center?
Type: New question.
New dots: 1
End
Turn 5: Is there a smaller black one next to it?
Type: Follow up question, new dots.
New dots: 1
End
Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
New dots: 3
End
Turn 7: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
New dots: 0
End
Turn 8: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
New dots: 0
End
Turn 9: Yes, let's select the large one. <selection>.
Type: Select a dot.
New dots: 0
End
Turn 0: Do you see a large black dot on the bottom left?
Type: New question.
New dots: 1
End
Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
New dots: 3
End
Turn 2: Select the largest one.
Type: Select a dot.
New dots: 0
End
Turn 3: Yes.
Type: No op.
New dots: 0
End
Turn 4: Okay. <selection>.
Type: No op.
New dots: 0
End


Turn 0: Do you see a pair of dots, where the bottom right dot is medium-sized and dark and the top left dot is small-sized and grey?
Type:
Classify: 1.849598098997376 seconds
New question.
New dots: 2
Translate the text into code.
These are the available functions.
```
from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations

```
`idxs = list(range(7))` corresponds to the available dots.

Here are some examples.

Text: Got a triangle of 3 light grey dots by itself.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_triangle = is_triangle([a,b,c], ctx)
check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
```

Text: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_right = a == get_right([a,b,c], ctx)
check_a_largest = a == largest([a,b,c], ctx)
check_b_tiny = is_small(b, ctx)
check_b_grey = is_grey(b, ctx)
check_b_top = b == get_top([a,b,c], ctx)
```

Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
Dots: a,b
Save dots: a,b
Code:
```
check_ab_pair = all_close([a,b], ctx)
check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
check_b_right_a = is_right(b, a, ctx)
check_b_above_a = is_above(b, a, ctx)
check_ab_same_size = same_size([a,b], ctx)
```

Text: No.
Type: No op.
Code:
```
pass
```

Text: What about a large medium grey dot near the center?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
check_a_grey = is_grey(a, ctx)
check_a_center = is_middle(a, None, ctx)
```

Text: Is there a smaller black one next to it?
Type: Follow up question, new dots.
Previous dots: a,
New dots: b,
Save dots: a,b
Code:
```
check_b_smaller_a = is_smaller(b, a, ctx)
check_b_dark = is_dark(b, ctx)
check_b_next_to_a = all_close([a,b], ctx)
```

Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_line = is_line([a,b,c], ctx)
check_a_top_left = a == get_top_left([a,b,c], ctx)
check_a_light = is_light(a, ctx)
check_b_middle = is_middle(b, [a,b,c], ctx)
check_b_grey = is_grey(y, ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
check_c_dark = is_dark(c, ctx)
```

Text: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_top = a == get_top([a,b,c], ctx)
check_b_middle = b == get_middle([a,b,c], ctx)
check_ab_close = all_close([a, b], ctx)
check_b_darker_a = is_darker(b, a, ctx)
```

Text: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_c_smallest = c == smallest([a,b,c], ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
```

Text: Yes, let's select the large one. <selection>.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
```

Text: Do you see a large black dot on the bottom left?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, cta)
check_a_dark = is_dark(a, cta)
check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
```

Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_close = all_close([a,b,c], ctx)
check_a_large = is_large(a, ctx)
check_c_dark = is_dark(c, ctx)
check_b_smaller_a = is_smaller(b, a, ctx)
check_c_smaller_a = is_smaller(c, a, ctx)
check_b_lighter_a = is_lighter(b, a, ctx)
check_c_lighter_a = is_lighter(c, a, ctx)
check_bc_same_size = same_size([b,c], ctx)
check_bc_same_color = same_color([b,c], ctx)
```

Text: Select the largest one.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_largest = a == get_largest([a,b,c], ctx)
```

Text: Yes.
Type: No op.
Code:
```
pass
```

Text: Okay. <selection>.
Type: No op.
Code:
```
pass
```

Text: Do you see a pair of dots, where the bottom right dot is medium-sized and dark and the top left dot is small-sized and grey?
Type: New question.
Dots: a,b,
Save dots:
a,b
Code:
```
check_ab_pair = all_close([a,b], ctx)
check_a_bottom_right = a == get_bottom_right([a,b], ctx)
check_a_medium = is_medium_size(a, ctx)
check_a_dark = is_dark(a, ctx)
check_b_top_left = b == get_top_left([a,b], ctx)
check_b_small = is_small(b, ctx)
check_b_grey = is_grey(b, ctx)
```
95
Understand: 9.37442076199659 seconds


from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations


def get_ctx():
    ctx = np.array([[-0.545, 0.56, -1.0, 1.0], [0.385, 0.785, -0.6666666666666666, 0.8266666666666667], [-0.285, 0.175, -1.0, 0.29333333333333333], [-0.645, -0.49, -1.0, 0.92], [0.275, 0.005, -1.0, -0.08], [0.19, -0.165, 0.0, 0.5466666666666666], [-0.435, -0.415, 0.3333333333333333, -0.08]])
    return ctx

idxs = list(range(7))

# New.
ctx = get_ctx()
state = None


# Turn 0
# Them: Do you see a pair of dots, where the bottom right dot is medium-sized and dark and the top left dot is small-sized and grey?
def turn(state):
    results = set()
    orderedresults = []
    parents = []
    for config in getsets(idxs, 2):
        for a,b, in permutations(config):
            for _ in [0]:
                check_ab_pair = all_close([a,b], ctx)
                check_a_bottom_right = a == get_bottom_right([a,b], ctx)
                check_a_medium = is_medium_size(a, ctx)
                check_a_dark = is_dark(a, ctx)
                check_b_top_left = b == get_top_left([a,b], ctx)
                check_b_small = is_small(b, ctx)
                check_b_grey = is_grey(b, ctx)
                
                if (
                    True 
                    and check_ab_pair
                    and check_a_bottom_right
                    and check_a_medium
                    and check_a_dark
                    and check_b_top_left
                    and check_b_small
                    and check_b_grey
                    
                ):
                    dots = frozenset([a,b,])
                    if dots not in results:
                        results.add(dots)
                        orderedresults.append(dots)
                        parents.append(config)
    return sort_state(orderedresults, parents, ctx, select=False)
state = turn(state)


if state is not None:
    print([tuple(x) for x in state])
else:
    print("None")
[]
Read after code: 11.250105050996353 seconds
Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and light
IN READ
None
NO UPDATED BELIEF none
Turn 0: Got a triangle of 3 light grey dots by itself.
Type: New question.
New dots: 3
End
Turn 1: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
New dots: 0
End
Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
New dots: 2
End
Turn 3: No.
Type: No op.
New dots: 0
End
Turn 4: What about a large medium grey dot near the center?
Type: New question.
New dots: 1
End
Turn 5: Is there a smaller black one next to it?
Type: Follow up question, new dots.
New dots: 1
End
Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
New dots: 3
End
Turn 7: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
New dots: 0
End
Turn 8: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
New dots: 0
End
Turn 9: Yes, let's select the large one. <selection>.
Type: Select a dot.
New dots: 0
End
Turn 0: Do you see a large black dot on the bottom left?
Type: New question.
New dots: 1
End
Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
New dots: 3
End
Turn 2: Select the largest one.
Type: Select a dot.
New dots: 0
End
Turn 3: Yes.
Type: No op.
New dots: 0
End
Turn 4: Okay. <selection>.
Type: No op.
New dots: 0
End


Turn 0: Do you see a pair of dots, where the bottom right dot is medium-sized and dark and the top left dot is small-sized and grey
Type: New question.
New dots: 2
End
Turn 1: No, do you see a pair of dots where the top right dot is small-sized and light and the bottom left dot is small-sized and light?
Type:
Classify: 1.8409079449993442 seconds
New question.
New dots: 2
Translate the text into code.
These are the available functions.
```
from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations

```
`idxs = list(range(7))` corresponds to the available dots.

Here are some examples.

Text: Got a triangle of 3 light grey dots by itself.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_triangle = is_triangle([a,b,c], ctx)
check_abc_light = all([is_light(dot, ctx) for dot in [a,b,c]])
check_abc_alone = all([not all_close([a,b,c,dot], ctx) for dot in idxs if dot not in [a,b,c]])
```

Text: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_right = a == get_right([a,b,c], ctx)
check_a_largest = a == largest([a,b,c], ctx)
check_b_tiny = is_small(b, ctx)
check_b_grey = is_grey(b, ctx)
check_b_top = b == get_top([a,b,c], ctx)
```

Text: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
Dots: a,b
Save dots: a,b
Code:
```
check_ab_pair = all_close([a,b], ctx)
check_ab_dark = is_dark(a, ctx) and is_dark(b, ctx)
check_b_right_a = is_right(b, a, ctx)
check_b_above_a = is_above(b, a, ctx)
check_ab_same_size = same_size([a,b], ctx)
```

Text: No.
Type: No op.
Code:
```
pass
```

Text: What about a large medium grey dot near the center?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
check_a_grey = is_grey(a, ctx)
check_a_center = is_middle(a, None, ctx)
```

Text: Is there a smaller black one next to it?
Type: Follow up question, new dots.
Previous dots: a,
New dots: b,
Save dots: a,b
Code:
```
check_b_smaller_a = is_smaller(b, a, ctx)
check_b_dark = is_dark(b, ctx)
check_b_next_to_a = all_close([a,b], ctx)
```

Text: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_line = is_line([a,b,c], ctx)
check_a_top_left = a == get_top_left([a,b,c], ctx)
check_a_light = is_light(a, ctx)
check_b_middle = is_middle(b, [a,b,c], ctx)
check_b_grey = is_grey(y, ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
check_c_dark = is_dark(c, ctx)
```

Text: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_a_top = a == get_top([a,b,c], ctx)
check_b_middle = b == get_middle([a,b,c], ctx)
check_ab_close = all_close([a, b], ctx)
check_b_darker_a = is_darker(b, a, ctx)
```

Text: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
Previous dots: a,b,c
Save dots: a,b,c
Code:
```
check_c_smallest = c == smallest([a,b,c], ctx)
check_c_bottom_right = c == get_bottom_right([a,b,c], ctx)
```

Text: Yes, let's select the large one. <selection>.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_large = is_large(a, ctx)
```

Text: Do you see a large black dot on the bottom left?
Type: New question.
Dots: a
Save dots: a
Code:
```
check_a_large = is_large(a, cta)
check_a_dark = is_dark(a, cta)
check_a_below_left = is_below(a, None, cta) and is_left(a, None, cta)
```

Text: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
Dots: a,b,c
Save dots: a,b,c
Code:
```
check_abc_close = all_close([a,b,c], ctx)
check_a_large = is_large(a, ctx)
check_c_dark = is_dark(c, ctx)
check_b_smaller_a = is_smaller(b, a, ctx)
check_c_smaller_a = is_smaller(c, a, ctx)
check_b_lighter_a = is_lighter(b, a, ctx)
check_c_lighter_a = is_lighter(c, a, ctx)
check_bc_same_size = same_size([b,c], ctx)
check_bc_same_color = same_color([b,c], ctx)
```

Text: Select the largest one.
Type: Select a dot.
Previous dots: a,b,c
New dots: _
Save dots: a
Code:
```
check_a_largest = a == get_largest([a,b,c], ctx)
```

Text: Yes.
Type: No op.
Code:
```
pass
```

Text: Okay. <selection>.
Type: No op.
Code:
```
pass
```

Text: No, do you see a pair of dots where the top right dot is small-sized and light and the bottom left dot is small-sized and light?
Type: New question.
Dots: a,b,
Save dots:
a,b
Code:
```
check_ab_pair = all_close([a,b], ctx)
check_a_top_right = a == get_top_right([a,b], ctx)
check_a_small = is_small(a, ctx)
check_a_light = is_light(a, ctx)
check_b_bottom_left = b == get_bottom_left([a,b], ctx)
check_b_small = is_small(b, ctx)
check_b_light = is_light(b, ctx)
```
92
Understand: 13.902615811995929 seconds


from oc.fns.context import get_ctx
from oc.fns.shapes import is_triangle, is_line, is_square
from oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle
from oc.fns.spatial import get_top, get_bottom, get_right, get_left
from oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left
from oc.fns.spatial import get_middle
from oc.fns.spatial import get_distance, get_minimum_radius
from oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter
from oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller
from oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets
from oc.fns.lists import add
from oc.fns.lists import sort_state
import numpy as np
from functools import partial
from itertools import permutations


def get_ctx():
    ctx = np.array([[0.55, -0.45, 0.3333333333333333, -0.92], [-0.725, -0.445, -0.6666666666666666, 0.06666666666666667], [0.08, 0.94, -1.0, 0.29333333333333333], [-0.28, 0.28, -1.0, 0.92], [0.555, 0.6, 0.0, 0.5466666666666666], [-0.77, 0.37, 0.6666666666666666, -0.28], [-0.07, 0.355, 0.3333333333333333, -0.08]])
    return ctx

idxs = list(range(7))

# New.
ctx = get_ctx()
state = None


# Turn 0
# Them: No, do you see a pair of dots where the top right dot is small-sized and light and the bottom left dot is small-sized and light?
def turn(state):
    results = set()
    orderedresults = []
    parents = []
    for config in getsets(idxs, 2):
        for a,b, in permutations(config):
            for _ in [0]:
                check_ab_pair = all_close([a,b], ctx)
                check_a_top_right = a == get_top_right([a,b], ctx)
                check_a_small = is_small(a, ctx)
                check_a_light = is_light(a, ctx)
                check_b_bottom_left = b == get_bottom_left([a,b], ctx)
                check_b_small = is_small(b, ctx)
                check_b_light = is_light(b, ctx)
                
                if (
                    True 
                    and check_ab_pair
                    and check_a_top_right
                    and check_a_small
                    and check_a_light
                    and check_b_bottom_left
                    and check_b_small
                    and check_b_light
                    
                ):
                    dots = frozenset([a,b,])
                    if dots not in results:
                        results.add(dots)
                        orderedresults.append(dots)
                        parents.append(config)
    return sort_state(orderedresults, parents, ctx, select=False)
state = turn(state)


if state is not None:
    print([tuple(x) for x in state])
else:
    print("None")
[]
Read after code: 15.800971545999346 seconds
Do you see a pair of dots, where the right dot is medium-sized and dark and the left dot is small-sized and grey
IN READ
None
NO UPDATED BELIEF none
Turn 0: Got a triangle of 3 light grey dots by itself.
Type: New question.
New dots: 3
End
Turn 1: Could be. One on right is largest with a tiny gray on top??
Type: Follow up question, no new dots.
New dots: 0
End
Turn 2: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.
Type: New question.
New dots: 2
End
Turn 3: No.
Type: No op.
New dots: 0
End
Turn 4: What about a large medium grey dot near the center?
Type: New question.
New dots: 1
End
Turn 5: Is there a smaller black one next to it?
Type: Follow up question, new dots.
New dots: 1
End
Turn 6: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?
Type: New question.
New dots: 3
End
Turn 7: Yes. Is the top one close to the middle darker one?
Type: Follow up question, no new dots.
New dots: 0
End
Turn 8: Yes. And the smallest is on the bottom right.
Type: Follow up question, no new dots.
New dots: 0
End
Turn 9: Yes, let's select the large one. <selection>.
Type: Select a dot.
New dots: 0
End
Turn 0: Do you see a large black dot on the bottom left?
Type: New question.
New dots: 1
End
Turn 1: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.
Type: New question.
New dots: 3
End
Turn 2: Select the largest one.
Type: Select a dot.
New dots: 0
End
Turn 3: Yes.
Type: No op.
New dots: 0
End
Turn 4: Okay. <selection>.
Type: No op.
New dots: 0
End


Turn 0: Do you see a pair of dots, where the bottom right dot is medium-sized and dark and the top left dot is small-sized and grey <eos>
Type: New question.
New dots: 0
End
Turn 1: No. Do you see a pair of dots, where the top right dot is small-sized and light and the bottom left dot is small-sized and light
Type: New question.
New dots: 2
End
Turn 2: No, do you see a pair of dots where the right dot is medium-sized and dark and the left dot is small-sized and grey?
Type:
Classify: 1.1462062450009398 seconds
New question.
New dots: 2
