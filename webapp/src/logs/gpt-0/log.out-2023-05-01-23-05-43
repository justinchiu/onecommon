INFO:web:::1 - - [2023-05-01 23:06:40] "GET /dialogue HTTP/1.1" 308 428 0.000752
INFO:web:::1 - - [2023-05-01 23:06:40] "GET /dialogue/ HTTP/1.1" 302 532 0.000634
DEBUG:web:Got updated status waiting for user U_a3c40e4d5f14492099cbeb32e48a4ffb
INFO:web:::1 - - [2023-05-01 23:06:40] "GET /dialogue/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 2897 0.009811
INFO:web:::1 - - [2023-05-01 23:06:41] "GET /dialogue/static/css/bootstrap.min.css HTTP/1.1" 200 106297 0.008301
INFO:web:::1 - - [2023-05-01 23:06:41] "GET /dialogue/static/img/handshake.jpg HTTP/1.1" 200 22253 0.002388
INFO:web:::1 - - [2023-05-01 23:06:41] "GET /dialogue/_connect/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 130 0.005830
INFO:web:::1 - - [2023-05-01 23:06:41] "GET /favicon.ico HTTP/1.1" 404 331 0.001005
DEBUG:web:Paired user U_a3c40e4d5f14492099cbeb32e48a4ffb with bot of type gpt in chat with ID C_27d822bf0c5348d4a4fc4c8c3d28cb74 and scenario S_nzq44khKcwucsD80
INFO:web:::1 - - [2023-05-01 23:06:43] "GET /dialogue/_check_status_change/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb&assumed_status=waiting HTTP/1.1" 200 137 1.524788
INFO:web:::1 - - [2023-05-01 23:06:43] "GET /dialogue/_check_status_change/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb&assumed_status=waiting HTTP/1.1" 200 136 0.002225
INFO:web:::1 - - [2023-05-01 23:06:43] "GET /dialogue/_disconnect/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 130 0.007147
DEBUG:web:Got updated status chat for user U_a3c40e4d5f14492099cbeb32e48a4ffb
INFO:web:::1 - - [2023-05-01 23:06:43] "GET /dialogue/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 20741 0.008721
INFO:web:::1 - - [2023-05-01 23:06:43] "GET /dialogue/static/img/sample_colored.png HTTP/1.1" 200 26541 0.002377
INFO:web:::1 - - [2023-05-01 23:06:43] "GET /dialogue/static/img/handshake.jpg HTTP/1.1" 304 187 0.000655
INFO:web:::1 - - [2023-05-01 23:06:43] "GET /dialogue/_connect/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 130 0.007313
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-3.5-turbo", "max_tokens": 128, "temperature": 0, "stop": ["\\n"], "messages": [{"role": "user", "content": "Text:\\nyes ! lightest on all the way to the right ? if so click that one ! <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nYes! If you want the lightest, click the one all the way to the right? <selection>.\\n\\nText:\\nlarge black next to tint light\\nReformat the text. Do not change the words.\\nAnswer:\\nLarge black next to tiny light.\\n\\nText:\\ni have a light grey small dot next to a medium grey medium dot\\nReformat the text. Do not change the words.\\nAnswer:\\nI have a light grey small dot next to a medium grey medium dot.\\n\\nText:\\ntwo small dots almost identical in size close together in diagonal line ?\\nReformat the text. Do not change the words.\\nAnswer:\\nTwo small dots, almost identical in size, close together in a diagonal line?\\n\\nText:\\nokay <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nOkay. <selection>.\\n\\nText:\\nDo you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and grey\\nReformat the text. Do not change the words.\\nAnswer:\\n"}]}' message='Post details'
DEBUG:urllib3.util.retry:Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): api.openai.com:443
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2215 request_id=0d49998f8100a179bd2d1e20c6ca8aa1 response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-4", "max_tokens": 1024, "temperature": 0, "stop": ["# End.", "# New."], "messages": [{"role": "user", "content": "from oc.fns.context import get_ctx\\nfrom oc.fns.shapes import is_triangle, is_line, is_square\\nfrom oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle\\nfrom oc.fns.spatial import get_top, get_bottom, get_right, get_left\\nfrom oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left\\nfrom oc.fns.spatial import get_middle\\nfrom oc.fns.spatial import get_distance, get_minimum_radius\\nfrom oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter\\nfrom oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller\\nfrom oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets\\nfrom oc.fns.lists import add\\nfrom oc.fns.lists import sort_state\\nimport numpy as np\\nfrom functools import partial\\nfrom itertools import permutations\\n\\n\\nidxs = list(range(7))\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# Them: Got a triangle of 3 light grey dots by itself.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_triangle = is_triangle([x,y,z], ctx)\\n            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])\\n            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])\\n            if (\\n                check_xyz_triangle\\n                and check_xyz_light\\n                and check_xyz_alone\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Could be. One on right is largest with a tiny gray on top??\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_right = a == get_right([a,b,c], ctx)\\n            check_a_largest = a == largest([a,b,c], ctx)\\n            check_b_tiny = is_small(b, ctx)\\n            check_b_grey = is_grey(b, ctx)\\n            check_b_top = b == get_top([a,b,c], ctx)\\n            if (\\n                check_a_right\\n                and check_a_largest\\n                and check_b_tiny\\n                and check_b_grey\\n                and check_b_top\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x,y], ctx)\\n            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)\\n            check_y_right_x = is_right(y, x, ctx)\\n            check_y_above_x = is_above(y, x, ctx)\\n            check_xy_same_size = same_size([x,y], ctx)\\n            if (\\n                check_xy_pair\\n                and check_xy_dark\\n                and check_y_right_x\\n                and check_y_above_x\\n                and check_xy_same_size\\n            ):\\n                dots = frozenset([x,y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: No.\\ndef turn(state):\\n    # New question.\\n    return []\\nstate = turn(state)\\n# End.\\n\\n# Them: What about a large medium grey dot near the center?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_grey = is_grey(x, ctx)\\n            check_x_center = is_middle(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_grey\\n                and check_x_center\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Is there a smaller black one next to it?\\ndef turn(state):\\n    # Follow up question, new dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a, in permutations(config):\\n            for x, in get1idxs(idxs, exclude=[a]):\\n                check_x_smaller_a = is_smaller(x, a, ctx)\\n                check_x_dark = is_dark(x, ctx)\\n                check_x_next_to_a = all_close([a,x], ctx)\\n                if(\\n                    check_x_smaller_a\\n                    and check_x_dark\\n                    and check_x_next_to_a\\n                ):\\n                    dots = frozenset([a,x])\\n                    if dots not in results:\\n                        results.add(dots)\\n                        orderedresults.append(dots)\\n                        parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_line = is_line([x,y,z], ctx)\\n            check_x_top_left = x == get_top_left([x, y, z], ctx)\\n            check_x_light = is_light(x, ctx)\\n            check_y_middle = is_middle(y, [x,y,z], ctx)\\n            check_y_grey = is_grey(y, ctx)\\n            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            if (\\n                check_xyz_line\\n                and check_x_top_left\\n                and check_x_light\\n                and check_y_middle\\n                and check_y_grey\\n                and check_z_bottom_right\\n                and check_z_dark\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes. Is the top one close to the middle darker one?\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_top = a == get_top([a,b,c], ctx)\\n            check_b_middle = b == get_middle([a,b,c], ctx)\\n            check_ab_close = all_close([a, b], ctx)\\n            check_b_darker_a = is_darker(b, a, ctx)\\n            if (\\n                check_a_top\\n                and check_b_middle\\n                and check_ab_close\\n                and check_b_darker_a\\n            ):\\n                results.add(frozenset([a,b,c]))\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. And the smallest is on the bottom right.\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_smallest = a == smallest([a,b,c], ctx)\\n            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)\\n            if (\\n                check_a_smallest\\n                and check_a_bottom_right\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes, let\'s select the large one. <selection>.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_large = is_large(a, ctx)\\n            check_b_not_large = not is_large(b, ctx)\\n            check_c_not_large = not is_large(c, ctx)\\n            if (\\n                check_a_large\\n                and check_b_not_large\\n                and check_c_not_large\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n\\n# New.\\nctx = get_ctx()\\nstate = []\\n\\n# You: Do you see a large black dot on the bottom left?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_dark = is_dark(x, ctx)\\n            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_dark\\n                and check_x_below_left\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n \\n# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_close = all_close([x,y,z], ctx)\\n            check_x_large = is_large(x, ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            check_y_smaller_x = is_smaller(y, x, ctx)\\n            check_z_smaller_x = is_smaller(z, x, ctx)\\n            check_y_lighter_x = is_lighter(y, x, ctx)\\n            check_z_lighter_x = is_lighter(z, x, ctx)\\n            check_yz_same_size = same_size([y,z], ctx)\\n            check_yz_same_color = same_color([y,z], ctx)\\n            if (\\n                check_xyz_close\\n                and check_x_large\\n                and check_z_dark\\n                and check_y_smaller_x\\n                and check_z_smaller_x\\n                and check_y_lighter_x\\n                and check_z_lighter_x\\n                and check_yz_same_size\\n                and check_yz_same_color\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Select the largest one.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_largest = a == get_largest([a,b,c], ctx)\\n            if (\\n                check_a_largest\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n \\n# Them: Okay.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n \\n# You: Okay. <selection>.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# You: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and grey?\\ndef "}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=33517 request_id=d4454e27ddf8a91d546cccb9445aca47 response_code=200
INFO:web:::1 - - [2023-05-01 23:07:22] "GET /dialogue/_join_chat/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 171 38.670938
INFO:web:::1 - - [2023-05-01 23:07:22] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 366 0.001833
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-3.5-turbo", "max_tokens": 128, "temperature": 0, "stop": ["\\n"], "messages": [{"role": "user", "content": "Text:\\nyes ! lightest on all the way to the right ? if so click that one ! <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nYes! If you want the lightest, click the one all the way to the right? <selection>.\\n\\nText:\\nlarge black next to tint light\\nReformat the text. Do not change the words.\\nAnswer:\\nLarge black next to tiny light.\\n\\nText:\\ni have a light grey small dot next to a medium grey medium dot\\nReformat the text. Do not change the words.\\nAnswer:\\nI have a light grey small dot next to a medium grey medium dot.\\n\\nText:\\ntwo small dots almost identical in size close together in diagonal line ?\\nReformat the text. Do not change the words.\\nAnswer:\\nTwo small dots, almost identical in size, close together in a diagonal line?\\n\\nText:\\nokay <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nOkay. <selection>.\\n\\nText:\\nyes <eos>\\nReformat the text. Do not change the words.\\nAnswer:\\n"}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=723 request_id=106c379e91d1f1a6794bb0e326969d24 response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-4", "max_tokens": 1024, "temperature": 0, "stop": ["# End.", "# New."], "messages": [{"role": "user", "content": "from oc.fns.context import get_ctx\\nfrom oc.fns.shapes import is_triangle, is_line, is_square\\nfrom oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle\\nfrom oc.fns.spatial import get_top, get_bottom, get_right, get_left\\nfrom oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left\\nfrom oc.fns.spatial import get_middle\\nfrom oc.fns.spatial import get_distance, get_minimum_radius\\nfrom oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter\\nfrom oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller\\nfrom oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets\\nfrom oc.fns.lists import add\\nfrom oc.fns.lists import sort_state\\nimport numpy as np\\nfrom functools import partial\\nfrom itertools import permutations\\n\\n\\nidxs = list(range(7))\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# Them: Got a triangle of 3 light grey dots by itself.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_triangle = is_triangle([x,y,z], ctx)\\n            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])\\n            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])\\n            if (\\n                check_xyz_triangle\\n                and check_xyz_light\\n                and check_xyz_alone\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Could be. One on right is largest with a tiny gray on top??\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_right = a == get_right([a,b,c], ctx)\\n            check_a_largest = a == largest([a,b,c], ctx)\\n            check_b_tiny = is_small(b, ctx)\\n            check_b_grey = is_grey(b, ctx)\\n            check_b_top = b == get_top([a,b,c], ctx)\\n            if (\\n                check_a_right\\n                and check_a_largest\\n                and check_b_tiny\\n                and check_b_grey\\n                and check_b_top\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x,y], ctx)\\n            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)\\n            check_y_right_x = is_right(y, x, ctx)\\n            check_y_above_x = is_above(y, x, ctx)\\n            check_xy_same_size = same_size([x,y], ctx)\\n            if (\\n                check_xy_pair\\n                and check_xy_dark\\n                and check_y_right_x\\n                and check_y_above_x\\n                and check_xy_same_size\\n            ):\\n                dots = frozenset([x,y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: No.\\ndef turn(state):\\n    # New question.\\n    return []\\nstate = turn(state)\\n# End.\\n\\n# Them: What about a large medium grey dot near the center?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_grey = is_grey(x, ctx)\\n            check_x_center = is_middle(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_grey\\n                and check_x_center\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Is there a smaller black one next to it?\\ndef turn(state):\\n    # Follow up question, new dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a, in permutations(config):\\n            for x, in get1idxs(idxs, exclude=[a]):\\n                check_x_smaller_a = is_smaller(x, a, ctx)\\n                check_x_dark = is_dark(x, ctx)\\n                check_x_next_to_a = all_close([a,x], ctx)\\n                if(\\n                    check_x_smaller_a\\n                    and check_x_dark\\n                    and check_x_next_to_a\\n                ):\\n                    dots = frozenset([a,x])\\n                    if dots not in results:\\n                        results.add(dots)\\n                        orderedresults.append(dots)\\n                        parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_line = is_line([x,y,z], ctx)\\n            check_x_top_left = x == get_top_left([x, y, z], ctx)\\n            check_x_light = is_light(x, ctx)\\n            check_y_middle = is_middle(y, [x,y,z], ctx)\\n            check_y_grey = is_grey(y, ctx)\\n            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            if (\\n                check_xyz_line\\n                and check_x_top_left\\n                and check_x_light\\n                and check_y_middle\\n                and check_y_grey\\n                and check_z_bottom_right\\n                and check_z_dark\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes. Is the top one close to the middle darker one?\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_top = a == get_top([a,b,c], ctx)\\n            check_b_middle = b == get_middle([a,b,c], ctx)\\n            check_ab_close = all_close([a, b], ctx)\\n            check_b_darker_a = is_darker(b, a, ctx)\\n            if (\\n                check_a_top\\n                and check_b_middle\\n                and check_ab_close\\n                and check_b_darker_a\\n            ):\\n                results.add(frozenset([a,b,c]))\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. And the smallest is on the bottom right.\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_smallest = a == smallest([a,b,c], ctx)\\n            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)\\n            if (\\n                check_a_smallest\\n                and check_a_bottom_right\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes, let\'s select the large one. <selection>.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_large = is_large(a, ctx)\\n            check_b_not_large = not is_large(b, ctx)\\n            check_c_not_large = not is_large(c, ctx)\\n            if (\\n                check_a_large\\n                and check_b_not_large\\n                and check_c_not_large\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n\\n# New.\\nctx = get_ctx()\\nstate = []\\n\\n# You: Do you see a large black dot on the bottom left?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_dark = is_dark(x, ctx)\\n            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_dark\\n                and check_x_below_left\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n \\n# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_close = all_close([x,y,z], ctx)\\n            check_x_large = is_large(x, ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            check_y_smaller_x = is_smaller(y, x, ctx)\\n            check_z_smaller_x = is_smaller(z, x, ctx)\\n            check_y_lighter_x = is_lighter(y, x, ctx)\\n            check_z_lighter_x = is_lighter(z, x, ctx)\\n            check_yz_same_size = same_size([y,z], ctx)\\n            check_yz_same_color = same_color([y,z], ctx)\\n            if (\\n                check_xyz_close\\n                and check_x_large\\n                and check_z_dark\\n                and check_y_smaller_x\\n                and check_z_smaller_x\\n                and check_y_lighter_x\\n                and check_z_lighter_x\\n                and check_yz_same_size\\n                and check_yz_same_color\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Select the largest one.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_largest = a == get_largest([a,b,c], ctx)\\n            if (\\n                check_a_largest\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n \\n# Them: Okay.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n \\n# You: Okay. <selection>.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# You: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and grey?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x, y], ctx)\\n            check_x_left = is_left(x, y, ctx)\\n            check_x_large = is_large(x, ctx)\\n            check_x_light = is_light(x, ctx)\\n            check_y_right = is_right(y, x, ctx)\\n            check_y_medium = is_medium_size(y, ctx)\\n            check_y_grey = is_grey(y, ctx)\\n            if (\\n                check_xy_pair\\n                and check_x_left\\n                and check_x_large\\n                and check_x_light\\n                and check_y_right\\n                and check_y_medium\\n                and check_y_grey\\n            ):\\n                dots = frozenset([x, y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. <eos>\\ndef "}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2821 request_id=746942f1a217192d6431d52d7f4f18fa response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-4", "max_tokens": 5, "temperature": 0, "stop": ["# End."], "messages": [{"role": "user", "content": "Them: Got a triangle of 3 light grey dots by itself.\\nDo they see what you asked about?\\nConfirmation: None\\n\\nThem: Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\nDo they see what you asked about?\\nConfirmation: None\\n\\nThem: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\nDo they see what you asked about?\\nConfirmation: No\\n\\nThem: Yes. Is the top one close to the middle darker one?\\nDo they see what you asked about?\\nConfirmation: Yes\\n\\nThem: No.\\nDo they see what you asked about?\\nConfirmation: No\\n\\nThem: Do you see a pair of dark dots, where the top left is larger and the bottom is smaller.\\nDo they see what you asked about?\\nConfirmation: None\\n\\nThem: Yes. <eos>\\nDo they see what you asked about?\\nConfirmation:"}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=893 request_id=4231da6069a698ff4e127def8cdb3983 response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-3.5-turbo", "max_tokens": 128, "temperature": 0, "stop": ["\\n"], "messages": [{"role": "user", "content": "Text:\\nyes ! lightest on all the way to the right ? if so click that one ! <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nYes! If you want the lightest, click the one all the way to the right? <selection>.\\n\\nText:\\nlarge black next to tint light\\nReformat the text. Do not change the words.\\nAnswer:\\nLarge black next to tiny light.\\n\\nText:\\ni have a light grey small dot next to a medium grey medium dot\\nReformat the text. Do not change the words.\\nAnswer:\\nI have a light grey small dot next to a medium grey medium dot.\\n\\nText:\\ntwo small dots almost identical in size close together in diagonal line ?\\nReformat the text. Do not change the words.\\nAnswer:\\nTwo small dots, almost identical in size, close together in a diagonal line?\\n\\nText:\\nokay <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nOkay. <selection>.\\n\\nText:\\nYes. Is there a large size and light color dot to the left and below those?\\nReformat the text. Do not change the words.\\nAnswer:\\n"}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1476 request_id=02205bde41d7ca3d6e9e50faeacf54ed response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-4", "max_tokens": 1024, "temperature": 0, "stop": ["# End.", "# New."], "messages": [{"role": "user", "content": "from oc.fns.context import get_ctx\\nfrom oc.fns.shapes import is_triangle, is_line, is_square\\nfrom oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle\\nfrom oc.fns.spatial import get_top, get_bottom, get_right, get_left\\nfrom oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left\\nfrom oc.fns.spatial import get_middle\\nfrom oc.fns.spatial import get_distance, get_minimum_radius\\nfrom oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter\\nfrom oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller\\nfrom oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets\\nfrom oc.fns.lists import add\\nfrom oc.fns.lists import sort_state\\nimport numpy as np\\nfrom functools import partial\\nfrom itertools import permutations\\n\\n\\nidxs = list(range(7))\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# Them: Got a triangle of 3 light grey dots by itself.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_triangle = is_triangle([x,y,z], ctx)\\n            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])\\n            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])\\n            if (\\n                check_xyz_triangle\\n                and check_xyz_light\\n                and check_xyz_alone\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Could be. One on right is largest with a tiny gray on top??\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_right = a == get_right([a,b,c], ctx)\\n            check_a_largest = a == largest([a,b,c], ctx)\\n            check_b_tiny = is_small(b, ctx)\\n            check_b_grey = is_grey(b, ctx)\\n            check_b_top = b == get_top([a,b,c], ctx)\\n            if (\\n                check_a_right\\n                and check_a_largest\\n                and check_b_tiny\\n                and check_b_grey\\n                and check_b_top\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x,y], ctx)\\n            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)\\n            check_y_right_x = is_right(y, x, ctx)\\n            check_y_above_x = is_above(y, x, ctx)\\n            check_xy_same_size = same_size([x,y], ctx)\\n            if (\\n                check_xy_pair\\n                and check_xy_dark\\n                and check_y_right_x\\n                and check_y_above_x\\n                and check_xy_same_size\\n            ):\\n                dots = frozenset([x,y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: No.\\ndef turn(state):\\n    # New question.\\n    return []\\nstate = turn(state)\\n# End.\\n\\n# Them: What about a large medium grey dot near the center?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_grey = is_grey(x, ctx)\\n            check_x_center = is_middle(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_grey\\n                and check_x_center\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Is there a smaller black one next to it?\\ndef turn(state):\\n    # Follow up question, new dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a, in permutations(config):\\n            for x, in get1idxs(idxs, exclude=[a]):\\n                check_x_smaller_a = is_smaller(x, a, ctx)\\n                check_x_dark = is_dark(x, ctx)\\n                check_x_next_to_a = all_close([a,x], ctx)\\n                if(\\n                    check_x_smaller_a\\n                    and check_x_dark\\n                    and check_x_next_to_a\\n                ):\\n                    dots = frozenset([a,x])\\n                    if dots not in results:\\n                        results.add(dots)\\n                        orderedresults.append(dots)\\n                        parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_line = is_line([x,y,z], ctx)\\n            check_x_top_left = x == get_top_left([x, y, z], ctx)\\n            check_x_light = is_light(x, ctx)\\n            check_y_middle = is_middle(y, [x,y,z], ctx)\\n            check_y_grey = is_grey(y, ctx)\\n            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            if (\\n                check_xyz_line\\n                and check_x_top_left\\n                and check_x_light\\n                and check_y_middle\\n                and check_y_grey\\n                and check_z_bottom_right\\n                and check_z_dark\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes. Is the top one close to the middle darker one?\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_top = a == get_top([a,b,c], ctx)\\n            check_b_middle = b == get_middle([a,b,c], ctx)\\n            check_ab_close = all_close([a, b], ctx)\\n            check_b_darker_a = is_darker(b, a, ctx)\\n            if (\\n                check_a_top\\n                and check_b_middle\\n                and check_ab_close\\n                and check_b_darker_a\\n            ):\\n                results.add(frozenset([a,b,c]))\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. And the smallest is on the bottom right.\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_smallest = a == smallest([a,b,c], ctx)\\n            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)\\n            if (\\n                check_a_smallest\\n                and check_a_bottom_right\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes, let\'s select the large one. <selection>.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_large = is_large(a, ctx)\\n            check_b_not_large = not is_large(b, ctx)\\n            check_c_not_large = not is_large(c, ctx)\\n            if (\\n                check_a_large\\n                and check_b_not_large\\n                and check_c_not_large\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n\\n# New.\\nctx = get_ctx()\\nstate = []\\n\\n# You: Do you see a large black dot on the bottom left?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_dark = is_dark(x, ctx)\\n            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_dark\\n                and check_x_below_left\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n \\n# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_close = all_close([x,y,z], ctx)\\n            check_x_large = is_large(x, ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            check_y_smaller_x = is_smaller(y, x, ctx)\\n            check_z_smaller_x = is_smaller(z, x, ctx)\\n            check_y_lighter_x = is_lighter(y, x, ctx)\\n            check_z_lighter_x = is_lighter(z, x, ctx)\\n            check_yz_same_size = same_size([y,z], ctx)\\n            check_yz_same_color = same_color([y,z], ctx)\\n            if (\\n                check_xyz_close\\n                and check_x_large\\n                and check_z_dark\\n                and check_y_smaller_x\\n                and check_z_smaller_x\\n                and check_y_lighter_x\\n                and check_z_lighter_x\\n                and check_yz_same_size\\n                and check_yz_same_color\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Select the largest one.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_largest = a == get_largest([a,b,c], ctx)\\n            if (\\n                check_a_largest\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n \\n# Them: Okay.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n \\n# You: Okay. <selection>.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# You: Do you see a pair of dots, where the left dot is large-sized and light and the right dot is medium-sized and grey?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x, y], ctx)\\n            check_x_left = is_left(x, y, ctx)\\n            check_x_large = is_large(x, ctx)\\n            check_x_light = is_light(x, ctx)\\n            check_y_right = is_right(y, x, ctx)\\n            check_y_medium = is_medium_size(y, ctx)\\n            check_y_grey = is_grey(y, ctx)\\n            if (\\n                check_xy_pair\\n                and check_x_left\\n                and check_x_large\\n                and check_x_light\\n                and check_y_right\\n                and check_y_medium\\n                and check_y_grey\\n            ):\\n                dots = frozenset([x, y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. <eos>\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n\\n# You: Yes, is there a large size and light color dot to the left and below those?\\ndef "}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=29997 request_id=3f88dd45fc7616702a69ccbaa56d51c4 response_code=200
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_send_message/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb&message=Yes&time_taken=0.6540000438690186 HTTP/1.1" 200 193 40.863583
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 326 0.000690
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.000859
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000796
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.000843
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.000995
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.000944
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001003
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.000700
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.000852
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003959
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002482
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003087
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001973
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001911
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001410
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001220
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001243
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001230
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001211
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001620
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001191
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002599
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002863
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003948
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003167
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002771
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002808
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001923
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002581
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001898
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.002934
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002347
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001754
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002721
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.002170
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001421
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001457
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001959
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001919
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001441
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001519
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001518
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003033
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001518
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001370
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002736
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003661
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.004480
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002344
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.002024
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001439
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001068
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002882
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002768
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.004787
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002523
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002931
INFO:web:::1 - - [2023-05-01 23:08:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002358
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001534
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001486
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001999
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001802
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001445
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001293
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001895
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001945
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001988
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001948
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001892
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001320
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001491
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001413
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001455
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.002041
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001419
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001962
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001927
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001952
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001445
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001994
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001889
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.002153
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001476
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.002018
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001472
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001479
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001485
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001441
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001775
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001462
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001468
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/static/chat.wav HTTP/1.1" 206 197029 0.004697
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001937
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002317
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001675
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001807
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001101
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /favicon.ico HTTP/1.1" 404 331 0.000632
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001067
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001302
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001353
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/static/chat.wav HTTP/1.1" 206 197029 0.001474
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003716
INFO:web:::1 - - [2023-05-01 23:08:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003827
INFO:web:::1 - - [2023-05-01 23:08:05] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003350
INFO:web:::1 - - [2023-05-01 23:08:06] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002714
INFO:web:::1 - - [2023-05-01 23:08:07] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.004885
INFO:web:::1 - - [2023-05-01 23:08:07] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001113
INFO:web:::1 - - [2023-05-01 23:08:08] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002680
INFO:web:::1 - - [2023-05-01 23:08:09] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000899
INFO:web:::1 - - [2023-05-01 23:08:10] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003715
INFO:web:::1 - - [2023-05-01 23:08:10] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.004195
INFO:web:::1 - - [2023-05-01 23:08:11] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002845
INFO:web:::1 - - [2023-05-01 23:08:12] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002788
INFO:web:::1 - - [2023-05-01 23:08:13] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003090
INFO:web:::1 - - [2023-05-01 23:08:13] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000629
INFO:web:::1 - - [2023-05-01 23:08:14] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002925
INFO:web:::1 - - [2023-05-01 23:08:15] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001442
INFO:web:::1 - - [2023-05-01 23:08:16] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003830
INFO:web:::1 - - [2023-05-01 23:08:16] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003059
INFO:web:::1 - - [2023-05-01 23:08:17] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002880
INFO:web:::1 - - [2023-05-01 23:08:18] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002830
INFO:web:::1 - - [2023-05-01 23:08:19] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003637
INFO:web:::1 - - [2023-05-01 23:08:19] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002644
INFO:web:::1 - - [2023-05-01 23:08:20] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002799
INFO:web:::1 - - [2023-05-01 23:08:21] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003011
INFO:web:::1 - - [2023-05-01 23:08:22] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003792
INFO:web:::1 - - [2023-05-01 23:08:22] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000666
INFO:web:::1 - - [2023-05-01 23:08:23] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002780
INFO:web:::1 - - [2023-05-01 23:08:24] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002924
INFO:web:::1 - - [2023-05-01 23:08:25] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001381
INFO:web:::1 - - [2023-05-01 23:08:25] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000912
INFO:web:::1 - - [2023-05-01 23:08:26] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002724
INFO:web:::1 - - [2023-05-01 23:08:27] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001457
INFO:web:::1 - - [2023-05-01 23:08:28] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001178
INFO:web:::1 - - [2023-05-01 23:08:28] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000866
INFO:web:::1 - - [2023-05-01 23:08:29] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002667
INFO:web:::1 - - [2023-05-01 23:08:30] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003364
INFO:web:::1 - - [2023-05-01 23:08:31] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.000986
INFO:web:::1 - - [2023-05-01 23:08:31] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000548
INFO:web:::1 - - [2023-05-01 23:08:32] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003060
INFO:web:::1 - - [2023-05-01 23:08:33] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000738
INFO:web:::1 - - [2023-05-01 23:08:34] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.000908
INFO:web:::1 - - [2023-05-01 23:08:34] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000857
INFO:web:::1 - - [2023-05-01 23:08:35] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001542
INFO:web:::1 - - [2023-05-01 23:08:36] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000705
INFO:web:::1 - - [2023-05-01 23:08:37] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003724
INFO:web:::1 - - [2023-05-01 23:08:37] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003206
INFO:web:::1 - - [2023-05-01 23:08:38] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002618
INFO:web:::1 - - [2023-05-01 23:08:39] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002865
INFO:web:::1 - - [2023-05-01 23:08:40] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003597
INFO:web:::1 - - [2023-05-01 23:08:40] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003964
INFO:web:::1 - - [2023-05-01 23:08:41] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002874
INFO:web:::1 - - [2023-05-01 23:08:42] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002674
INFO:web:::1 - - [2023-05-01 23:08:43] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003748
INFO:web:::1 - - [2023-05-01 23:08:43] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003426
INFO:web:::1 - - [2023-05-01 23:08:44] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002748
INFO:web:::1 - - [2023-05-01 23:08:45] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.005058
INFO:web:::1 - - [2023-05-01 23:08:46] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.004523
INFO:web:::1 - - [2023-05-01 23:08:46] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002823
INFO:web:::1 - - [2023-05-01 23:08:47] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003234
INFO:web:::1 - - [2023-05-01 23:08:48] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002663
INFO:web:::1 - - [2023-05-01 23:08:49] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003679
INFO:web:::1 - - [2023-05-01 23:08:49] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002588
INFO:web:::1 - - [2023-05-01 23:08:50] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003546
INFO:web:::1 - - [2023-05-01 23:08:51] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002701
INFO:web:::1 - - [2023-05-01 23:08:52] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003702
INFO:web:::1 - - [2023-05-01 23:08:52] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003669
INFO:web:::1 - - [2023-05-01 23:08:53] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002772
INFO:web:::1 - - [2023-05-01 23:08:54] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002932
INFO:web:::1 - - [2023-05-01 23:08:55] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003570
INFO:web:::1 - - [2023-05-01 23:08:55] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002701
INFO:web:::1 - - [2023-05-01 23:08:56] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002813
INFO:web:::1 - - [2023-05-01 23:08:57] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002947
INFO:web:::1 - - [2023-05-01 23:08:58] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003603
INFO:web:::1 - - [2023-05-01 23:08:58] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000671
INFO:web:::1 - - [2023-05-01 23:08:59] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001041
INFO:web:::1 - - [2023-05-01 23:09:00] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002645
INFO:web:::1 - - [2023-05-01 23:09:01] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001404
INFO:web:::1 - - [2023-05-01 23:09:01] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000741
INFO:web:::1 - - [2023-05-01 23:09:02] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002812
INFO:web:::1 - - [2023-05-01 23:09:03] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000763
INFO:web:::1 - - [2023-05-01 23:09:04] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003646
INFO:web:::1 - - [2023-05-01 23:09:04] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002611
INFO:web:::1 - - [2023-05-01 23:09:05] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002728
INFO:web:::1 - - [2023-05-01 23:09:06] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002844
INFO:web:::1 - - [2023-05-01 23:09:07] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003667
INFO:web:::1 - - [2023-05-01 23:09:07] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.004017
INFO:web:::1 - - [2023-05-01 23:09:08] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000945
INFO:web:::1 - - [2023-05-01 23:09:09] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002731
INFO:web:::1 - - [2023-05-01 23:09:10] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003666
INFO:web:::1 - - [2023-05-01 23:09:10] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000702
INFO:web:::1 - - [2023-05-01 23:09:11] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002929
INFO:web:::1 - - [2023-05-01 23:09:12] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002856
INFO:web:::1 - - [2023-05-01 23:09:13] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.003203
INFO:web:::1 - - [2023-05-01 23:09:13] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002757
INFO:web:::1 - - [2023-05-01 23:09:14] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002545
INFO:web:::1 - - [2023-05-01 23:09:15] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.000915
INFO:web:::1 - - [2023-05-01 23:09:16] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001840
INFO:web:::1 - - [2023-05-01 23:09:16] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001588
INFO:web:::1 - - [2023-05-01 23:09:17] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002680
INFO:web:::1 - - [2023-05-01 23:09:18] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.003850
INFO:web:::1 - - [2023-05-01 23:09:19] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 128 0.001739
INFO:web:::1 - - [2023-05-01 23:09:19] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001211
INFO:web:::1 - - [2023-05-01 23:09:20] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001248
INFO:web:::1 - - [2023-05-01 23:09:21] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.002819
DEBUG:web:User U_a3c40e4d5f14492099cbeb32e48a4ffb had connection timeout exception with connected status 1
DEBUG:web:User U_a3c40e4d5f14492099cbeb32e48a4ffb timed out due to inactivity. Redirecting to incomplete status...
DEBUG:web:Setting controller for chat C_27d822bf0c5348d4a4fc4c8c3d28cb74 to inactive
INFO:web:::1 - - [2023-05-01 23:09:22] "GET /dialogue/_check_chat_valid/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 177 0.008335
INFO:web:::1 - - [2023-05-01 23:09:22] "GET /dialogue/_check_inbox/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 132 0.001072
INFO:web:::1 - - [2023-05-01 23:09:22] "GET /dialogue/_leave_chat/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 130 0.006736
DEBUG:web:Got updated status incomplete for user U_a3c40e4d5f14492099cbeb32e48a4ffb
INFO:web:::1 - - [2023-05-01 23:09:22] "GET /dialogue/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 1347 0.019213
INFO:web:::1 - - [2023-05-01 23:09:22] "GET /dialogue/_disconnect/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 130 0.009140
INFO:web:::1 - - [2023-05-01 23:09:22] "GET /dialogue/_leave_chat/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 130 0.009588
INFO:web:::1 - - [2023-05-01 23:09:22] "GET /dialogue/_disconnect/?uid=U_a3c40e4d5f14492099cbeb32e48a4ffb HTTP/1.1" 200 130 0.006877
INFO:web:::1 - - [2023-05-01 23:09:23] "GET /dialogue/static/css/bootstrap.min.css HTTP/1.1" 200 106297 0.001203
INFO:web:::1 - - [2023-05-01 23:59:33] "GET /dialogue HTTP/1.1" 308 428 0.000475
INFO:web:::1 - - [2023-05-01 23:59:34] "GET /dialogue/ HTTP/1.1" 302 532 0.000522
DEBUG:web:Got updated status waiting for user U_aa7cacf439d34af89cab2e3dbc17cda2
INFO:web:::1 - - [2023-05-01 23:59:34] "GET /dialogue/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 2897 0.007116
INFO:web:::1 - - [2023-05-01 23:59:34] "GET /dialogue/static/css/bootstrap.min.css HTTP/1.1" 200 106297 0.001637
INFO:web:::1 - - [2023-05-01 23:59:34] "GET /dialogue/static/img/handshake.jpg HTTP/1.1" 200 22253 0.000595
INFO:web:::1 - - [2023-05-01 23:59:34] "GET /dialogue/_connect/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 130 0.006895
DEBUG:web:Paired user U_aa7cacf439d34af89cab2e3dbc17cda2 with bot of type gpt in chat with ID C_775aeffa7e14405c9547e10653714e1c and scenario S_eQC9y8Zg1dVhlH0e
INFO:web:::1 - - [2023-05-01 23:59:36] "GET /dialogue/_check_status_change/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2&assumed_status=waiting HTTP/1.1" 200 137 1.437719
INFO:web:::1 - - [2023-05-01 23:59:36] "GET /dialogue/_check_status_change/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2&assumed_status=waiting HTTP/1.1" 200 136 0.000980
INFO:web:::1 - - [2023-05-01 23:59:36] "GET /dialogue/_disconnect/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 130 0.005153
DEBUG:web:Got updated status chat for user U_aa7cacf439d34af89cab2e3dbc17cda2
INFO:web:::1 - - [2023-05-01 23:59:36] "GET /dialogue/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 20738 0.001527
INFO:web:::1 - - [2023-05-01 23:59:36] "GET /dialogue/static/img/sample_colored.png HTTP/1.1" 200 26541 0.000807
INFO:web:::1 - - [2023-05-01 23:59:36] "GET /dialogue/static/img/handshake.jpg HTTP/1.1" 304 187 0.000920
INFO:web:::1 - - [2023-05-01 23:59:36] "GET /dialogue/_connect/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 130 0.013141
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-3.5-turbo", "max_tokens": 128, "temperature": 0, "stop": ["\\n"], "messages": [{"role": "user", "content": "Text:\\nyes ! lightest on all the way to the right ? if so click that one ! <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nYes! If you want the lightest, click the one all the way to the right? <selection>.\\n\\nText:\\nlarge black next to tint light\\nReformat the text. Do not change the words.\\nAnswer:\\nLarge black next to tiny light.\\n\\nText:\\ni have a light grey small dot next to a medium grey medium dot\\nReformat the text. Do not change the words.\\nAnswer:\\nI have a light grey small dot next to a medium grey medium dot.\\n\\nText:\\ntwo small dots almost identical in size close together in diagonal line ?\\nReformat the text. Do not change the words.\\nAnswer:\\nTwo small dots, almost identical in size, close together in a diagonal line?\\n\\nText:\\nokay <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nOkay. <selection>.\\n\\nText:\\nDo you see a pair of dots, where the right dot is large-sized and dark and the left dot is medium-sized and grey\\nReformat the text. Do not change the words.\\nAnswer:\\n"}]}' message='Post details'
DEBUG:urllib3.connectionpool:Resetting dropped connection: api.openai.com
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2314 request_id=e7f9055beead2f713a10b125f0455462 response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-4", "max_tokens": 1024, "temperature": 0, "stop": ["# End.", "# New."], "messages": [{"role": "user", "content": "from oc.fns.context import get_ctx\\nfrom oc.fns.shapes import is_triangle, is_line, is_square\\nfrom oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle\\nfrom oc.fns.spatial import get_top, get_bottom, get_right, get_left\\nfrom oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left\\nfrom oc.fns.spatial import get_middle\\nfrom oc.fns.spatial import get_distance, get_minimum_radius\\nfrom oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter\\nfrom oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller\\nfrom oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets\\nfrom oc.fns.lists import add\\nfrom oc.fns.lists import sort_state\\nimport numpy as np\\nfrom functools import partial\\nfrom itertools import permutations\\n\\n\\nidxs = list(range(7))\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# Them: Got a triangle of 3 light grey dots by itself.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_triangle = is_triangle([x,y,z], ctx)\\n            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])\\n            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])\\n            if (\\n                check_xyz_triangle\\n                and check_xyz_light\\n                and check_xyz_alone\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Could be. One on right is largest with a tiny gray on top??\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_right = a == get_right([a,b,c], ctx)\\n            check_a_largest = a == largest([a,b,c], ctx)\\n            check_b_tiny = is_small(b, ctx)\\n            check_b_grey = is_grey(b, ctx)\\n            check_b_top = b == get_top([a,b,c], ctx)\\n            if (\\n                check_a_right\\n                and check_a_largest\\n                and check_b_tiny\\n                and check_b_grey\\n                and check_b_top\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x,y], ctx)\\n            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)\\n            check_y_right_x = is_right(y, x, ctx)\\n            check_y_above_x = is_above(y, x, ctx)\\n            check_xy_same_size = same_size([x,y], ctx)\\n            if (\\n                check_xy_pair\\n                and check_xy_dark\\n                and check_y_right_x\\n                and check_y_above_x\\n                and check_xy_same_size\\n            ):\\n                dots = frozenset([x,y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: No.\\ndef turn(state):\\n    # New question.\\n    return []\\nstate = turn(state)\\n# End.\\n\\n# Them: What about a large medium grey dot near the center?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_grey = is_grey(x, ctx)\\n            check_x_center = is_middle(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_grey\\n                and check_x_center\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Is there a smaller black one next to it?\\ndef turn(state):\\n    # Follow up question, new dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a, in permutations(config):\\n            for x, in get1idxs(idxs, exclude=[a]):\\n                check_x_smaller_a = is_smaller(x, a, ctx)\\n                check_x_dark = is_dark(x, ctx)\\n                check_x_next_to_a = all_close([a,x], ctx)\\n                if(\\n                    check_x_smaller_a\\n                    and check_x_dark\\n                    and check_x_next_to_a\\n                ):\\n                    dots = frozenset([a,x])\\n                    if dots not in results:\\n                        results.add(dots)\\n                        orderedresults.append(dots)\\n                        parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_line = is_line([x,y,z], ctx)\\n            check_x_top_left = x == get_top_left([x, y, z], ctx)\\n            check_x_light = is_light(x, ctx)\\n            check_y_middle = is_middle(y, [x,y,z], ctx)\\n            check_y_grey = is_grey(y, ctx)\\n            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            if (\\n                check_xyz_line\\n                and check_x_top_left\\n                and check_x_light\\n                and check_y_middle\\n                and check_y_grey\\n                and check_z_bottom_right\\n                and check_z_dark\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes. Is the top one close to the middle darker one?\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_top = a == get_top([a,b,c], ctx)\\n            check_b_middle = b == get_middle([a,b,c], ctx)\\n            check_ab_close = all_close([a, b], ctx)\\n            check_b_darker_a = is_darker(b, a, ctx)\\n            if (\\n                check_a_top\\n                and check_b_middle\\n                and check_ab_close\\n                and check_b_darker_a\\n            ):\\n                results.add(frozenset([a,b,c]))\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. And the smallest is on the bottom right.\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_smallest = a == smallest([a,b,c], ctx)\\n            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)\\n            if (\\n                check_a_smallest\\n                and check_a_bottom_right\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes, let\'s select the large one. <selection>.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_large = is_large(a, ctx)\\n            check_b_not_large = not is_large(b, ctx)\\n            check_c_not_large = not is_large(c, ctx)\\n            if (\\n                check_a_large\\n                and check_b_not_large\\n                and check_c_not_large\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n\\n# New.\\nctx = get_ctx()\\nstate = []\\n\\n# You: Do you see a large black dot on the bottom left?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_dark = is_dark(x, ctx)\\n            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_dark\\n                and check_x_below_left\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n \\n# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_close = all_close([x,y,z], ctx)\\n            check_x_large = is_large(x, ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            check_y_smaller_x = is_smaller(y, x, ctx)\\n            check_z_smaller_x = is_smaller(z, x, ctx)\\n            check_y_lighter_x = is_lighter(y, x, ctx)\\n            check_z_lighter_x = is_lighter(z, x, ctx)\\n            check_yz_same_size = same_size([y,z], ctx)\\n            check_yz_same_color = same_color([y,z], ctx)\\n            if (\\n                check_xyz_close\\n                and check_x_large\\n                and check_z_dark\\n                and check_y_smaller_x\\n                and check_z_smaller_x\\n                and check_y_lighter_x\\n                and check_z_lighter_x\\n                and check_yz_same_size\\n                and check_yz_same_color\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Select the largest one.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_largest = a == get_largest([a,b,c], ctx)\\n            if (\\n                check_a_largest\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n \\n# Them: Okay.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n \\n# You: Okay. <selection>.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# You: Do you see a pair of dots, where the right dot is large-sized and dark, and the left dot is medium-sized and grey?\\ndef "}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=32652 request_id=f2d7ca3bf46a618abeaa1e97917b8c17 response_code=200
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_join_chat/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 171 37.830820
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 365 0.000916
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000879
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000749
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000670
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001121
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001002
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000442
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000437
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000379
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000596
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000598
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003061
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001451
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002227
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001364
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001442
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001411
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001764
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003096
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.003262
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001772
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001741
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.002463
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.002375
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001925
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.002363
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002065
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.002375
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001788
INFO:web:::1 - - [2023-05-02 00:00:14] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.002397
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001805
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003036
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001726
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.002380
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001830
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001154
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001154
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001148
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001407
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001164
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001251
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001180
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001212
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001369
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001366
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001394
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001459
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001289
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/static/chat.wav HTTP/1.1" 206 197029 0.002175
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /favicon.ico HTTP/1.1" 404 331 0.001097
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001062
INFO:web:::1 - - [2023-05-02 00:00:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000697
INFO:web:::1 - - [2023-05-02 00:00:16] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002772
INFO:web:::1 - - [2023-05-02 00:00:17] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002970
INFO:web:::1 - - [2023-05-02 00:00:18] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003785
INFO:web:::1 - - [2023-05-02 00:00:18] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002632
INFO:web:::1 - - [2023-05-02 00:00:19] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002682
INFO:web:::1 - - [2023-05-02 00:00:20] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.003236
INFO:web:::1 - - [2023-05-02 00:00:21] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.000962
INFO:web:::1 - - [2023-05-02 00:00:21] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000724
INFO:web:::1 - - [2023-05-02 00:00:22] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002690
INFO:web:::1 - - [2023-05-02 00:00:23] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002799
INFO:web:::1 - - [2023-05-02 00:00:24] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003616
INFO:web:::1 - - [2023-05-02 00:00:24] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002781
INFO:web:::1 - - [2023-05-02 00:00:25] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002565
INFO:web:::1 - - [2023-05-02 00:00:26] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002730
INFO:web:::1 - - [2023-05-02 00:00:27] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.002338
INFO:web:::1 - - [2023-05-02 00:00:27] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000877
INFO:web:::1 - - [2023-05-02 00:00:28] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002480
INFO:web:::1 - - [2023-05-02 00:00:29] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002689
INFO:web:::1 - - [2023-05-02 00:00:30] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001602
INFO:web:::1 - - [2023-05-02 00:00:30] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000589
INFO:web:::1 - - [2023-05-02 00:00:31] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002680
INFO:web:::1 - - [2023-05-02 00:00:32] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002773
INFO:web:::1 - - [2023-05-02 00:00:33] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003739
INFO:web:::1 - - [2023-05-02 00:00:33] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.003931
INFO:web:::1 - - [2023-05-02 00:00:34] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002992
INFO:web:::1 - - [2023-05-02 00:00:35] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000997
INFO:web:::1 - - [2023-05-02 00:00:36] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001209
INFO:web:::1 - - [2023-05-02 00:00:36] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000936
INFO:web:::1 - - [2023-05-02 00:00:37] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002710
INFO:web:::1 - - [2023-05-02 00:00:38] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002608
INFO:web:::1 - - [2023-05-02 00:00:39] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003791
INFO:web:::1 - - [2023-05-02 00:00:39] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.003834
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-3.5-turbo", "max_tokens": 128, "temperature": 0, "stop": ["\\n"], "messages": [{"role": "user", "content": "Text:\\nyes ! lightest on all the way to the right ? if so click that one ! <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nYes! If you want the lightest, click the one all the way to the right? <selection>.\\n\\nText:\\nlarge black next to tint light\\nReformat the text. Do not change the words.\\nAnswer:\\nLarge black next to tiny light.\\n\\nText:\\ni have a light grey small dot next to a medium grey medium dot\\nReformat the text. Do not change the words.\\nAnswer:\\nI have a light grey small dot next to a medium grey medium dot.\\n\\nText:\\ntwo small dots almost identical in size close together in diagonal line ?\\nReformat the text. Do not change the words.\\nAnswer:\\nTwo small dots, almost identical in size, close together in a diagonal line?\\n\\nText:\\nokay <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nOkay. <selection>.\\n\\nText:\\nyes <eos>\\nReformat the text. Do not change the words.\\nAnswer:\\n"}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=744 request_id=18127e20e94e4f634b02044a6107cab6 response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-4", "max_tokens": 1024, "temperature": 0, "stop": ["# End.", "# New."], "messages": [{"role": "user", "content": "from oc.fns.context import get_ctx\\nfrom oc.fns.shapes import is_triangle, is_line, is_square\\nfrom oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle\\nfrom oc.fns.spatial import get_top, get_bottom, get_right, get_left\\nfrom oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left\\nfrom oc.fns.spatial import get_middle\\nfrom oc.fns.spatial import get_distance, get_minimum_radius\\nfrom oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter\\nfrom oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller\\nfrom oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets\\nfrom oc.fns.lists import add\\nfrom oc.fns.lists import sort_state\\nimport numpy as np\\nfrom functools import partial\\nfrom itertools import permutations\\n\\n\\nidxs = list(range(7))\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# Them: Got a triangle of 3 light grey dots by itself.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_triangle = is_triangle([x,y,z], ctx)\\n            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])\\n            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])\\n            if (\\n                check_xyz_triangle\\n                and check_xyz_light\\n                and check_xyz_alone\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Could be. One on right is largest with a tiny gray on top??\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_right = a == get_right([a,b,c], ctx)\\n            check_a_largest = a == largest([a,b,c], ctx)\\n            check_b_tiny = is_small(b, ctx)\\n            check_b_grey = is_grey(b, ctx)\\n            check_b_top = b == get_top([a,b,c], ctx)\\n            if (\\n                check_a_right\\n                and check_a_largest\\n                and check_b_tiny\\n                and check_b_grey\\n                and check_b_top\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x,y], ctx)\\n            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)\\n            check_y_right_x = is_right(y, x, ctx)\\n            check_y_above_x = is_above(y, x, ctx)\\n            check_xy_same_size = same_size([x,y], ctx)\\n            if (\\n                check_xy_pair\\n                and check_xy_dark\\n                and check_y_right_x\\n                and check_y_above_x\\n                and check_xy_same_size\\n            ):\\n                dots = frozenset([x,y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: No.\\ndef turn(state):\\n    # New question.\\n    return []\\nstate = turn(state)\\n# End.\\n\\n# Them: What about a large medium grey dot near the center?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_grey = is_grey(x, ctx)\\n            check_x_center = is_middle(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_grey\\n                and check_x_center\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Is there a smaller black one next to it?\\ndef turn(state):\\n    # Follow up question, new dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a, in permutations(config):\\n            for x, in get1idxs(idxs, exclude=[a]):\\n                check_x_smaller_a = is_smaller(x, a, ctx)\\n                check_x_dark = is_dark(x, ctx)\\n                check_x_next_to_a = all_close([a,x], ctx)\\n                if(\\n                    check_x_smaller_a\\n                    and check_x_dark\\n                    and check_x_next_to_a\\n                ):\\n                    dots = frozenset([a,x])\\n                    if dots not in results:\\n                        results.add(dots)\\n                        orderedresults.append(dots)\\n                        parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_line = is_line([x,y,z], ctx)\\n            check_x_top_left = x == get_top_left([x, y, z], ctx)\\n            check_x_light = is_light(x, ctx)\\n            check_y_middle = is_middle(y, [x,y,z], ctx)\\n            check_y_grey = is_grey(y, ctx)\\n            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            if (\\n                check_xyz_line\\n                and check_x_top_left\\n                and check_x_light\\n                and check_y_middle\\n                and check_y_grey\\n                and check_z_bottom_right\\n                and check_z_dark\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes. Is the top one close to the middle darker one?\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_top = a == get_top([a,b,c], ctx)\\n            check_b_middle = b == get_middle([a,b,c], ctx)\\n            check_ab_close = all_close([a, b], ctx)\\n            check_b_darker_a = is_darker(b, a, ctx)\\n            if (\\n                check_a_top\\n                and check_b_middle\\n                and check_ab_close\\n                and check_b_darker_a\\n            ):\\n                results.add(frozenset([a,b,c]))\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. And the smallest is on the bottom right.\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_smallest = a == smallest([a,b,c], ctx)\\n            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)\\n            if (\\n                check_a_smallest\\n                and check_a_bottom_right\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes, let\'s select the large one. <selection>.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_large = is_large(a, ctx)\\n            check_b_not_large = not is_large(b, ctx)\\n            check_c_not_large = not is_large(c, ctx)\\n            if (\\n                check_a_large\\n                and check_b_not_large\\n                and check_c_not_large\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n\\n# New.\\nctx = get_ctx()\\nstate = []\\n\\n# You: Do you see a large black dot on the bottom left?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_dark = is_dark(x, ctx)\\n            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_dark\\n                and check_x_below_left\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n \\n# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_close = all_close([x,y,z], ctx)\\n            check_x_large = is_large(x, ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            check_y_smaller_x = is_smaller(y, x, ctx)\\n            check_z_smaller_x = is_smaller(z, x, ctx)\\n            check_y_lighter_x = is_lighter(y, x, ctx)\\n            check_z_lighter_x = is_lighter(z, x, ctx)\\n            check_yz_same_size = same_size([y,z], ctx)\\n            check_yz_same_color = same_color([y,z], ctx)\\n            if (\\n                check_xyz_close\\n                and check_x_large\\n                and check_z_dark\\n                and check_y_smaller_x\\n                and check_z_smaller_x\\n                and check_y_lighter_x\\n                and check_z_lighter_x\\n                and check_yz_same_size\\n                and check_yz_same_color\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Select the largest one.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_largest = a == get_largest([a,b,c], ctx)\\n            if (\\n                check_a_largest\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n \\n# Them: Okay.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n \\n# You: Okay. <selection>.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# You: Do you see a pair of dots, where the right dot is large-sized and dark, and the left dot is medium-sized and grey?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x, y], ctx)\\n            check_x_left = is_left(x, y, ctx)\\n            check_x_medium = is_medium_size(x, ctx)\\n            check_x_grey = is_grey(x, ctx)\\n            check_y_right = is_right(y, x, ctx)\\n            check_y_large = is_large(y, ctx)\\n            check_y_dark = is_dark(y, ctx)\\n            if (\\n                check_xy_pair\\n                and check_x_left\\n                and check_x_medium\\n                and check_x_grey\\n                and check_y_right\\n                and check_y_large\\n                and check_y_dark\\n            ):\\n                dots = frozenset([x, y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. <eos>\\ndef "}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=4173 request_id=eb4db89ba0b1314a576b0e88c7d6f897 response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-4", "max_tokens": 5, "temperature": 0, "stop": ["# End."], "messages": [{"role": "user", "content": "Them: Got a triangle of 3 light grey dots by itself.\\nDo they see what you asked about?\\nConfirmation: None\\n\\nThem: Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\nDo they see what you asked about?\\nConfirmation: None\\n\\nThem: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\nDo they see what you asked about?\\nConfirmation: No\\n\\nThem: Yes. Is the top one close to the middle darker one?\\nDo they see what you asked about?\\nConfirmation: Yes\\n\\nThem: No.\\nDo they see what you asked about?\\nConfirmation: No\\n\\nThem: Do you see a pair of dark dots, where the top left is larger and the bottom is smaller.\\nDo they see what you asked about?\\nConfirmation: None\\n\\nThem: Yes. <eos>\\nDo they see what you asked about?\\nConfirmation:"}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=826 request_id=10c784b3539706868398f9eb58f627f9 response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-3.5-turbo", "max_tokens": 128, "temperature": 0, "stop": ["\\n"], "messages": [{"role": "user", "content": "Text:\\nyes ! lightest on all the way to the right ? if so click that one ! <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nYes! If you want the lightest, click the one all the way to the right? <selection>.\\n\\nText:\\nlarge black next to tint light\\nReformat the text. Do not change the words.\\nAnswer:\\nLarge black next to tiny light.\\n\\nText:\\ni have a light grey small dot next to a medium grey medium dot\\nReformat the text. Do not change the words.\\nAnswer:\\nI have a light grey small dot next to a medium grey medium dot.\\n\\nText:\\ntwo small dots almost identical in size close together in diagonal line ?\\nReformat the text. Do not change the words.\\nAnswer:\\nTwo small dots, almost identical in size, close together in a diagonal line?\\n\\nText:\\nokay <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\nOkay. <selection>.\\n\\nText:\\nLet\'s select the large size and dark color one in the middle of those. <selection>\\nReformat the text. Do not change the words.\\nAnswer:\\n"}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1766 request_id=0b5de5d72d48f786f55cfa757bcc8efe response_code=200
DEBUG:openai:message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
DEBUG:openai:api_version=None data='{"model": "gpt-4", "max_tokens": 1024, "temperature": 0, "stop": ["# End.", "# New."], "messages": [{"role": "user", "content": "from oc.fns.context import get_ctx\\nfrom oc.fns.shapes import is_triangle, is_line, is_square\\nfrom oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle\\nfrom oc.fns.spatial import get_top, get_bottom, get_right, get_left\\nfrom oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left\\nfrom oc.fns.spatial import get_middle\\nfrom oc.fns.spatial import get_distance, get_minimum_radius\\nfrom oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter\\nfrom oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller\\nfrom oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets\\nfrom oc.fns.lists import add\\nfrom oc.fns.lists import sort_state\\nimport numpy as np\\nfrom functools import partial\\nfrom itertools import permutations\\n\\n\\nidxs = list(range(7))\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# Them: Got a triangle of 3 light grey dots by itself.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_triangle = is_triangle([x,y,z], ctx)\\n            check_xyz_light = all([is_light(dot, ctx) for dot in [x,y,z]])\\n            check_xyz_alone = all([not all_close([x,y,z,dot], ctx) for dot in idxs if dot not in [x,y,z]])\\n            if (\\n                check_xyz_triangle\\n                and check_xyz_light\\n                and check_xyz_alone\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Could be. One on right is largest with a tiny gray on top??\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_right = a == get_right([a,b,c], ctx)\\n            check_a_largest = a == largest([a,b,c], ctx)\\n            check_b_tiny = is_small(b, ctx)\\n            check_b_grey = is_grey(b, ctx)\\n            check_b_top = b == get_top([a,b,c], ctx)\\n            if (\\n                check_a_right\\n                and check_a_largest\\n                and check_b_tiny\\n                and check_b_grey\\n                and check_b_top\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x,y], ctx)\\n            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)\\n            check_y_right_x = is_right(y, x, ctx)\\n            check_y_above_x = is_above(y, x, ctx)\\n            check_xy_same_size = same_size([x,y], ctx)\\n            if (\\n                check_xy_pair\\n                and check_xy_dark\\n                and check_y_right_x\\n                and check_y_above_x\\n                and check_xy_same_size\\n            ):\\n                dots = frozenset([x,y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: No.\\ndef turn(state):\\n    # New question.\\n    return []\\nstate = turn(state)\\n# End.\\n\\n# Them: What about a large medium grey dot near the center?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_grey = is_grey(x, ctx)\\n            check_x_center = is_middle(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_grey\\n                and check_x_center\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Is there a smaller black one next to it?\\ndef turn(state):\\n    # Follow up question, new dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a, in permutations(config):\\n            for x, in get1idxs(idxs, exclude=[a]):\\n                check_x_smaller_a = is_smaller(x, a, ctx)\\n                check_x_dark = is_dark(x, ctx)\\n                check_x_next_to_a = all_close([a,x], ctx)\\n                if(\\n                    check_x_smaller_a\\n                    and check_x_dark\\n                    and check_x_next_to_a\\n                ):\\n                    dots = frozenset([a,x])\\n                    if dots not in results:\\n                        results.add(dots)\\n                        orderedresults.append(dots)\\n                        parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_line = is_line([x,y,z], ctx)\\n            check_x_top_left = x == get_top_left([x, y, z], ctx)\\n            check_x_light = is_light(x, ctx)\\n            check_y_middle = is_middle(y, [x,y,z], ctx)\\n            check_y_grey = is_grey(y, ctx)\\n            check_z_bottom_right = z == get_bottom_right([x, y, z], ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            if (\\n                check_xyz_line\\n                and check_x_top_left\\n                and check_x_light\\n                and check_y_middle\\n                and check_y_grey\\n                and check_z_bottom_right\\n                and check_z_dark\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes. Is the top one close to the middle darker one?\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_top = a == get_top([a,b,c], ctx)\\n            check_b_middle = b == get_middle([a,b,c], ctx)\\n            check_ab_close = all_close([a, b], ctx)\\n            check_b_darker_a = is_darker(b, a, ctx)\\n            if (\\n                check_a_top\\n                and check_b_middle\\n                and check_ab_close\\n                and check_b_darker_a\\n            ):\\n                results.add(frozenset([a,b,c]))\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. And the smallest is on the bottom right.\\ndef turn(state):\\n    # Follow up question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_smallest = a == smallest([a,b,c], ctx)\\n            check_a_bottom_right = a == get_bottom_right([a,b,c], ctx)\\n            if (\\n                check_a_smallest\\n                and check_a_bottom_right\\n            ):\\n                dots = frozenset([a,b,c])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Yes, let\'s select the large one. <selection>.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_large = is_large(a, ctx)\\n            check_b_not_large = not is_large(b, ctx)\\n            check_c_not_large = not is_large(c, ctx)\\n            if (\\n                check_a_large\\n                and check_b_not_large\\n                and check_c_not_large\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n\\n# New.\\nctx = get_ctx()\\nstate = []\\n\\n# You: Do you see a large black dot on the bottom left?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 1):\\n        for x, in permutations(config):\\n            check_x_large = is_large(x, ctx)\\n            check_x_dark = is_dark(x, ctx)\\n            check_x_below_left = is_below(x, None, ctx) and is_left(x, None, ctx)\\n            if (\\n                check_x_large\\n                and check_x_dark\\n                and check_x_below_left\\n            ):\\n                dots = frozenset([x])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n \\n# Them: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 3):\\n        for x,y,z in permutations(config):\\n            check_xyz_close = all_close([x,y,z], ctx)\\n            check_x_large = is_large(x, ctx)\\n            check_z_dark = is_dark(z, ctx)\\n            check_y_smaller_x = is_smaller(y, x, ctx)\\n            check_z_smaller_x = is_smaller(z, x, ctx)\\n            check_y_lighter_x = is_lighter(y, x, ctx)\\n            check_z_lighter_x = is_lighter(z, x, ctx)\\n            check_yz_same_size = same_size([y,z], ctx)\\n            check_yz_same_color = same_color([y,z], ctx)\\n            if (\\n                check_xyz_close\\n                and check_x_large\\n                and check_z_dark\\n                and check_y_smaller_x\\n                and check_z_smaller_x\\n                and check_y_lighter_x\\n                and check_z_lighter_x\\n                and check_yz_same_size\\n                and check_yz_same_color\\n            ):\\n                dots = frozenset([x,y,z])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# You: Select the largest one.\\ndef select(state):\\n    # Select a dot.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in state:\\n        for a,b,c in permutations(config):\\n            check_a_largest = a == get_largest([a,b,c], ctx)\\n            if (\\n                check_a_largest\\n            ):\\n                dots = frozenset([a])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=True)\\nstate = select(state)\\n# End.\\n \\n# Them: Okay.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n \\n# You: Okay. <selection>.\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n\\n\\n# New.\\nctx = get_ctx()\\nstate = set()\\n\\n# You: Do you see a pair of dots, where the right dot is large-sized and dark, and the left dot is medium-sized and grey?\\ndef turn(state):\\n    # New question.\\n    results = set()\\n    orderedresults = []\\n    parents = []\\n    for config in getsets(idxs, 2):\\n        for x, y in permutations(config):\\n            check_xy_pair = all_close([x, y], ctx)\\n            check_x_left = is_left(x, y, ctx)\\n            check_x_medium = is_medium_size(x, ctx)\\n            check_x_grey = is_grey(x, ctx)\\n            check_y_right = is_right(y, x, ctx)\\n            check_y_large = is_large(y, ctx)\\n            check_y_dark = is_dark(y, ctx)\\n            if (\\n                check_xy_pair\\n                and check_x_left\\n                and check_x_medium\\n                and check_x_grey\\n                and check_y_right\\n                and check_y_large\\n                and check_y_dark\\n            ):\\n                dots = frozenset([x, y])\\n                if dots not in results:\\n                    results.add(dots)\\n                    orderedresults.append(dots)\\n                    parents.append(config)\\n    return sort_state(orderedresults, parents, ctx, select=False)\\nstate = turn(state)\\n# End.\\n\\n# Them: Yes. <eos>\\ndef noop(state):\\n    # No op.\\n    return state\\nstate = noop(state)\\n# End.\\n\\n# You: Let\'s select the one in the middle with the large size and dark color. <selection>\\ndef "}]}' message='Post details'
DEBUG:urllib3.connectionpool:https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
DEBUG:openai:message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=19544 request_id=c7bb1a8a47fb167e9b5ef6004d959900 response_code=200
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_send_message/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2&message=Yes&time_taken=0.41700005531311035 HTTP/1.1" 200 193 31.130588
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 329 0.002691
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002203
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001644
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001473
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001099
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001180
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001210
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000783
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000819
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000802
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001224
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000777
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000591
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000676
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001099
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000750
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003762
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.003537
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.004375
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002978
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003417
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001943
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001943
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001429
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001978
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001741
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001993
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001746
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001543
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001754
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001511
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001467
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001517
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001408
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001494
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001514
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001556
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001483
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001472
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001618
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001523
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/static/chat.wav HTTP/1.1" 206 197029 0.002046
INFO:web:::1 - - [2023-05-02 00:01:11] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002749
INFO:web:::1 - - [2023-05-02 00:01:12] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.001952
INFO:web:::1 - - [2023-05-02 00:01:12] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.001364
INFO:web:::1 - - [2023-05-02 00:01:13] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.000758
INFO:web:::1 - - [2023-05-02 00:01:14] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002779
INFO:web:::1 - - [2023-05-02 00:01:15] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003605
INFO:web:::1 - - [2023-05-02 00:01:15] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002706
INFO:web:::1 - - [2023-05-02 00:01:16] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.003284
INFO:web:::1 - - [2023-05-02 00:01:17] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002908
INFO:web:::1 - - [2023-05-02 00:01:18] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003598
INFO:web:::1 - - [2023-05-02 00:01:18] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002626
INFO:web:::1 - - [2023-05-02 00:01:19] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.003783
INFO:web:::1 - - [2023-05-02 00:01:20] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002634
INFO:web:::1 - - [2023-05-02 00:01:21] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 128 0.003803
INFO:web:::1 - - [2023-05-02 00:01:21] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.003822
INFO:web:::1 - - [2023-05-02 00:01:22] "GET /dialogue/_select_option/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2&selection=1 HTTP/1.1" 200 162 0.020727
INFO:web:::1 - - [2023-05-02 00:01:22] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 247 0.002757
INFO:web:::1 - - [2023-05-02 00:01:23] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.002858
DEBUG:web:Accepted chat with ID C_775aeffa7e14405c9547e10653714e1c for user U_aa7cacf439d34af89cab2e3dbc17cda2 (agent ID 1), and redirecting to survey
DEBUG:web:Setting controller for chat C_775aeffa7e14405c9547e10653714e1c to inactive
DEBUG:web:game_over_and_transition
INFO:web:::1 - - [2023-05-02 00:01:24] "GET /dialogue/_check_chat_valid/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 268 0.013705
INFO:web:::1 - - [2023-05-02 00:01:24] "GET /dialogue/_check_inbox/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 132 0.003329
INFO:web:::1 - - [2023-05-02 00:01:24] "GET /dialogue/_leave_chat/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 130 0.007056
INFO:web:::1 - - [2023-05-02 00:01:24] "GET /dialogue/_disconnect/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 130 0.006089
DEBUG:web:Got updated status survey for user U_aa7cacf439d34af89cab2e3dbc17cda2
INFO:web:::1 - - [2023-05-02 00:01:24] "GET /dialogue/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 5967 0.006284
INFO:web:::1 - - [2023-05-02 00:01:24] "GET /dialogue/_leave_chat/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 130 0.005262
INFO:web:::1 - - [2023-05-02 00:01:24] "GET /dialogue/_disconnect/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 130 0.005316
INFO:web:::1 - - [2023-05-02 00:01:24] "GET /dialogue/static/css/survey.css HTTP/1.1" 200 3893 0.001061
INFO:web:::1 - - [2023-05-02 00:01:25] "GET /dialogue/_connect/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 130 0.008727
DEBUG:web:User U_aa7cacf439d34af89cab2e3dbc17cda2 submitted survey for chat C_775aeffa7e14405c9547e10653714e1c
INFO:web:::1 - - [2023-05-02 00:01:29] "POST /dialogue/_submit_survey/ HTTP/1.1" 200 130 0.011783
INFO:web:::1 - - [2023-05-02 00:01:29] "GET /dialogue/_disconnect/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 130 0.007364
DEBUG:web:Got updated status finished for user U_aa7cacf439d34af89cab2e3dbc17cda2
DEBUG:web:Add C_775aeffa7e14405c9547e10653714e1c to completed scenarios
INFO:web:::1 - - [2023-05-02 00:01:29] "GET /dialogue/?uid=U_aa7cacf439d34af89cab2e3dbc17cda2 HTTP/1.1" 200 1588 0.008435
INFO:web:::1 - - [2023-05-02 00:01:29] "GET /dialogue/static/css/bootstrap.min.css HTTP/1.1" 200 106297 0.001073
